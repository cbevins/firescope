{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/component/tabs/Tabs.svelte","../../src/component/tabs/Tab.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/component/tabs/TabPanel.svelte","../../src/component/input/BehaviorSelector.svelte","../../src/model/format.js","../../src/component/scope/SvgFireTable.svelte","../../src/component/scope/Scope.svelte","../../src/component/input/InputSelector.svelte","../../src/component/input/OutputSelector.svelte","../../src/component/graph/Graph.svelte","../../src/component/table/Inputs.svelte","../../src/component/table/Outputs.svelte","../../src/component/reels/ReelBox.svelte","../../src/component/reels/Reels.svelte","../../src/component/app/Tabs.svelte","../../src/component/slider/Vertical.svelte","../../src/model/Variants.js","../../src/model/Variables.js","../../src/component/slider/AirTemperature.svelte","../../src/component/slider/DeadFuelMoisture.svelte","../../src/component/slider/ElapsedTime.svelte","../../src/component/input/FuelSelector.svelte","../../src/component/slider/LiveFuelMoisture.svelte","../../src/model/compass.js","../../src/component/slider/SlopeAspect.svelte","../../src/component/input/UnitsSelector.svelte","../../src/component/slider/WindSpeedDirection.svelte","../../src/model/behaveplus.esm.js","../../node_modules/@cbevins/behaveplus-uom/dist/bundle.esm.js","../../src/model/Firescope.js","../../src/model/store.js","../../src/component/app/InputPanel.svelte","../../src/component/app/Main.svelte","../../src/component/app/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\n\texport const TABS = {}\n</script>\n\n<script>\n\timport { setContext, onDestroy } from 'svelte'\n\timport { writable } from 'svelte/store'\n\n\tconst tabs = []\n\tconst panels = []\n\tconst selectedTab = writable(null)\n\tconst selectedPanel = writable(null)\n\n\tsetContext(TABS, {\n\t\tregisterTab: tab => {\n\t\t\ttabs.push(tab)\n\t\t\tselectedTab.update(current => current || tab)\n\n\t\t\tonDestroy(() => {\n\t\t\t\tconst i = tabs.indexOf(tab)\n\t\t\t\ttabs.splice(i, 1)\n\t\t\t\tselectedTab.update(current => current === tab ? (tabs[i] || tabs[tabs.length - 1]) : current)\n\t\t\t})\n\t\t},\n\n\t\tregisterPanel: panel => {\n\t\t\tpanels.push(panel)\n\t\t\tselectedPanel.update(current => current || panel)\n\n\t\t\tonDestroy(() => {\n\t\t\t\tconst i = panels.indexOf(panel)\n\t\t\t\tpanels.splice(i, 1)\n\t\t\t\tselectedPanel.update(current => current === panel ? (panels[i] || panels[panels.length - 1]) : current)\n\t\t\t})\n\t\t},\n\n\t\tselectTab: tab => {\n\t\t\tconst i = tabs.indexOf(tab)\n\t\t\tselectedTab.set(tab)\n\t\t\tselectedPanel.set(panels[i])\n\t\t},\n\n\t\tselectedTab,\n\t\tselectedPanel\n\t})\n</script>\n\n<div class=\"tabs\">\n\t<slot></slot>\n</div>\n","<script>\n\timport { getContext } from 'svelte'\n\timport { TABS } from './Tabs.svelte'\n\n\tconst tab = {}\n\tconst { registerTab, selectTab, selectedTab } = getContext(TABS)\n\n\tregisterTab(tab)\n</script>\n\n<style>\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tborder-bottom: 2px solid white;\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\tcolor: #ccc;\n\t}\n\n\t.selected {\n\t\tborder-bottom: 2px solid teal;\n\t\tcolor: #333;\n\t}\n</style>\n\n<button class:selected=\"{$selectedTab === tab}\" on:click=\"{() => selectTab(tab)}\">\n\t<slot></slot>\n</button>\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n\timport { fade, slide } from 'svelte/transition';\n\timport { getContext } from 'svelte'\n\timport { TABS } from './Tabs.svelte'\n\n\tconst panel = {}\n\tconst { registerPanel, selectedPanel } = getContext(TABS)\n\n\tregisterPanel(panel)\n</script>\n\n{#if $selectedPanel === panel}\n  <div transition:slide>\n\t  <slot></slot>\n  </div>\n{/if}\n","<script>\n  export let behavior\n  let behaviors = [\n    { v: 'spreadRate', text: 'Spread Rate'},\n    { v: 'spreadDistance', text: 'Spread Distance'},\n    { v: 'flameLength', text: 'Flame Length'},\n    { v: 'scorchHeight', text: 'ScorchHeight'},\n  ]\n</script>\n\n<select class='firescope-select' style='margin:5px' bind:value={behavior}>\n\t{#each behaviors as b}\n\t\t<option value={b.v}>{b.text}</option>\n\t{/each}\n</select>\n","export const thousands = (num, decimals) => {\n  const n = num.toFixed(decimals)\n  const numParts = n.toString().split('.')\n  numParts[0] = numParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  return numParts.join('.')\n}\n","<script>\n  import { thousands } from '../../model/format.js'\n\n  export let width\n  export let height\n  export let viewbox\n  export let _input\n  export let _output\n\n  let uom = $_input.uomSlate\n  $: {\n    uom = $_input.uomSlate\n  }\n</script>\n\n<svg viewBox={viewbox} width={width} height={height} >\n    {#each Object.keys($_output) as key, idx}\n      {#if $_output[key].group != 'Surface Primary'}\n      <!-- {#if $_output[key].group !== prevGroup}\n        <line class='sep-line' x1='0' y1={6*idx+6} x2='80' y2={6*idx+6} />\n        {prevGroup = $_output[key].group}\n      {/if} -->\n      <text x=\"0\" y={6*idx+6} class='firescope-svgtable-info-text'>\n        {$_output[key].group + ' ' +$_output[key].label}</text>\n      <text x=\"50\" y={6*idx+6} class='firescope-svgtable-value-text'>\n        {thousands($_output[key].value[uom], $_output[key].variant.decimals[uom])}</text>\n      <text x=\"70\" y={6*idx+6} class='firescope-svgtable-units-text'>\n        {$_output[key].variant.units[uom]}\n      </text>\n    {/if}\n  {/each}\n</svg>\n\n<style>\n  .firescope-svgtable-info-text {\n    font: normal 4px sans-serif;\n  }\n \t/* .sep-line {\n\t\tstroke: #111;\n\t\tstroke-width: 0.5;\n\t} */\n  .firescope-svgtable-units-text {\n    font: normal italic 4px sans-serif;\n    text-align: right;\n  }\n  .firescope-svgtable-value-text {\n    font: normal 4px sans-serif;\n    text-align: right;\n  }\n</style>\n","<script>\n  import BehaviorSelector from '../input/BehaviorSelector.svelte'\n  import SvgFireTable from './SvgFireTable.svelte'\n\n  export let width\n  export let height\n  export let _input\n  export let _output\n\n  function atX(origin, offset, deg) {\n    return origin + offset * Math.sin(deg * Math.PI / 180)\n  }\n  function atY(origin, offset, deg) {\n    return origin - offset * Math.cos(deg * Math.PI / 180)\n  }\n  function opposite(deg) { return deg >= 180 ? deg-180 : deg+180 }\n\n  let aspect = $_input.slopeDirectionAspect.value.base\n  let ellipseValue = $_input.behavior\n  let fireHeadingFromNorth = $_output.fireHeadingFromNorth.value.base\n  let fireBackingFromNorth = opposite(fireHeadingFromNorth)\n  let slope = $_input.slopeSteepnessRatio.value.base\n  let upslope = opposite(aspect)\n  let windFromNorth = $_input.windDirectionSourceFromNorth.value.base\n  let windHeading = opposite(windFromNorth)\n  let windSpeed = $_input.windSpeedAtMidflame.value.base\n  let wind = {visible: 'visible'}\n  let uom = $_input.uomSlate\n  let headingValue, flankingValue, backingValue\n  let headDist = $_output.headingSpreadDistance.value.base\n  let backDist = $_output.backingSpreadDistance.value.base\n\n  // viewport\n  const viewbox = \"0, 0, 130, 130\"\n  let vp = {x1: 0, y1: 0, w: 130, h: 130 }\n  vp.xc = (vp.x1 + vp.w/2)\n  vp.yc = (vp.y1 + vp.h/2)\n  vp.x2 = vp.x1 + vp.w\n  vp.y2 = vp.y1 + vp.h\n  const vpCenter = `translate(${vp.xc}, ${vp.yc})`\n\n  // compass has radius 50 plus margins of 10 for letters\n  let compass = {\n    r: 50, // compass dial radius\n    x: 65,  // compass center x\n    y: 65,  // compass center y\n    fw: 10, // compass font 'W' width\n    major: 10, // major tic length\n    minor: 5  // minor tic length\n  }\n  const center = `translate(${compass.x},${compass.y})`\n  const compassPos = `translate(5,5)`\n  const points = [\n    {deg: 0, text: 'N'},\n    {deg: 45, text: 'NE'},\n    {deg: 90, text: 'E'},\n    {deg: 135, text: 'SE'},\n    {deg: 180, text: 'S'},\n    {deg: 225, text: 'SW'},\n    {deg: 270, text: 'W'},\n    {deg: 315, text: 'NW'}\n  ]\n  points.forEach(p => {\n    p.x = atX(compass.x, compass.r+7, p.deg)\n    p.y = atY(compass.y, compass.r+7, p.deg)\n  })\n\n  // Slope bubble center location\n  let bubble = {x: 0, y: 0}\n  let fire = {x: 0, r: 35}\n\n  // The following is REQUIRED for units auto-updating\n  $: {\n    uom = $_input.uomSlate\n    slope = $_input.slopeSteepnessRatio.value.base\n    aspect = $_input.slopeDirectionAspect.value.base\n    upslope = opposite(aspect)\n\n    bubble.xup = atX(compass.x, compass.r-5, upslope)\n    bubble.yup = atY(compass.y, compass.r-5, upslope)\n    bubble.visible = (slope < 0.01) ? 'hidden' : 'visible'\n\n    windFromNorth = $_input.windDirectionSourceFromNorth.value.base\n    windHeading = opposite(windFromNorth)\n    windSpeed = $_input.windSpeedAtMidflame.value.base\n    wind.xup = atX(compass.x, compass.r-12, windHeading)\n    wind.yup = atY(compass.y, compass.r-12, windHeading)\n    wind.visible = (windSpeed < 0.1) ? 'hidden' : 'visible'\n\n    fireHeadingFromNorth = $_output.fireHeadingFromNorth.value.base\n    fireBackingFromNorth = opposite(fireHeadingFromNorth)\n    fire.x = fire.r / $_output.lengthToWidthRatio.value.base\n    fire.head = {\n      x: atX(compass.x, compass.r-20, fireHeadingFromNorth),\n      y: atY(compass.y, compass.r-20, fireHeadingFromNorth)\n    }\n    fire.back = {\n      x: atX(compass.x, compass.r-20, fireBackingFromNorth),\n      y: atY(compass.y, compass.r-20, fireBackingFromNorth)\n    }\n    fire.lwr = $_output.lengthToWidthRatio.value.base\n    fire.width = -fire.r / fire.lwr\n    fire.flank = {deg: (fireHeadingFromNorth+90)}\n    fire.flank.x = atX(compass.x, fire.width, fire.flank.deg),\n    fire.flank.y = atY(compass.y, fire.width, fire.flank.deg),\n    fire.flank0 = {x: -fire.r, y: width}\n\n    headDist = $_output.headingSpreadDistance.value.base\n    backDist = $_output.backingSpreadDistance.value.base\n    let radius = (backDist + headDist) / 2\n    let ratio = (radius > 0) ? (headDist - radius) / radius : 0\n    fire.ign = {\n      x: 0,\n      y: -fire.r * ratio\n    }\n\n    let ellipseValue = $_input.behavior\n    if (ellipseValue === 'spreadRate') {\n      headingValue = $_output.headingSpreadRate.value[uom].toFixed(0)\n      backingValue = $_output.backingSpreadRate.value[uom].toFixed(0)\n      flankingValue = $_output.flankingSpreadRate.value[uom].toFixed(0)\n    } else if (ellipseValue === 'spreadDistance') {\n      headingValue = $_output.headingSpreadDistance.value[uom].toFixed(0)\n      backingValue = $_output.backingSpreadDistance.value[uom].toFixed(0)\n      flankingValue = $_output.flankingSpreadDistance.value[uom].toFixed(0)\n    } else if (ellipseValue === 'flameLength') {\n      headingValue = $_output.headingFlameLength.value[uom].toFixed(0)\n      backingValue = $_output.backingFlameLength.value[uom].toFixed(0)\n      flankingValue = $_output.flankingFlameLength.value[uom].toFixed(0)\n    } else if (ellipseValue === 'scorchHeight') {\n      headingValue = ($_output.headingScorchHeight.value[uom]).toFixed(0)\n      backingValue = ($_output.backingScorchHeight.value[uom]).toFixed(0)\n      flankingValue = ($_output.flankingScorchHeight.value[uom]).toFixed(0)\n    }\n  }\n</script>\n\n<svg class=\"defs-only\" xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"0\" height=\"0\" style=\"display: block;\">\n  <defs>\n    <symbol id=\"fireCompass\" >\n      <circle r={compass.r} class=\"compass-face\"\n        transform='translate({compass.x},{compass.y})'/>\n      <!-- markers -->\n      {#each points as p}\n        <line\tclass='major-line' y1={compass.r-15} y2={compass.r}\ttransform='{center} rotate({p.deg})'/>\n        <text class='major-text' dominant-baseline=\"middle\" text-anchor=\"middle\"\n          x={p.x} y={p.y}>{p.text}</text>\n        <line\tclass='minor-line' y1={compass.r-10} y2={compass.r}\ttransform='{center} rotate({p.deg+15})'/>\n        <line\tclass='minor-line' y1={compass.r-10} y2={compass.r}\ttransform='{center} rotate({p.deg+30})'/>\n      {/each}\n    </symbol>\n\n    <symbol id='fireBox'>\n      <line class='minor-line' x1={vp.x1} y1={vp.y1} x2={vp.x1} y2={vp.y2} />\n      <image x=\"0\" y=\"0\" href=\"images/SEMfavicon.png\" height=\"12\" width=\"12\"/>\n      <text x=\"15\" y=\"8\" class='info-text'>FireScope 1.0.0</text>\n    </symbol>\n\n    <linearGradient id=\"fireGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:rgb(255,255,0);stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:rgb(255,0,0);stop-opacity:1\" />\n    </linearGradient>\n\n    <!-- fire ellipse -->\n    <symbol id='fireEllipse'>\n      <g transform='{center} rotate({fireHeadingFromNorth+180})'>\n        <!-- fire ellipse -->\n        {#each [1, .75, .5, .25] as f}\n          <ellipse cx=\"0\" cy={(1-f)*fire.ign.y} rx={f*fire.x} ry={f*fire.r} fill=\"url(#fireGradient)\" />\n        {/each}\n        <!-- major axis -->\n        <line class='minor-line' x1={-fire.r-2} y1=\"0\" x2={fire.r+2} y2=\"0\"\n          transform='rotate(90)'/>\n        <!-- minor axis -->\n        <line class='minor-line' x1={-fire.width+2} y1=\"0\" x2={fire.width-2} y2=\"0\" />\n        <!-- ignition point -->\n        <circle cx={fire.ign.x} cy={fire.ign.y} r=\"1\" stroke=\"black\" stroke-width=\".5\" fill=\"red\" />\n        <line class='minor-line' x1={fire.ign.x} y1={fire.ign.y}\n          x2={-fire.width} y2=\"0\" />\n        <line class='minor-line' x1={fire.ign.x} y1={fire.ign.y}\n          x2={fire.width} y2=\"0\" />\n      </g>\n    </symbol>\n\n    <symbol id='fireEllipseText'>\n      <text x={fire.head.x} y={fire.head.y} class='compass-text'\n          dominant-baseline=\"middle\" text-anchor=\"middle\">\n        {headingValue}\n      </text>\n      <text x={fire.back.x} y={fire.back.y} class='compass-text'\n          dominant-baseline=\"middle\" text-anchor=\"middle\">\n        {backingValue}\n      </text>\n      <text x={fire.flank.x} y={fire.flank.y} class='compass-text'\n          dominant-baseline=\"middle\" text-anchor=\"middle\">\n        {flankingValue}\n      </text>\n    </symbol>\n\n    <radialGradient id=\"slopeBubbleGradient\"\n        cx=\"50%\" cy=\"50%\" r=\"80%\" fx=\"50%\" fy=\"50%\">\n      <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"0\" />\n      <stop offset=\"100%\" stop-color=\"black\" stop-opacity=\".5\" />\n    </radialGradient>\n\n    <symbol id='slopeBubble'>\n      <g transform='{center} rotate({aspect})'>\n        <ellipse cx=\"0\" cy=\"45\" rx='5' ry='5'\n          style=\"visibility:{bubble.visible};\"\n          fill=\"url(#slopeBubbleGradient)\" />\n        <line class='slope-pointer'\ty1='48' y2='54'\n          style=\"visibility:{bubble.visible};\" />\n      </g>\n    </symbol>\n\n    <symbol id='slopeBubbleText'>\n      <text x={bubble.xup} y={bubble.yup} class='compass-text'\n        dominant-baseline=\"middle\" text-anchor=\"middle\"\n        style=\"visibility:{bubble.visible};\">\n        {(100*slope).toFixed(0)}</text>\n    </symbol>\n\n    <linearGradient id=\"windGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:rgb(200,200,240);stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:blue;stop-opacity:1\" />\n    </linearGradient>\n\n    <symbol id='windNeedle'>\n      <g transform='{center} rotate({windFromNorth})'>\n        <polygon class='wind-needle'\n          style=\"visibility:{wind.visible};\"\n          fill=\"url(#windGradient)\"\n          points=\"0,44 6,38, 4,38, 4,30, -4,30, -4,38, -6,38\" />\n          <!-- points=\"0,42 6,-42 0,-36 -6,-42\" /> -->\n      </g>\n    </symbol>\n\n    <symbol id='windNeedleText'>\n      <text x={wind.xup} y={wind.yup} class='compass-text'\n        dominant-baseline=\"middle\" text-anchor=\"middle\"\n        style=\"visibility:{wind.visible};\">\n          {(windSpeed/88).toFixed()}</text>\n    </symbol>\n  </defs>\n</svg>\n\n<div class='row'>\n  <div class='col'>\n    <div>\n      <svg viewBox={viewbox} width={width} height={height} >\n        <use xlink:href=\"#fireCompass\" transform={compassPos}/>\n        <use xlink:href=\"#slopeBubble\" transform={compassPos}/>\n        <use xlink:href=\"#slopeBubbleText\" transform={compassPos}/>\n        <use xlink:href=\"#windNeedle\" transform={compassPos}/>\n        <use xlink:href=\"#windNeedleText\" transform={compassPos}/>\n        <use xlink:href=\"#fireEllipse\" transform={compassPos}/>\n        <use xlink:href=\"#fireEllipseText\" transform={compassPos}/>\n        <use xlink:href=\"#fireBox\" transform='translate(0,0)'/>\n      </svg>\n    </div>\n    <div class='row'>\n      <div class='col-sm-3'></div>\n      <div class='col'>\n        <BehaviorSelector bind:behavior={$_input.behavior} />\n      </div>\n    </div>\n  </div>\n  <div class='col'>\n    <SvgFireTable viewbox=\"0, 0, 80, 130\"\n      width={width} height={height} _output={_output} _input={_input}/>\n  </div>\n</div>\n\n<style>\n  /* .firescope-box {\n    margin-bottom: 10px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.48);\n  } */\n  .compass-face {\n\t\tstroke: #333;\n    stroke-opacity: 50%;\n\t\tfill: white;\n\t}\n  .compass-text {\n    font: normal 6px sans-serif;\n  }\n  .info-text {\n    font: normal 4px sans-serif;\n  }\n\t.major-line {\n\t\tstroke: #111;\n\t\tstroke-width: 1;\n\t}\n  .major-text {\n    font: bold 8px sans-serif;\n  }\n\t.minor-line {\n\t\tstroke: #999;\n\t\tstroke-width: 0.5;\n\t}\n\t.slope-pointer {\n\t\tstroke: #f00;\n\t\tstroke-width: 0.5;\n\t}\n</style>\n","<script>\n  // This input selector is useful for selecting graph x variables\n  export let selected\n  export let _input\n  let items = []\n  Object.keys($_input).forEach(key => {\n    const item = $_input[key]\n    if (item.variant.type === 'Quantity') {\n      items.push({key: key, text: item.group + ' ' + item.label})\n    }\n  })\n</script>\n\n<select class='firescope-select' bind:value={selected}>\n\t{#each items as item}\n\t\t<option value={item.key}>{item.text}</option>\n\t{/each}\n</select>\n","<script>\n  // This output selector is useful for selecting graph y variables\n  export let selected\n  export let _output\n  let items = []\n  Object.keys($_output).forEach(key => {\n    const item = $_output[key]\n    if (item.variant.type === 'Quantity') {\n      items.push({key: key, text: item.group + ' ' + item.label})\n    }\n  })\n</script>\n\n<select class='firescope-select' bind:value={selected}>\n\t{#each items as item}\n\t\t<option value={item.key}>{item.text}</option>\n\t{/each}\n</select>\n","<script>\n  import InputSelector from '../input/InputSelector.svelte'\n  import OutputSelector from '../input/OutputSelector.svelte'\n\n  export let _input\n  export let _output\n</script>\n\n<table>\n  <tr>\n    <td>Idx</td>\n    <td><InputSelector bind:selected={$_input.graph.x.key} _input={_input}/></td>\n    <td><OutputSelector bind:selected={$_input.graph.y.key} _output={_output}/></td>\n  </tr>\n  {#each $_input.graph.x.values.base as x, idx}\n    <tr>\n      <td>{idx}</td>\n      <td>{x}</td>\n      <td>{$_input.graph.y.values.base[idx]}</td>\n    </tr>\n    {/each}\n</table>\n","<script>\n  import { thousands } from '../../model/format.js'\n\n  export let _input\n\n  let uom = $_input.uomSlate\n  $: uom = $_input.uomSlate\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n</svelte:head>\n\n<div style=\"overflow-x:auto;\">\n  <table class='firescope-table'>\n    {#each Object.keys($_input) as key}\n      <tr>\n        <td class='firescope-table-label'>\n          {$_input[key].group}&nbsp;{$_input[key].label}</td>\n        {#if $_input[key].variant.type === 'Quantity'}\n          <td class='firescope-table-value'>\n            {thousands($_input[key].value[uom], $_input[key].variant.decimals[uom])}</td>\n          <td class='firescope-table-units'>\n            {$_input[key].variant.units[uom]}</td>\n        {:else}\n          <td class='firescope-table-value'>{$_input[key].value.base}</td>\n          <td></td>\n        {/if}\n      </tr>\n    {/each}\n  </table>\n</div>\n","<script>\n  import { thousands } from '../../model/format.js'\n\n  export let _input\n  export let _output\n\n  let uom = $_input.uomSlate\n  $: uom = $_input.uomSlate\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n</svelte:head>\n\n<div style=\"overflow-x:auto;\">\n  <table class='firescope-table'>\n    {#each Object.keys($_output) as key}\n      {#if $_output[key].group != 'Surface Primary'}\n        <tr>\n          <td class='firescope-table-label'>\n            {$_output[key].group}&nbsp;{$_output[key].label}</td>\n          <td class='firescope-table-value'>\n            {thousands($_output[key].value[uom], $_output[key].variant.decimals[uom])}</td>\n          <td class='firescope-table-units'>\n            {$_output[key].variant.units[uom]}</td>\n        </tr>\n        {/if}\n    {/each}\n  </table>\n</div>\n","<script>\n  export let title1\n  export let title2\n  export let units\n  export let value\n</script>\n\n<div class='firescope-reel-box'>\n  <div class='firescope-reel-title'>{title1}</div>\n  <div class='firescope-reel-title'>{title2}</div>\n  <div class='firescope-reel-units'>{units}</div>\n  <div class='firescope-reel-value'>{value}</div>\n</div>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n  .firescope-reel-box {\n    font-family: \"Lucida Sans\", sans-serif;\n    font-size: 16px;\n    width: 100px;\n    padding-left: 5px;\n    padding-right: 5px;\n    margin: 0;\n    float: left;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.24), 0 1px 2px rgba(0,0,0,0.48);\n  }\n  .firescope-reel-title {\n    font: bold 20px sans-serif;\n    text-align: center;\n    display: block;\n  }\n  .firescope-reel-units {\n    font: oblique 16px sans-serif;\n    text-align: center;\n    display: block;\n  }\n  .firescope-reel-value {\n    font: normal 20px sans-serif;\n    text-align: center;\n    display: block;\n  }\n</style>\n","<script>\n  import ReelBox from './ReelBox.svelte'\n  export let _input\n  export let _output\n  let uomSlate = $_input.uomSlate\n  $: {\n    uomSlate = $_input.uomSlate\n  }\n</script>\n\n<div class=\"firescope-reels-slider-row\">\n  <ReelBox title1='Spread' title2='Rate'\n    units={$_output.spreadRate.variant.units[uomSlate]}\n    value={$_output.spreadRate.value[uomSlate].toFixed(2)} />\n  <ReelBox title1='Fire' title2='Heading'\n    units='&#x00B0 from N';\n    value={$_output.fireHeadingFromNorth.value[uomSlate].toFixed(0)} />\n  <ReelBox title1='Flame' title2='Length'\n    units={$_output.flameLength.variant.units[uomSlate]}\n    value={$_output.flameLength.value[uomSlate].toFixed(2)} />\n  <ReelBox title1='Scorch' title2='Height'\n    units={$_output.scorchHeight.variant.units[uomSlate]}\n    value={$_output.scorchHeight.value[uomSlate].toFixed(2)} />\n  <ReelBox title1='Fire' title2='Area'\n    units={$_output.fireArea.variant.units[uomSlate]}\n    value={$_output.fireArea.value[uomSlate].toFixed(2)} />\n  <ReelBox title1='Fire' title2='Perim'\n    units={$_output.firePerimeter.variant.units[uomSlate]}\n    value={$_output.firePerimeter.value[uomSlate].toFixed(0)} />\n</div>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .firescope-reels-slider-row::after {\n    content: \"\";\n    clear: both;\n    display: table;\n  }\n</style>\n","<script>\n  import Tab from '../tabs/Tab.svelte'\n  import Tabs from '../tabs/Tabs.svelte'\n  import TabList from '../tabs/TabList.svelte'\n  import TabPanel from '../tabs/TabPanel.svelte'\n\n  import FireScope from '../scope/Scope.svelte'\n  import Graph from '../graph/Graph.svelte'\n  import Inputs from '../table/Inputs.svelte'\n  import Outputs from '../table/Outputs.svelte'\n  import Reels from '../reels/Reels.svelte'\n\n  export let _input\n  export let _output\n</script>\n\n<Tabs>\n\t<TabList>\n\t\t<Tab>Firescope</Tab>\n\t\t<Tab>Reels</Tab>\n\t\t<Tab>Inputs</Tab>\n\t\t<Tab>Outputs</Tab>\n\t\t<Tab>Graph</Tab>\n\t</TabList>\n\n\t<TabPanel>\n    <FireScope width=300 height=300 _output={_output} _input={_input}/>\n\t</TabPanel>\n\n\t<TabPanel>\n    <Reels _input={_input} _output={_output} />\n\t</TabPanel>\n\n\t<TabPanel>\n    <Inputs _input={_input} />\n\t</TabPanel>\n\n\t<TabPanel>\n    <Outputs _input={_input} _output={_output} />\n\t</TabPanel>\n\n\t<TabPanel>\n    <Graph _input={_input} _output={_output} />\n\t</TabPanel>\n</Tabs>\n","<script>\n  export let label\n  export let min = 0\n  export let max = 100\n  export let step = 1\n  export let value = 0\n  export let format1 = (v) => v\n  export let format2 = (v) => v\n\n  function down() {value = Math.max(min, value-step)}\n  function up() {value = Math.min(max, value+step)}\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n  <script defer src=\"/fontawesome/js/all.js\"></script>\n</svelte:head>\n\n<div class=\"firescope-vslider\">\n  <p class=\"firescope-vslider-label\">{label}</p>\n  <p class=\"firescope-vslider-value\">{format1(value)}</p>\n  <p class=\"firescope-vslider-value\">{format2(value)}</p>\n  <p class=\"firescope-vslider-value\">\n    <button class=\"firescope-vslider-arrow\" on:click={up}>\n      <i class=\"fas fa-angle-up\"></i>\n    </button>\n    <button class=\"firescope-vslider-arrow\" on:click={down}>\n      <i class=\"fas fa-angle-down\"></i>\n    </button>\n  </p>\n  <div class=\"firescope-vslider-wrapper\">\n    <input bind:value={value} type=\"range\" min={min} max={max} step={step}/>\n  </div>\n</div>\n","/**\n * Defines all the variants used by Firescope.\n * These shadow the behaveplus-radical Variants.\n */\n// Variant units-of-measure\nexport const Units = {\n  base: 'base', //  ft, lb, btu, min, ratio\n  usc: 'US Customary', //  ft, lb, btu, min, percent\n  uss: 'US Surveyor', //  ft, lb, btu, min, percent\n  sim: 'SI (metric)' // m, kg, J, min, percent\n}\n\nconst quantity = 'Quantity'\nconst option = 'Option'\n\nexport const Variant = {\n  compassAzimuth: {\n    type: quantity,\n    units: { base: 'deg', usc: 'deg', uss: 'deg', sim: 'deg' },\n    decimals: { base: 0, usc: 0, uss: 0, sim: 0 }\n  },\n  fireArea: {\n    type: quantity,\n    units: { base: 'ft2', usc: 'ac', uss: 'ac', sim: 'ha' },\n    decimals: { base: 0, usc: 2, uss: 2, sim: 2 }\n  },\n  fireDistance: {\n    type: quantity,\n    units: { base: 'ft', usc: 'ft', uss: 'ch', sim: 'm' },\n    decimals: { base: 0, usc: 2, uss: 2, sim: 0 }\n  },\n  fireHeatPerUnitArea: {\n    type: quantity,\n    units: { base: 'btu/ft2', usc: 'btu/ft2', uss: 'btu/ft2', sim: 'J/m2' },\n    decimals: { base: 0, usc: 0, uss: 0, sim: 0 }\n  },\n  fireFirelineIntensity: {\n    type: quantity,\n    units: { base: 'btu/ft/s', usc: 'btu/ft/s', uss: 'btu/ft/s', sim: 'J/m/s' },\n    decimals: { base: 0, usc: 0, uss: 0, sim: 0 }\n  },\n  fireFlameLength: {\n    type: quantity,\n    units: { base: 'ft', usc: 'ft', uss: 'ft', sim: 'm' },\n    decimals: { base: 2, usc: 2, uss: 2, sim: 2 }\n  },\n  fireLengthToWidthRatio: {\n    type: quantity,\n    units: { base: 'ratio', usc: 'ratio', uss: 'ratio', sim: 'ratio' },\n    decimals: { base: 2, usc: 2, uss: 2, sim: 2 }\n  },\n  fireReactionIntensity: {\n    type: quantity,\n    units: { base: 'btu/ft2/min', usc: 'btu/ft2/min', uss: 'btu/ft2/min', sim: 'J/m2/min' },\n    decimals: { base: 0, usc: 0, uss: 0, sim: 0 }\n  },\n  fireScorchHt: {\n    type: quantity,\n    units: { base: 'ft', usc: 'ft', uss: 'ft', sim: 'm' },\n    decimals: { base: 2, usc: 2, uss: 2, sim: 2 }\n  },\n  fireSpreadRate: {\n    type: quantity,\n    units: { base: 'ft/min', usc: 'ft/min', uss: 'ch/h', sim: 'm/min' },\n    decimals: { base: 2, usc: 2, uss: 2, sim: 2 }\n  },\n  fireTime: {\n    type: quantity,\n    units: { base: 'min', usc: 'h', uss: 'h', sim: 'h' },\n    decimals: { base: 0, usc: 2, uss: 2, sim: 2 }\n  },\n  fuelFraction: { // cured fraction, cover fraction\n    type: quantity,\n    units: { base: 'ratio', usc: '%', uss: '%', sim: '%' },\n    decimals: { base: 2, usc: 0, uss: 0, sim: 0 }\n  },\n  fuelModelKey: {\n    type: option\n  },\n  fuelMoisture: {\n    type: quantity,\n    units: { base: 'ratio', usc: '%', uss: '%', sim: '%' },\n    decimals: { base: 2, usc: 0, uss: 0, sim: 0 }\n  },\n  slopeSteepness: {\n    type: quantity,\n    units: { base: 'ratio', usc: '%', uss: '%', sim: '%' },\n    decimals: { base: 2, usc: 0, uss: 0, sim: 0 }\n  },\n  temperature: {\n    type: quantity,\n    units: { base: 'F', usc: 'F', uss: 'F', sim: 'C' },\n    decimals: { base: 0, usc: 0, uss: 0, sim: 0 }\n  },\n  windSpeed: {\n    type: quantity,\n    units: { base: 'ft/min', usc: 'mi/h', uss: 'mi/h', sim: 'km/h' },\n    decimals: { base: 0, usc: 0, uss: 0, sim: 0 }\n  }\n}\n","/**\n * Firescope variables\n */\nimport { Variant } from './Variants.js'\n\n// Single-fuel surface fire ellipse\nexport const Config = [\n  ['configure.fire.effectiveWindSpeedLimit', ['applied', 'ignored'][1]],\n  ['configure.fire.weightingMethod', ['arithmetic', 'expected', 'harmonic'][0]],\n  ['configure.fuel.curedHerbFraction', ['input', 'estimated'][1]],\n  ['configure.fuel.moisture', ['individual', 'liveCategory', 'category', 'catalog'][0]],\n  ['configure.fuel.primary', ['catalog', 'behave', 'chaparral', 'palmettoGallberry', 'westernAspen'][0]],\n  ['configure.fuel.secondary', ['none', 'catalog', 'behave', 'chaparral', 'palmettoGallberry', 'westernAspen'][0]],\n  ['configure.slope.steepness', ['ratio', 'degrees', 'map'][0]],\n  ['configure.wind.direction', ['sourceFromNorth', 'headingFromUpslope', 'upslope'][0]],\n  ['configure.wind.speed', ['at10m', 'at20ft', 'atMidflame'][2]],\n  ['configure.fire.vector', ['fromHead', 'fromUpslope', 'fromNorth'][0]],\n  // Less important\n  ['configure.fire.firelineIntensity', ['firelineIntensity', 'flameLength'][1]],\n  ['configure.fire.lengthToWidthRatio', ['lengthToWidthRatio', 'effectiveWindSpeed'][0]],\n  ['configure.fuel.chaparralTotalLoad', ['input', 'estimated'][0]],\n  ['configure.fuel.windSpeedAdjustmentFactor', ['input', 'estimated'][0]]\n]\n\n// Predefined literals\nconst backing = 'Backing'\nconst direction = 'Fire Heading'\nconst distance = 'Spread Distance'\nconst ellipse = 'Ellipse'\nconst flame = 'Flame Length'\nconst flanking = 'Flanking'\nconst fli = 'Fireline Intensity'\nconst fuel = 'Fuel'\nconst heading = 'Heading'\nconst hpua = 'Heat per Unit Area'\nconst moisture = 'Fuel Moisture'\nconst primary = 'Surface Primary'\nconst ros = 'Spread Rate'\nconst rxi = 'Reaction Intensity'\nconst scorch = 'Scorch Height'\nconst slope = 'Slope'\nconst wind = 'Wind'\n\nexport const Input = {\n  fuelModelCatalogKey: {\n    group: fuel,\n    label: 'Model Key',\n    nodeKey: 'surface.primary.fuel.model.catalogKey',\n    variant: Variant.fuelModelKey,\n    range: null,\n    value: { base: 'gs4' }\n  },\n  fuelMoistureDead1: {\n    group: moisture,\n    label: 'Dead 1-h',\n    nodeKey: 'site.moisture.dead.tl1h',\n    variant: Variant.fuelMoisture,\n    range: { min: 0.01, max: 0.4, step: 0.01 },\n    value: { base: 0.05 }\n  },\n  fuelMoistureDead10: {\n    group: moisture,\n    label: 'Dead 10-h',\n    nodeKey: 'site.moisture.dead.tl10h',\n    variant: Variant.fuelMoisture,\n    range: { min: 0.01, max: 0.4, step: 0.01 },\n    value: { base: 0.07 }\n  },\n  fuelMoistureDead100: {\n    group: moisture,\n    label: 'Dead 100-h',\n    nodeKey: 'site.moisture.dead.tl100h',\n    variant: Variant.fuelMoisture,\n    range: { min: 0.01, max: 0.4, step: 0.01 },\n    value: { base: 0.09 }\n  },\n  fuelMoistureLiveHerb: {\n    group: moisture,\n    label: 'Live Herb',\n    nodeKey: 'site.moisture.live.herb',\n    variant: Variant.fuelMoisture,\n    range: { min: 0.3, max: 4, step: 0.1 },\n    value: { base: 0.5 }\n  },\n  fuelMoistureLiveStem: {\n    group: moisture,\n    label: 'Live Stem',\n    nodeKey: 'site.moisture.live.stem',\n    variant: Variant.fuelMoisture,\n    range: { min: 0.3, max: 4, step: 0.1 },\n    value: { base: 0.5 }\n  },\n  slopeDirectionAspect: {\n    group: slope,\n    label: 'Aspect',\n    nodeKey: 'site.slope.direction.aspect',\n    variant: Variant.compassAzimuth,\n    range: { min: 0, max: 360, step: 5 },\n    value: { base: 225 }\n  },\n  slopeSteepnessRatio: {\n    group: slope,\n    label: 'Steepness',\n    nodeKey: 'site.slope.steepness.ratio',\n    variant: Variant.slopeSteepness,\n    range: { min: 0, max: 5, step: 0.05 }, // 0-200%, and 5% is 3 deg\n    value: { base: 1 }\n  },\n  windDirectionSourceFromNorth: {\n    group: wind,\n    label: 'Source from North',\n    nodeKey: 'site.wind.direction.source.fromNorth',\n    variant: Variant.compassAzimuth,\n    range: { min: 0, max: 360, step: 5 },\n    value: { base: 270 }\n  },\n  windSpeedAtMidflame: {\n    group: wind,\n    label: 'Speed at Midflame Height',\n    nodeKey: 'site.wind.speed.atMidflame',\n    variant: Variant.windSpeed,\n    range: { min: 0, max: 40 * 88, step: 88 },\n    value: { base: 880 }\n  },\n  airTemperature: {\n    group: 'Air',\n    label: 'Temperature',\n    nodeKey: 'site.temperature.air',\n    variant: Variant.temperature,\n    range: { min: 30, max: 120, step: 5 },\n    value: { base: 75 }\n  },\n  timeSinceIgnition: {\n    group: 'Time',\n    label: 'Since Ignition',\n    nodeKey: 'site.fire.time.sinceIgnition',\n    variant: Variant.fireTime,\n    range: { min: 0, max: 24 * 60, step: 15 },\n    value: { base: 60 }\n  }\n}\n\n// Output tables list properties in their order\nexport const Output = {\n  fireArea: {\n    group: ellipse,\n    label: 'Area',\n    nodeKey: 'surface.fire.ellipse.size.area',\n    variant: Variant.fireArea,\n    value: { base: 0 }\n  },\n  firePerimeter: {\n    group: ellipse,\n    label: 'Perimeter',\n    nodeKey: 'surface.fire.ellipse.size.perimeter',\n    variant: Variant.fireDistance,\n    value: { base: 0 }\n  },\n  lengthToWidthRatio: {\n    group: ellipse,\n    label: 'Length/Width Ratio',\n    nodeKey: 'surface.weighted.fire.lengthToWidthRatio',\n    variant: Variant.fireLengthToWidthRatio,\n    value: { base: 1 }\n  },\n  fireLength: {\n    group: ellipse,\n    label: 'Length',\n    nodeKey: 'surface.fire.ellipse.size.length',\n    variant: Variant.fireDistance,\n    value: { base: 0 }\n  },\n  fireWidth: {\n    group: ellipse,\n    label: 'Width',\n    nodeKey: 'surface.fire.ellipse.size.width',\n    variant: Variant.fireDistance,\n    value: { base: 0 }\n  },\n  fireHeadingFromNorth: {\n    group: direction,\n    label: 'from North',\n    nodeKey: 'surface.weighted.fire.heading.fromNorth',\n    variant: Variant.compassAzimuth,\n    value: { base: 0 }\n  },\n  fireHeadingFromUpslope: {\n    group: direction,\n    label: 'from Upslope',\n    nodeKey: 'surface.weighted.fire.heading.fromUpslope',\n    variant: Variant.compassAzimuth,\n    value: { base: 0 }\n  },\n  headingSpreadRate: {\n    group: heading,\n    label: ros,\n    nodeKey: 'surface.fire.ellipse.head.spreadRate',\n    variant: Variant.fireSpreadRate,\n    value: { base: 0 }\n  },\n  headingSpreadDistance: {\n    group: heading,\n    label: distance,\n    nodeKey: 'surface.fire.ellipse.head.spreadDistance',\n    variant: Variant.fireDistance,\n    value: { base: 0 }\n  },\n  headingFlameLength: {\n    group: heading,\n    label: flame,\n    nodeKey: 'surface.fire.ellipse.head.flameLength',\n    variant: Variant.fireFlameLength,\n    value: { base: 0 }\n  },\n  headingScorchHeight: {\n    group: heading,\n    label: scorch,\n    nodeKey: 'surface.fire.ellipse.head.scorchHeight',\n    variant: Variant.fireScorchHt,\n    value: { base: 0 }\n  },\n  flankingSpreadRate: {\n    group: flanking,\n    label: ros,\n    nodeKey: 'surface.fire.ellipse.flank.spreadRate',\n    variant: Variant.fireSpreadRate,\n    value: { base: 0 }\n  },\n  flankingSpreadDistance: {\n    group: flanking,\n    label: distance,\n    nodeKey: 'surface.fire.ellipse.flank.spreadDistance',\n    variant: Variant.fireDistance,\n    value: { base: 0 }\n  },\n  flankingFlameLength: {\n    group: flanking,\n    label: flame,\n    nodeKey: 'surface.fire.ellipse.flank.flameLength',\n    variant: Variant.fireFlameLength,\n    value: { base: 0 }\n  },\n  flankingScorchHeight: {\n    group: flanking,\n    label: scorch,\n    nodeKey: 'surface.fire.ellipse.flank.scorchHeight',\n    variant: Variant.fireScorchHt,\n    value: { base: 0 }\n  },\n  backingSpreadRate: {\n    group: backing,\n    label: ros,\n    nodeKey: 'surface.fire.ellipse.back.spreadRate',\n    variant: Variant.fireSpreadRate,\n    value: { base: 0 }\n  },\n  backingFlameLength: {\n    group: backing,\n    label: flame,\n    nodeKey: 'surface.fire.ellipse.back.flameLength',\n    variant: Variant.fireFlameLength,\n    value: { base: 0 }\n  },\n  backingSpreadDistance: {\n    group: backing,\n    label: distance,\n    nodeKey: 'surface.fire.ellipse.back.spreadDistance',\n    variant: Variant.fireDistance,\n    value: { base: 0 }\n  },\n  backingScorchHeight: {\n    group: backing,\n    label: scorch,\n    nodeKey: 'surface.fire.ellipse.back.scorchHeight',\n    variant: Variant.fireScorchHt,\n    value: { base: 0 }\n  },\n  spreadRate: {\n    group: primary,\n    label: ros,\n    nodeKey: 'surface.weighted.fire.spreadRate',\n    variant: Variant.fireSpreadRate,\n    value: { base: 0 }\n  },\n  reactionIntensity: {\n    group: primary,\n    label: rxi,\n    nodeKey: 'surface.weighted.fire.reactionIntensity',\n    variant: Variant.fireReactionIntensity,\n    value: { base: 0 }\n  },\n  firelineIntensity: {\n    group: primary,\n    label: fli,\n    nodeKey: 'surface.weighted.fire.firelineIntensity',\n    variant: Variant.fireFirelineIntensity,\n    value: { base: 0 }\n  },\n  flameLength: {\n    group: primary,\n    label: flame,\n    nodeKey: 'surface.weighted.fire.flameLength',\n    variant: Variant.fireFlameLength,\n    value: { base: 0 }\n  },\n  heatPerUnitArea: {\n    group: primary,\n    label: hpua,\n    nodeKey: 'surface.weighted.fire.heatPerUnitArea',\n    variant: Variant.fireHeatPerUnitArea,\n    value: { base: 0 }\n  },\n  scorchHeight: {\n    group: primary,\n    label: scorch,\n    nodeKey: 'surface.weighted.fire.scorchHeight',\n    variant: Variant.fireScorchHt,\n    value: { base: 0 }\n  },\n  curedHerbFraction: {\n    group: fuel,\n    label: 'Cured Herb Fraction',\n    nodeKey: 'surface.primary.fuel.model.behave.parms.cured.herb.fraction',\n    variant: Variant.fuelFraction,\n    range: { min: 0, max: 1, step: 0.01 },\n    value: { base: 0 }\n  }\n}\n","<script>\r\n  import Vertical from './Vertical.svelte'\r\n  import { Input } from '../../model/Variables.js'\r\n\r\n  export let f\r\n\r\n  const range = Input.airTemperature.range\r\n  function fahrenheit(f) { return f.toFixed(0) + '\\u2109'}\r\n  function centigrade(f) { return (5 * (f-32) / 9).toFixed(0) + '\\u2103' }\r\n</script>\r\n\r\n<svelte:head>\r\n  <link rel=\"stylesheet\" href=\"firescope.css\">\r\n</svelte:head>\r\n\r\n<div class=\"firescope-vslider-group-1\">\r\n  <p class=\"firescope-vslider-title\">Temp</p>\r\n    <Vertical bind:value={f} label='Air'\r\n      min={range.min} max={range.max} step={range.step}\r\n      format1={fahrenheit}\r\n      format2={centigrade}\r\n    />\r\n</div>\r\n","<script>\n  import Vertical from './Vertical.svelte'\n  import { Input } from '../../model/Variables.js'\n\n  export let tl1h\n  export let tl10h\n  export let tl100h\n\n  const range = Input.fuelMoistureDead1.range\n  function format1(v) {return '\\u00A0'}\n  function format2(v) {return (100 * v).toFixed(0) + '%'}\n\n  let items = [\n    {label: '1-h', value: tl1h},\n    {label: '10-h', value: tl10h},\n    {label: '100-h', value: tl100h},\n  ]\n  $: {\n    tl1h = items[0].value\n    tl10h = items[1].value\n    tl100h = items[2].value\n  }\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n</svelte:head>\n\n<div class=\"firescope-vslider-group-3\">\n  <p class=\"firescope-vslider-title\">Dead Fuel Moisture</p>\n  {#each items as item}\n    <Vertical bind:value={item.value} label={item.label}\n      min={range.min} max={range.max} step={range.step}\n      format1={format1}\n      format2={format2}\n    />\n  {/each}\n</div>\n","<script>\n  import Vertical from './Vertical.svelte'\n  import { Input } from '../../model/Variables.js'\n\n  export let minutes\n\n  const range = Input.timeSinceIgnition.range\n  function format1(min) { return 'Ignited'}\n  function format2(min) { return (min===0) ? 0 : (min/60).toFixed(2) + 'h'}\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n</svelte:head>\n\n<div class=\"firescope-vslider-group-1\">\n  <p class=\"firescope-vslider-title\">Time</p>\n    <Vertical bind:value={minutes} label='Since'\n      min={range.min} max={range.max} step={range.step}\n      format1={format1}\n      format2={format2}\n    />\n</div>\n","<script>\n  export let key\n\n  let fuels = [\n    { key: '1', text: '1: Short grass'},\n    { key: '2', text: '2: Timber grass and understory'},\n    { key: '3', text: '3: Tall grass'},\n    { key: '4', text: '4: Chaparral'},\n    { key: '5', text: '5: Brush'},\n    { key: '6', text: '6: Dormant brush, hardwood slash'},\n    { key: '7', text: '7: Southern rough'},\n    { key: '8', text: '8: Short needle litter'},\n    { key: '9', text: '9: Long needle or hardwood litter'},\n    { key: '10', text: '10: Timber litter & understory'},\n    { key: '11', text: '11: Light logging slash'},\n    { key: '12', text: '12: Medium logging slash'},\n    { key: '13', text: '13: Heavy logging slash'},\n    { key: 'gr1', text: 'gr1: Short, sparse, dry climate grass'},\n    { key: 'gr2', text: 'gr2: Low load, dry climate grass'},\n    { key: 'gr3', text: 'gr3: Low load, very coarse, humid climate grass'},\n    { key: 'gr4', text: 'gr4: Moderate load, dry climate grass'},\n    { key: 'gr5', text: 'gr5: Low load, humid climate grass'},\n    { key: 'gr6', text: 'gr6: Moderate load, humid climate grass'},\n    { key: 'gr7', text: 'gr7: High load, dry climate grass'},\n    { key: 'gr8', text: 'gr8: High load, very coarse, humid climate grass'},\n    { key: 'gr9', text: 'gr9: Very high load, humid climate grass'},\n    { key: 'gs1', text: 'gs1: Low load, dry climate grass-shrub'},\n    { key: 'gs2', text: 'gs2: Moderate load, dry climate grass-shrub'},\n    { key: 'gs3', text: 'gs3: Moderate load, humid climate grass-shrub'},\n    { key: 'gs4', text: 'gs4: High load, humid climate grass-shrub'},\n    { key: 'sh1', text: 'sh1: Low load, dry climate shrub'},\n    { key: 'sh2', text: 'sh2: Moderate load, dry climate shrub'},\n    { key: 'sh3', text: 'sh3: Moderate load, humid climate shrub'},\n    { key: 'sh4', text: 'sh4: Low load, humid climate timber-shrub'},\n    { key: 'sh5', text: 'sh5: High load, dry climate shrub'},\n    { key: 'sh6', text: 'sh6: Low load, humid climate shrub'},\n    { key: 'sh7', text: 'sh7: Very high load, dry climate shrub'},\n    { key: 'sh8', text: 'sh8: High load, humid climate shrub'},\n    { key: 'sh9', text: 'sh9: Very high load, humid climate shrub'},\n    { key: 'tu1', text: 'tu1: Light load, dry climate timber-grass-shrub'},\n    { key: 'tu2', text: 'tu2: Moderate load, humid climate timber-shrub'},\n    { key: 'tu3', text: 'tu3: Moderate load, humid climate timber-grass-shrub'},\n    { key: 'tu4', text: 'tu4: Dwarf conifer understory'},\n    { key: 'tu5', text: 'tu5: Very high load, dry climate timber-shrub'},\n    { key: 'tl1', text: 'tl1: Low load, compact conifer litter'},\n    { key: 'tl2', text: 'tl2: Low load broadleaf litter'},\n    { key: 'tl3', text: 'tl3: Moderate load conifer litter'},\n    { key: 'tl4', text: 'tl4: Small downed logs'},\n    { key: 'tl5', text: 'tl5: High load conifer litter'},\n    { key: 'tl6', text: 'tl6: High load broadleaf litter'},\n    { key: 'tl7', text: 'tl7: Large downed logs'},\n    { key: 'tl8', text: 'tl8: Long-needle litter'},\n    { key: 'tl9', text: 'tl9: Very high load broadleaf litter'},\n    { key: 'sb1', text: 'sb1: Low load activity fuel'},\n    { key: 'sb2', text: 'sb2: Moderate load activity or low load blowdown'},\n    { key: 'sb3', text: 'sb3: High load activity fuel or moderate load blowdown'},\n    { key: 'sb4', text: 'sb4: High load blowdown'},\n  ]\n</script>\n\n<select class='firescope-select' style='width:285px;' bind:value={key}>\n\t{#each fuels as fuel}\n\t\t<option value={fuel.key}>{fuel.text}</option>\n\t{/each}\n</select>\n","<script>\n  import Vertical from './Vertical.svelte'\n  import { Input } from '../../model/Variables.js'\n\n  export let herb\n  export let stem\n\n  const range = Input.fuelMoistureLiveHerb.range\n  function format1(v) {return '\\u00A0'}\n  function format2(v) {return (100 * v).toFixed(0) + '%'}\n\nlet items = [\n    {label: 'herb', value: herb},\n    {label: 'stem', value: stem},\n  ]\n  $: {\n    herb = items[0].value\n    stem = items[1].value\n  }\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n</svelte:head>\n\n<div class=\"firescope-vslider-group-2\">\n  <p class=\"firescope-vslider-title\">Live Fuel Moist</p>\n  {#each items as item}\n    <Vertical bind:value={item.value} label={item.label}\n      min={range.min} max={range.max} step={range.step}\n      format1={format1}\n      format2={format2}\n    />\n  {/each}\n</div>\n","export function point(azimuth) {\n  const Dir = ['NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE',\n    'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW']\n  const span = 360 / (Dir.length + 1)\n  const half = span / 2\n  if (azimuth < half || azimuth >= 360-half) return 'N'\n  const idx = Math.trunc((azimuth - half) / span)\n  return Dir[idx]\n}\n\nexport function toDegrees (rad) {\n  return (rad * 180) / Math.PI\n}\n\nexport function toRadians (deg) {\n  return (deg * Math.PI) / 180\n}\n\nexport function slopeDegrees (ratio) {\n  const rad = Math.atan(ratio)\n  return toDegrees(rad)\n}\n\nexport function slopeRatio (deg) {\n  const rad = toRadians(deg)\n  return Math.tan(rad)\n}\n","<script>\r\n  import Vertical from './Vertical.svelte'\r\n  import { Input } from '../../model/Variables.js'\r\n  import * as Compass from '../../model/compass.js'\r\n\r\n  export let aspect\r\n  export let steepness\r\n\r\n  const aspectRange = Input.slopeDirectionAspect.range\r\n  const steepnessRange = Input.slopeSteepnessRatio.range\r\n\r\n  function aspectDegrees(aspect) {return aspect.toFixed(0) + '\\u00B0'}\r\n  function aspectDirection(aspect) {return Compass.point(aspect)}\r\n  function steepnessDegrees(ratio) {return Compass.slopeDegrees(ratio).toFixed(0) + '\\u00B0'}\r\n  function steepnessPercent(ratio) {return (100 * ratio).toFixed(0) + '%'}\r\n</script>\r\n\r\n<svelte:head>\r\n  <link rel=\"stylesheet\" href=\"firescope.css\">\r\n</svelte:head>\r\n\r\n<div class=\"firescope-vslider-group-2\">\r\n  <p class=\"firescope-vslider-title\">Slope</p>\r\n    <Vertical bind:value={steepness} label='Steep'\r\n      min={steepnessRange.min} max={steepnessRange.max} step={steepnessRange.step}\r\n      format1={steepnessDegrees}\r\n      format2={steepnessPercent}\r\n    />\r\n\r\n    <Vertical bind:value={aspect} label='Asp'\r\n      min={aspectRange.min} max={aspectRange.max} step={aspectRange.step}\r\n      format1={aspectDegrees}\r\n      format2={aspectDirection}\r\n    />\r\n</div>\r\n","<script>\n  export let units\n  let uoms = [\n    { u: 'usc', text: 'US Customary'},\n    { u: 'sim', text: 'SI Metric'},\n    { u: 'uss', text: 'US Surveyor'},\n    { u: 'base', text: 'Native Units'}\n  ]\n</script>\n\n<select class='firescope-select' style='width:125px;' bind:value={units}>\n\t{#each uoms as uom}\n\t\t<option value={uom.u}>{uom.text}</option>\n\t{/each}\n</select>\n","<script>\r\n  import Vertical from './Vertical.svelte'\r\n  import { Input } from '../../model/Variables.js'\r\n  import * as Compass from '../../model/compass.js'\r\n\r\n  export let direction\r\n  export let speed\r\n\r\n  const directionRange = Input.windDirectionSourceFromNorth.range\r\n  const speedRange = Input.windSpeedAtMidflame.range\r\n\r\n  function directionDegrees(azimuth) {return azimuth.toFixed(0) + '\\u00B0'}\r\n  function directionPoint(azimuth) {return Compass.point(azimuth)}\r\n  function speedMph(fpm) {return (fpm/88).toFixed(0) + 'mph'}\r\n  function speedKph(fpm) {return (1.60934*fpm/88).toFixed(0) + 'kph'}\r\n</script>\r\n\r\n<svelte:head>\r\n  <link rel=\"stylesheet\" href=\"firescope.css\">\r\n</svelte:head>\r\n\r\n<div class=\"firescope-vslider-group-2\">\r\n  <p class=\"firescope-vslider-title\">Midflame Wind</p>\r\n    <Vertical bind:value={speed} label='Speed'\r\n      min={speedRange.min} max={speedRange.max} step={speedRange.step}\r\n      format1={speedMph}\r\n      format2={speedKph}\r\n    />\r\n    <Vertical bind:value={direction} label='From'\r\n      min={directionRange.min} max={directionRange.max} step={directionRange.step}\r\n      format1={directionDegrees}\r\n      format2={directionPoint}\r\n    />\r\n</div>\r\n","function _typeof (obj) {\n  '@babel/helpers - typeof'\n\n  if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n    _typeof = function (obj) {\n      return typeof obj\n    }\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj\n    }\n  }\n\n  return _typeof(obj)\n}\n\nfunction _classCallCheck (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function')\n  }\n}\n\nfunction _defineProperties (target, props) {\n  for (let i = 0; i < props.length; i++) {\n    const descriptor = props[i]\n    descriptor.enumerable = descriptor.enumerable || false\n    descriptor.configurable = true\n    if ('value' in descriptor) descriptor.writable = true\n    Object.defineProperty(target, descriptor.key, descriptor)\n  }\n}\n\nfunction _createClass (Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps)\n  if (staticProps) _defineProperties(Constructor, staticProps)\n  return Constructor\n}\n\nfunction _inherits (subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function')\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  })\n  if (superClass) _setPrototypeOf(subClass, superClass)\n}\n\nfunction _getPrototypeOf (o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf (o) {\n    return o.__proto__ || Object.getPrototypeOf(o)\n  }\n  return _getPrototypeOf(o)\n}\n\nfunction _setPrototypeOf (o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf (o, p) {\n    o.__proto__ = p\n    return o\n  }\n\n  return _setPrototypeOf(o, p)\n}\n\nfunction _isNativeReflectConstruct () {\n  if (typeof Reflect === 'undefined' || !Reflect.construct) return false\n  if (Reflect.construct.sham) return false\n  if (typeof Proxy === 'function') return true\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}))\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction _assertThisInitialized (self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")\n  }\n\n  return self\n}\n\nfunction _possibleConstructorReturn (self, call) {\n  if (call && (typeof call === 'object' || typeof call === 'function')) {\n    return call\n  }\n\n  return _assertThisInitialized(self)\n}\n\nfunction _createSuper (Derived) {\n  const hasNativeReflectConstruct = _isNativeReflectConstruct()\n\n  return function _createSuperInternal () {\n    const Super = _getPrototypeOf(Derived)\n    let result\n\n    if (hasNativeReflectConstruct) {\n      const NewTarget = _getPrototypeOf(this).constructor\n\n      result = Reflect.construct(Super, arguments, NewTarget)\n    } else {\n      result = Super.apply(this, arguments)\n    }\n\n    return _possibleConstructorReturn(this, result)\n  }\n}\n\nfunction _slicedToArray (arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest()\n}\n\nfunction _toArray (arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest()\n}\n\nfunction _toConsumableArray (arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\n}\n\nfunction _arrayWithoutHoles (arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr)\n}\n\nfunction _arrayWithHoles (arr) {\n  if (Array.isArray(arr)) return arr\n}\n\nfunction _iterableToArray (iter) {\n  if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(iter)) return Array.from(iter)\n}\n\nfunction _iterableToArrayLimit (arr, i) {\n  if (typeof Symbol === 'undefined' || !(Symbol.iterator in Object(arr))) return\n  const _arr = []\n  let _n = true\n  let _d = false\n  let _e\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value)\n\n      if (i && _arr.length === i) break\n    }\n  } catch (err) {\n    _d = true\n    _e = err\n  } finally {\n    try {\n      if (!_n && _i.return != null) _i.return()\n    } finally {\n      if (_d) throw _e\n    }\n  }\n\n  return _arr\n}\n\nfunction _unsupportedIterableToArray (o, minLen) {\n  if (!o) return\n  if (typeof o === 'string') return _arrayLikeToArray(o, minLen)\n  let n = Object.prototype.toString.call(o).slice(8, -1)\n  if (n === 'Object' && o.constructor) n = o.constructor.name\n  if (n === 'Map' || n === 'Set') return Array.from(o)\n  if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen)\n}\n\nfunction _arrayLikeToArray (arr, len) {\n  if (len == null || len > arr.length) len = arr.length\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]\n\n  return arr2\n}\n\nfunction _nonIterableSpread () {\n  throw new TypeError('Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')\n}\n\nfunction _nonIterableRest () {\n  throw new TypeError('Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')\n}\n\n// Returns the Node key reformatted as a capitalized, space-separated label\nfunction nodeLabel (source) {\n  const tokens = []\n  let token = ''\n  let type = ''\n\n  for (let i = 0; i < source.length; i++) {\n    const c = source[i]\n\n    if (c === '.' || c === ' ' || c === '_' || c === '-') {\n      // separator\n      if (token.length) tokens.push(token)\n      token = ''\n      type = ''\n    } else if (c >= '0' && c <= '9') {\n      if (type === 'string') {\n        if (token.length) tokens.push(token)\n        token = ''\n      }\n\n      type = 'number'\n      token += c\n    } else if (c >= 'A' && c <= 'Z') {\n      if (type === 'number' || token.length) {\n        // previously in number or another string\n        if (token.length) tokens.push(token) // store the previous number or string\n\n        token = '' // start a new string\n      }\n\n      type = 'string'\n      token += c\n    } else if (c >= 'a' && c <= 'z') {\n      if (type === 'number') {\n        if (token.length) tokens.push(token)\n        token = ''\n      }\n\n      type = 'string'\n      token += token.length ? c : c.toUpperCase()\n    }\n  }\n\n  if (token.length) tokens.push(token)\n  return tokens.join(' ')\n}\n\nconst Node = /* #__PURE__ */(function () {\n  function Node (nodeIdx, nodeKey, variantRef) {\n    _classCallCheck(this, Node)\n\n    this.consumers = [] // aray of references to consumer Nodes\n\n    this.depth = 0\n    this.idx = nodeIdx // index into the Dna.updater[] array, used only by DagDna.nodeConfigs()\n\n    this.isEnabled = true\n    this.label = null\n    this.key = nodeKey\n    this.order = 0\n    this.producers = [] // array of references to producer Nodes\n\n    this.update = {\n      able: false,\n      // is updateable (i.e., is NOT Config derived)\n      method: null,\n      args: [] // array of method args (mix of references to Nodes or literals)\n\n    }\n    this.value = variantRef.defaultValue()\n    this.variant = variantRef\n  }\n\n  _createClass(Node, [{\n    key: 'displayLabel',\n    value: function displayLabel () {\n      return this.label || nodeLabel(this.key)\n    }\n  }, {\n    key: 'displayLine',\n    value: function displayLine () {\n      return this.displayLabel() + ' ' + this.displayString()\n    }\n    /**\n     * Return Node's value as a (possibly decorated) string\n     * For Quantity, the string is the current value after:\n     * - conversion into the current display units-of-measure,\n     * - truncation of digits to current display precision, decimals, or exponentiation, and\n     * - the current units-of-measure string appended.\n     */\n\n  }, {\n    key: 'displayString',\n    value: function displayString () {\n      return this.variant.displayString(this.value)\n    }\n    /**\n     * Return Node's value as a (possibly decorated) string\n     * For Quantity, the string is the current value after:\n     * - conversion into the current display units-of-measure, and\n     * - truncation of digits to current display precision, decimals, or exponentiation.\n     */\n\n  }, {\n    key: 'displayValue',\n    value: function displayValue () {\n      return this.variant.displayValue(this.value)\n    } // Throws an Error() if `value` is a NOT valid for this Node's Variant class.\n    // variant.isValid() returns object { pass: <bool>, value: <testValue>, fails: <failedTestName> }\n\n  }, {\n    key: 'ensureValidValue',\n    value: function ensureValidValue (value) {\n      const result = this.variant.isValid(value)\n\n      if (!result.pass) {\n        throw new Error('Node '.concat(this.key, ' value ').concat(value, ' fails test ').concat(result.fails))\n      }\n\n      return value\n    } // Returns TRUE if `value` is a valid value for this Node's Variant class.\n\n  }, {\n    key: 'isValidValue',\n    value: function isValidValue (value) {\n      return this.variant.isValid(value).pass\n    } // Set's this Node's value AFTER ensuring it is valid.\n\n  }, {\n    key: 'setValue',\n    value: function setValue (value) {\n      this.value = this.ensureValidValue(value)\n      return this.value\n    }\n    /**\n     * Updates the Node's value by calling its updater method and storing the result.\n     *\n     * NOTE: This is the most heavily used function in the entire system.\n     * DO NOT use this.update.args.map() to iterate over method args,\n     * as it increases execution time time by 50% !!!\n     */\n\n  }, {\n    key: 'updateValue',\n    value: function updateValue () {\n      const args = []\n\n      for (let i = 0; i < this.update.args.length; i++) {\n        const parm = this.update.args[i]\n        args.push(parm instanceof Node ? parm.value : parm)\n      }\n\n      this.value = this.update.method.apply(this, args)\n    }\n  }])\n\n  return Node\n}())\n\n/**\n   * Returns an array of result run indices that satisfy the input node-value pair specs\n   * @param {*} inputValues An array of input node => value specifications\n   */\nfunction resultIndices (dag, inputNodeValuePairs) {\n  // Get all the run indices where the first Node has the spec value\n  const _inputNodeValuePairs$ = inputNodeValuePairs.shift()\n  const _inputNodeValuePairs$2 = _slicedToArray(_inputNodeValuePairs$, 2)\n  const node = _inputNodeValuePairs$2[0]\n  const specVal = _inputNodeValuePairs$2[1]\n\n  const nodeRuns = dag.results.map.get(node) // Which of the all the runs have this Node's spec value?\n\n  const remaining = []\n  nodeRuns.forEach(function (runVal, runIdx) {\n    if (specVal === runVal) remaining.push(runIdx)\n  })\n  return inputNodeValuePairs.length && remaining.length ? resultIndicesRecursive(dag, inputNodeValuePairs, remaining) : remaining\n}\n\nfunction resultIndicesRecursive (dag, inputNodeValuePairs, possible) {\n  const _inputNodeValuePairs$3 = inputNodeValuePairs.shift()\n  const _inputNodeValuePairs$4 = _slicedToArray(_inputNodeValuePairs$3, 2)\n  const node = _inputNodeValuePairs$4[0]\n  const specVal = _inputNodeValuePairs$4[1]\n\n  const nodeRuns = dag.results.map.get(node) // Which of the remaining runs also have this Node's spec value?\n\n  const remaining = []\n  possible.forEach(function (runIdx) {\n    if (specVal === nodeRuns[runIdx]) remaining.push(runIdx)\n  })\n  return inputNodeValuePairs.length && remaining.length ? resultIndicesRecursive(dag, inputNodeValuePairs, remaining) : remaining\n} // Returns the value of referenced Node\n\nfunction resultValue (dag, node, runIdx) {\n  if (!dag.results.map.has(node)) throw new Error('Node '.concat(node.key, ' is not in the run results'))\n  return dag.results.map.get(node)[runIdx]\n} // Stores current value of all input and selected Nodes in the Results Map\n// This is the default Dag.storeFunction\n\nfunction storeValues (dag) {\n  dag.results.map.forEach(function (runs, node) {\n    return runs.push(node.value)\n  })\n}\n\n/**\n * The DagTopology file provides functions to:\n * - select updater methods\n * - determine Node producers and consumers, and\n * - determine Node depth and topological order.\n * @copyright 2020 Systems for Environmental Management\n * @author Collin D. Bevins, <cbevins@montana.com>\n * @license MIT\n * @version 0.1.0\n * coverage-20200506\n */\nfunction reset (dag) {\n  dag.node.forEach(function (node) {\n    node.consumers = [] // array of Node references\n\n    node.depth = 0\n    node.order = 0\n    node.producers = [] // array of Node references\n  }) // Determine Node updater method, args, producers, and consumers for the current configuration\n\n  const _loop = function _loop (nodeIdx) {\n    const node = dag.node[nodeIdx]\n    const idx = selectNodeUpdaterIdx(dag, nodeIdx)\n\n    const _dag$dna$updater$node = _toArray(dag.dna.updater[nodeIdx][idx][1])\n    const methodIdx = _dag$dna$updater$node[0]\n    const parms = _dag$dna$updater$node.slice(1)\n\n    node.update.method = dag.dna.method[methodIdx]\n    node.update.args = []\n    parms.forEach(function (parm) {\n      if (parm[0] === 0) {\n        // if parm is a Node reference\n        const producer = dag.node[parm[1]]\n        node.update.args.push(producer)\n        node.producers.push(producer)\n        producer.consumers.push(node)\n      } else {\n        // else parm is a literal value\n        node.update.args.push(dag.literal(parm[1]))\n      }\n    })\n  }\n\n  for (let nodeIdx = 0; nodeIdx < dag.node.length; nodeIdx++) {\n    _loop(nodeIdx)\n  }\n\n  resetNodeDepths(dag)\n}\n/**\n   * A reset() helper function that returns a topologically sorted array of the Dag Nodes, but with:\n   *  - *input* Nodes deferred to the greatest depth allowed by their consumers (out edges)\n   *  - *fixed* Nodes are run first and just once\n   * Its OK to determine depths of disabled Nodes\n   */\n\nfunction resetNodeDepths (dag) {\n  // Step 1 - determine depth of the consumer chain for each Node\n  let maxDepth = 0\n  dag.node.forEach(function (node) {\n    const visited = new Set([node.key])\n    maxDepth = Math.max(maxDepth, resetNodeDepth(node, visited))\n  }) // Step 2 - ensure input Nodes are processed after all other Nodes at the same depth\n  // - non-input Nodes have an odd numbered level = 2 * depth - 1\n  // - input Nodes have an even numbered level = 2 * depth\n\n  dag.sorted = []\n  dag.node.forEach(function (node) {\n    node.depth = dag.nodeIsInput(node) ? 2 * node.depth - 1 : 2 * node.depth\n    dag.sorted.push(node)\n  }) // Step 3 - topologically sort the Node array\n\n  dag.sorted.sort(function (node1, node2) {\n    return node2.depth - node1.depth\n  })\n  dag.sorted.forEach(function (node, order) {\n    node.order = order\n  })\n}\n/**\n * A resetNodeDepths() helper function (and therefore, also a reset() helper function)\n * that returns the Node's depth, calculating it first, if necessary\n * (Its OK to determine depths of disabled Nodes)\n * @param {Node} node\n * @param {Set<Node>} visited A Set of keys to Nodes that have been traversed from the start of the chain\n */\n\nfunction resetNodeDepth (node, visited) {\n  // If this Node doesn't yet have a depth, derive it\n  if (!node.depth) {\n    let maxDepth = 0\n    node.consumers.forEach(function (consumer) {\n      if (visited.has(consumer.key)) {\n        visited.add(consumer.key)\n        throw new Error('Cyclical dependency detected:\\n'.concat(Array.from(visited).join(' required by ->\\n')))\n      }\n\n      visited.add(consumer.key)\n      const depth = resetNodeDepth(consumer, visited)\n      visited.delete(consumer.key)\n      maxDepth = Math.max(depth, maxDepth)\n    })\n    node.depth = maxDepth + 1\n  }\n\n  return node.depth\n} // Returns the current appropriate updater index for nodeIdx\n\nfunction selectNodeUpdaterIdx (dag, nodeIdx) {\n  const updaters = dag.dna.updater[nodeIdx]\n\n  for (let updaterIdx = 0; updaterIdx < updaters.length; updaterIdx++) {\n    const condition = dag.dna.updater[nodeIdx][updaterIdx][0]\n\n    if (condition.length) {\n      // if condition has members, then this is a 'when' condition\n      const _condition = _slicedToArray(condition, 2)\n      const configIdx = _condition[0]\n      const valueIdx = _condition[1]\n\n      if (dag.node[configIdx].value === dag.literal(valueIdx)) {\n        // if config Node has this value,\n        return updaterIdx // this is the appropriate updater\n      }\n    } else {\n      // if empty, then this is a 'finally' condition\n      return updaterIdx // this is the appropriate updater\n    }\n  } // The following line should never be executed, but still...\n\n  return 0\n}\n\n/**\n * Generates a set of result values for all combinations of the dag.input values.\n *\n * For example, if fuel model has 2 input values, 1-h dead moisture has 3 input values,\n * and wind speed has 4 input values, then 2 x 3 x 4 = 24 results are generated.\n *\n * Results are stored the dag.results map of nodeIdx => [<run0>, <run1>...]\n */\nfunction updateOrthogonalStack (dag) {\n  const ptr = new Map()\n  dag.requiredInputNodes().forEach(function (node) {\n    return ptr.set(node, 0)\n  })\n\n  if (dag.stack.length > 0) {\n    let delta = 1\n    let node\n    let stackIdx = 0\n\n    while (stackIdx >= 0) {\n      node = dag.stack[stackIdx]\n\n      if (ptr.has(node)) {\n        if (delta > 0) {\n          // moving down the stack, so start with the first input value\n          ptr.set(node, 0)\n          node.value = dag.input.get(node)[0]\n        } else {\n          // moving up the stack, so check for another input value\n          const iptr = ptr.get(node) + 1 // point to its next input value\n\n          const inputs = dag.input.get(node) // get all the Node's input values\n\n          ptr.set(node, iptr) // set the input value pointer\n\n          if (iptr < inputs.length) {\n            // there is another input value tp process...\n            node.value = inputs[iptr] // set its next input value\n\n            delta = 1 // and go back down the stack\n          }\n        }\n      } else {\n        // not an input Node\n        if (delta > 0) {\n          node.updateValue()\n        }\n      }\n\n      stackIdx += delta // set the next stack node to process (+1 === next, -1 === previous)\n\n      if (stackIdx === dag.stack.length) {\n        // at the end of the stack (must be going down)\n        dag.storeFunction(dag)\n        dag.results.runs += 1\n\n        if (dag.results.runs >= dag.results.runLimit) {\n          dag.results.message = 'Run limit of '.concat(dag.results.runLimit, ' exceeded.')\n          dag.results.ok = false\n          stackIdx = 0\n        }\n\n        delta = -1 // must now go back up the stack\n\n        stackIdx += delta // set the next stack node to process (+1 === next, -1 === previous)\n      }\n    } // while\n  } // if ( dag.stack.length > 0 )\n}\n\nfunction updateCasewise (dag) {\n  // Save the case input values since we need to use dag.input map for case-by-case iteration\n  const saved = new Map()\n  const inputNodes = dag.requiredInputNodes()\n  let maxCases = 0\n  inputNodes.forEach(function (node) {\n    saved.set(node, _toConsumableArray(dag.input.get(node)))\n    maxCases = Math.max(maxCases, saved.get(node).length)\n  }) // Process each case with single input values\n\n  const _loop = function _loop (caseIdx) {\n    inputNodes.forEach(function (node) {\n      const inputs = saved.get(node)\n      const useIdx = Math.min(caseIdx, inputs.length - 1)\n      dag.input.set(node, [inputs[useIdx]])\n    })\n    updateOrthogonalStack(dag)\n  }\n\n  for (let caseIdx = 0; caseIdx < maxCases; caseIdx += 1) {\n    _loop(caseIdx)\n  } // Restore the case values back to the dag.input map\n\n  inputNodes.forEach(function (node) {\n    return dag.input.set(node, _toConsumableArray(saved.get(node)))\n  })\n}\n\n/**\n * Generates a set of result values for all combinations of the dag.input values.\n *\n * For example, if fuel model has 2 input values, 1-h dead moisture has 3 input values,\n * and wind speed has 4 input values, then 2 x 3 x 4 = 24 results are generated.\n *\n * Results are stored the dag.results map of nodeIdx => [<run0>, <run1>...]\n */\nfunction updateOrthogonalRecursive (dag) {\n  updateRecursive(dag, 0)\n}\n\nfunction updateRecursive (dag, stackIdx) {\n  if (!dag.results.ok) return // If at the end of the stack...\n\n  if (stackIdx === dag.stack.length) {\n    dag.storeFunction(dag)\n    dag.results.runs += 1\n\n    if (dag.results.runs >= dag.results.runLimit) {\n      dag.results.message = 'Run limit of '.concat(dag.results.runLimit, ' exceeded.')\n      dag.results.ok = false\n    }\n\n    return\n  }\n\n  const node = dag.stack[stackIdx]\n\n  if (dag.nodeIsInput(node)) {\n    dag.input.get(node).forEach(function (value) {\n      node.value = value\n      updateRecursive(dag, stackIdx + 1)\n    })\n  } else {\n    node.updateValue()\n    updateRecursive(dag, stackIdx + 1)\n  }\n}\n\nfunction update (dag) {\n  // Initialize Dag results Map with an entry for each Input and Selected Node\n  dag.results.map.clear()\n  const inputNodes = dag.requiredInputNodes();\n  [].concat(_toConsumableArray(inputNodes), _toConsumableArray(dag.selectedNodes())).forEach(function (idx) {\n    return dag.results.map.set(idx, [])\n  }) // Ensure every Node in the Input Set has at least 1 input value\n\n  inputNodes.forEach(function (node) {\n    if (!dag.input.has(node) || dag.input.get(node) === []) {\n      dag.input.set(node, [node.value])\n    }\n  }) // Initialize run stats\n\n  dag.results.ok = true\n  dag.results.message = ''\n  dag.results.runs = 0 // number of results stored\n\n  dag.stack = dag.requiredUpdateNodes() // Call the appropriate update processor\n\n  dag.results.elapsed = Date.now() // start the elapsed timer\n\n  if (dag.mode === 'orthogonal') {\n    updateOrthogonalRecursive(dag)\n  } else if (dag.mode === 'casewise') {\n    updateCasewise(dag)\n  } else {\n    updateOrthogonalStack(dag)\n  }\n\n  dag.results.elapsed = Date.now() - dag.results.elapsed\n}\n\nfunction _refVals (dag, pairs, name) {\n  const refVals = []\n\n  if (!Array.isArray(pairs)) {\n    throw new Error(''.concat(name, '(keyValuePairs) arg must be an Array of 2-element arrays'))\n  }\n\n  pairs.forEach(function (pair, idx) {\n    if (!Array.isArray(pair) || pair.length !== 2) {\n      throw new Error(''.concat(name, '(keyValuesPair[').concat(idx, ']) [<node|key|index>, <value>] must be a 2-element Array'))\n    }\n\n    refVals.push([dag.get(pair[0]), pair[1]])\n  })\n  return refVals\n}\n\nfunction _valid (node, value, message) {\n  if (!node.variant.isValid(value).pass) throw new Error(message)\n  return value\n} // Returns an array of result run indices that satisfy the input node-value pair specs\n\nfunction resultIndices$1 (dag, inputNodeValuePairs) {\n  return resultIndices(dag, _refVals(dag, inputNodeValuePairs, 'resultIndices'))\n} // Sets the value of zero or more Config Nodes, resets the Dag topology,\n// AND resets the Required and Input Sets and updates the Dag Node values\n\nfunction runConfigs (dag, keyValuePairs) {\n  setConfigs(dag, keyValuePairs)\n  runSelected(dag, [])\n} // Adds the values of zero or more Nodes to the Input Set AND updates all Node values\n\nfunction runInputs (dag, keyValuePairs) {\n  setInputs(dag, keyValuePairs)\n  update(dag)\n} // Sets the value of zero or more Config Nodes, resets the Dag topology,\n// AND resets the Required and Input Sets and updates the Dag Node values\n\nfunction runModules (dag, keyValuePairs) {\n  setModules(dag, keyValuePairs)\n  runConfigs(dag, [])\n} // Adds or deletes zero or more Nodes from the Selected Set, resets the Required and Input Set,\n// AND updates all Node values\n\nfunction runSelected (dag, keyValuePairs) {\n  setSelected(dag, keyValuePairs)\n  update(dag)\n} // Sets the value of zero or more Config Nodes and resets the Dag topology\n// WITHOUT updating any other Node values\n\nfunction setConfigs (dag, keyValuePairs) {\n  _refVals(dag, keyValuePairs, 'setConfigs').forEach(function (_ref) {\n    const _ref2 = _slicedToArray(_ref, 2)\n    const node = _ref2[0]\n    const value = _ref2[1]\n\n    node.value = _valid(node, value, \"Config Node '\".concat(node.key, \"' value '\").concat(value, \"' is invalid\"))\n  })\n\n  reset(dag)\n} // Adds the values of zero or more Nodes to the Input Set\n// WITHOUT updating any other Node values\n\nfunction setInputs (dag, keyValuePairs) {\n  _refVals(dag, keyValuePairs, 'setInputs').forEach(function (_ref3) {\n    const _ref4 = _slicedToArray(_ref3, 2)\n    const node = _ref4[0]\n    const value = _ref4[1]\n\n    const values = Array.isArray(value) ? value : [value] // ensure values are in an array\n\n    values.forEach(function (value) {\n      _valid(node, value, \"Input Node '\".concat(node.key, \"' value '\").concat(value, \"' is invalid\"))\n    })\n    dag.input.set(node, values)\n  })\n} // Sets the value of zero or more Module (and their Link) Nodes\n// WITHOUT updating any other Node values\n\nfunction setModules (dag, keyValuePairs) {\n  _refVals(dag, keyValuePairs, 'setModules').forEach(function (_ref5) {\n    const _ref6 = _slicedToArray(_ref5, 2)\n    const node = _ref6[0]\n    const value = _ref6[1]\n\n    node.value = _valid(node, value, \"Module Node '\".concat(node.key, \"' value '\").concat(value, \"' is invalid\"))\n  }) // Client-crafted function that uses newly-set Module Node values to update Link Nodes\n\n  const methodRef = dag.dna.dagMethod.get('module')\n  methodRef.apply(this, [dag, dag.moduleArg])\n  setConfigs(dag, [])\n} // Determines the Set of required Nodes from the set of enabled selected Nodes\n// Should be called after setSelected()\n\nfunction setRequiredNodes (dag) {\n  dag.required.clear()\n  Array.from(dag.selected).forEach(function (node) {\n    if (node.isEnabled) {\n      setRequiredRecursive(dag, node)\n    }\n  })\n} // Recursively determines the Set of required Nodes\n\nfunction setRequiredRecursive (dag, node) {\n  if (!dag.required.has(node)) {\n    // Nothing more to do if node is already required\n    dag.required.add(node) // Add node to the required set\n    // Add all Config nodes referenced by node to the Required Set\n\n    dag.nodeConfigs(node).forEach(function (config) {\n      dag.required.add(config)\n    }) // Add all this Node's producer Nodes to the Required Set\n\n    node.producers.forEach(function (producer) {\n      if (!producer.isEnabled) throw new Error(\"Node '\".concat(node.key, \"' has disabled producer '\").concat(producer.key, \"'\"))\n      setRequiredRecursive(dag, producer)\n    })\n  }\n} // Adds/deletes zero or more Nodes to/from the Selected Set\n// WITHOUT updating any other Node values\n\nfunction setSelected (dag, keyValuePairs) {\n  _refVals(dag, keyValuePairs, 'setSelected').forEach(function (_ref7) {\n    const _ref8 = _slicedToArray(_ref7, 2)\n    const node = _ref8[0]\n    const select = _ref8[1]\n\n    return select ? dag.selected.add(node) : dag.selected.delete(node)\n  })\n\n  setRequiredNodes(dag)\n}\n\nconst DagDna = /* #__PURE__ */(function () {\n  function DagDna (dna) {\n    const _this = this\n\n    _classCallCheck(this, DagDna)\n\n    this.dna = dna\n    this.variant = [] // each DAG gets its own Variant instances to manipulate\n\n    this.dna.variantClass.forEach(function (Vclass) {\n      _this.variant.push(new Vclass())\n    }) // Node property arrays\n\n    this.configs = new Set()\n    this.input = new Map()\n    this.links = new Set()\n    this.mode = 'stack' // 'orthogonal' // or 'casewise', or 'stack'\n\n    this.moduleArg = 'none' // 'independent' or 'none'\n\n    this.modules = new Set() // references to Module Nodes\n\n    this.required = new Set() // references to required Nodes\n\n    this.results = {\n      elapsed: 0,\n      map: new Map(),\n      message: '',\n      ok: true,\n      runs: 0,\n      runLimit: 10000\n    }\n    this.selected = new Set() // references to selected Nodes\n\n    this.sorted = [] // array of references to all Nodes in topological order\n\n    this.storeFunction = storeValues\n    this.node = [] // array of references to all Nodes\n    // dna.variant has one element for each nodeIdx, whose value is a variant class idx\n\n    this.dna.variant.forEach(function (variantIdx, nodeIdx) {\n      const key = _this.dna.key[nodeIdx]\n      const node = new Node(nodeIdx, key, _this.variant[variantIdx])\n\n      _this.node.push(node)\n\n      if (key.startsWith('configure.')) _this.configs.add(node); else if (key.startsWith('link.')) _this.links.add(node); else if (key.startsWith('module.')) _this.modules.add(node); else node.update.able = true\n    })\n    this.setConfigs([])\n  }\n\n  _createClass(DagDna, [{\n    key: 'clearInputs',\n    value: function clearInputs () {\n      this.input.clear()\n    }\n  }, {\n    key: 'clearSelected',\n    value: function clearSelected () {\n      this.selected.clear()\n    } // Returns a Node reference given a Node reference, a Node key string, or a Node indice.\n\n  }, {\n    key: 'get',\n    value: function get (something) {\n      // this._args(arguments, 1)\n      if (something instanceof Node) {\n        return something\n      } else if (this.dna.map.has(something)) {\n        return this.node[this.dna.map.get(something)]\n      } else if (typeof something === 'number' && something >= 0 && something < this.node.length) {\n        return this.node[something]\n      }\n\n      throw new Error('Unable to resolve a Node reference from '.concat(something))\n    } // Returns the value of the literal with literalIdx\n\n  }, {\n    key: 'literal',\n    value: function literal (literalIdx) {\n      return this.dna.literal[literalIdx]\n    } // Returns an array of references to ALL Config Nodes that may be used by `node`\n    // Called only by DagSetRun.setRequiredRecursive()\n\n  }, {\n    key: 'nodeConfigs',\n    value: function nodeConfigs (node) {\n      const _this2 = this\n\n      const configs = new Set()\n      this.dna.updater[node.idx].forEach(function (updater) {\n        if (updater[0].length) {\n          configs.add(_this2.node[updater[0][0]])\n        }\n      })\n      return Array.from(configs)\n    } // Returns TRUE if Node Variant is derived from a Config class\n\n  }, {\n    key: 'nodeIsConfig',\n    value: function nodeIsConfig (node) {\n      return this.configs.has(node) || this.links.has(node)\n    } // Returns TRUE if Node currently uses the Dag.input() updater method AND it is required (and enabled)\n\n  }, {\n    key: 'nodeIsInput',\n    value: function nodeIsInput (node) {\n      return this.required.has(node) && node.update.method === this.dna.dagMethod.get('input')\n    } // Returns an array of required Config Node references in topological order\n\n  }, {\n    key: 'requiredConfigNodes',\n    value: function requiredConfigNodes () {\n      const _this3 = this\n\n      return this.sorted.filter(function (node) {\n        return _this3.required.has(node) && _this3.nodeIsConfig(node)\n      })\n    } // Returns an array of required input Node references in topological order\n\n  }, {\n    key: 'requiredInputNodes',\n    value: function requiredInputNodes () {\n      const _this4 = this\n\n      return this.sorted.filter(function (node) {\n        return _this4.required.has(node) && _this4.nodeIsInput(node)\n      })\n    } // Returns an array of required Node references in topological order\n\n  }, {\n    key: 'requiredNodes',\n    value: function requiredNodes () {\n      const _this5 = this\n\n      return this.sorted.filter(function (node) {\n        return _this5.required.has(node)\n      })\n    } // Returns an array of all required, updatable (non-Config-ish) Node references in topological order.\n\n  }, {\n    key: 'requiredUpdateNodes',\n    value: function requiredUpdateNodes () {\n      const _this6 = this\n\n      return this.sorted.filter(function (node) {\n        return _this6.required.has(node) && node.update.able\n      })\n    } // Returns an array of result run indices that satisfy the input node-value pair specs\n\n  }, {\n    key: 'resultIndices',\n    value: function resultIndices (inputNodeValuePairs) {\n      return resultIndices$1(this, inputNodeValuePairs)\n    } // Returns the Node's result value for the specified run index\n\n  }, {\n    key: 'resultValue',\n    value: function resultValue$1 (nodeRefOrKey, runIdx) {\n      return resultValue(this, this.get(nodeRefOrKey), runIdx)\n    } // Sets the value of zero or more Config Nodes AND updates all Node values\n\n  }, {\n    key: 'runConfigs',\n    value: function runConfigs$1 (keyValuePairs) {\n      return runConfigs(this, keyValuePairs)\n    } // Sets the inputs values of zero or more input Nodes AND updates all Node values\n\n  }, {\n    key: 'runInputs',\n    value: function runInputs$1 (keyValuePairs) {\n      return runInputs(this, keyValuePairs)\n    } // Sets the value of zero or more Module (and their Link) Nodes AND updates all Node values\n\n  }, {\n    key: 'runModules',\n    value: function runModules$1 (keyValuePairs) {\n      return runModules(this, keyValuePairs)\n    } // Sets the value of zero or more Config Nodes, then resets the Required Set and node values\n\n  }, {\n    key: 'runSelected',\n    value: function runSelected$1 (keyValuePairs) {\n      return runSelected(this, keyValuePairs)\n    } // Returns an array of references to all selected Nodes\n\n  }, {\n    key: 'selectedNodes',\n    value: function selectedNodes () {\n      return Array.from(this.selected)\n    } // Sets the value of zero or more Config Nodes WITHOUT updating any other Node values\n\n  }, {\n    key: 'setConfigs',\n    value: function setConfigs$1 (keyValuePairs) {\n      return setConfigs(this, keyValuePairs)\n    } // Adds the values of zero or more Nodes to the Input Set WITHOUT updating any other Node values\n\n  }, {\n    key: 'setInputs',\n    value: function setInputs$1 (keyValuePairs) {\n      return setInputs(this, keyValuePairs)\n    } // Sets the value of zero or more Module (and Link) Nodes WITHOUT updating any other Node values\n\n  }, {\n    key: 'setModules',\n    value: function setModules$1 (keyValuePairs) {\n      return setModules(this, keyValuePairs)\n    }\n  }, {\n    key: 'setRunLimit',\n    value: function setRunLimit (limit) {\n      this.results.runLimit = limit\n    } // Adds or deletes zero or more Nodes from the selection set WITHOUT updating the required set or node values.\n\n  }, {\n    key: 'setSelected',\n    value: function setSelected$1 (keyValuePairs) {\n      return setSelected(this, keyValuePairs)\n    }\n  }])\n\n  return DagDna\n}())\n\nconst Dag = /* #__PURE__ */(function () {\n  function Dag (dna) {\n    _classCallCheck(this, Dag)\n\n    if (arguments.length !== 1) throw new Error('new Dag(dna) requires a Dna argument')\n    if (dna.dagMethod === undefined) throw new Error('new Dag(dna) arg 1 is not a valid Dna argument')\n    this.dna = new DagDna(dna)\n  }\n\n  _createClass(Dag, [{\n    key: 'clearInputs',\n    value: function clearInputs () {\n      this.dna.clearInputs()\n    }\n  }, {\n    key: 'clearSelected',\n    value: function clearSelected () {\n      this.dna.clearSelected()\n    } // Returns a Node reference given a Node reference, a Node key string, or a Node indice.\n\n  }, {\n    key: 'get',\n    value: function get (nodeRefKeyIdx) {\n      return this.dna.get(nodeRefKeyIdx)\n    }\n  }, {\n    key: 'nodeIsInput',\n    value: function nodeIsInput (node) {\n      return this.dna.nodeIsInput(node)\n    } // Returns an array of required input Node references in topological order\n\n  }, {\n    key: 'requiredConfigNodes',\n    value: function requiredConfigNodes () {\n      return this.dna.requiredConfigNodes()\n    } // Returns an array of required input Node references in topological order\n\n  }, {\n    key: 'requiredInputNodes',\n    value: function requiredInputNodes () {\n      return this.dna.requiredInputNodes()\n    } // Returns an array of required Node references in topological order\n\n  }, {\n    key: 'requiredNodes',\n    value: function requiredNodes () {\n      return this.dna.requiredNodes()\n    } // Returns an array of all required, updatable (non-Config-ish) Node references in topological order.\n\n  }, {\n    key: 'requiredUpdateNodes',\n    value: function requiredUpdateNodes () {\n      return this.dna.requiredUpdateNodes()\n    } // Returns the results object {elasped: <ms>, map: <nodeMap>, message: <str>, ok: <bool>, runs: <n>,runLimit: <n>}\n\n  }, {\n    key: 'results',\n    value: function results () {\n      return this.dna.results\n    } // Returns an array of result run indices that satisfy the input node-value pair specs\n\n  }, {\n    key: 'resultIndices',\n    value: function resultIndices (inputNodeValuePairs) {\n      return this.dna.resultIndices(inputNodeValuePairs)\n    } // Returns the Node's result value for the specified run index\n\n  }, {\n    key: 'resultValue',\n    value: function resultValue (nodeRefOrKey, runIdx) {\n      return this.dna.resultValue(nodeRefOrKey, runIdx)\n    } // Sets the value of zero or more Config Nodes, resets the Dag topology, AND updates all Node values\n\n  }, {\n    key: 'runConfigs',\n    value: function runConfigs (keyValuePairs) {\n      return this.dna.runConfigs(keyValuePairs)\n    } // Sets the inputs values of zero or more input Nodes AND updates all Node values\n\n  }, {\n    key: 'runInputs',\n    value: function runInputs (keyValuePairs) {\n      return this.dna.runInputs(keyValuePairs)\n    } // Sets the value of zero or more Module (and their Link) Nodes, AND updates all Node values\n\n  }, {\n    key: 'runModules',\n    value: function runModules (keyValuePairs) {\n      return this.dna.runModules(keyValuePairs)\n    } // Sets the value of zero or more Config Nodes, AND updates all Node values\n\n  }, {\n    key: 'runSelected',\n    value: function runSelected (keyValuePairs) {\n      return this.dna.runSelected(keyValuePairs)\n    } // Returns an array of references to all selected Nodes\n\n  }, {\n    key: 'selectedNodes',\n    value: function selectedNodes () {\n      return this.dna.selectedNodes()\n    } // Sets the value of zero or more Config Nodes WITHOUT updating any other Node values\n\n  }, {\n    key: 'setConfigs',\n    value: function setConfigs (keyValuePairs) {\n      return this.dna.setConfigs(keyValuePairs)\n    } // Sets the inputs values of zero or more input Nodes WITHOUT updating any other Node values\n\n  }, {\n    key: 'setInputs',\n    value: function setInputs (keyValuePairs) {\n      return this.dna.setInputs(keyValuePairs)\n    } // Sets the run mode to 'orthogonal'\n\n  }, {\n    key: 'setModeCasewise',\n    value: function setModeCasewise () {\n      this.dna.mode = 'casewise'\n    }\n  }, {\n    key: 'setModeOrthogonal',\n    value: function setModeOrthogonal () {\n      this.dna.mode = 'orthogonal'\n    } // Sets the value of zero or more Module (and their Link) Nodes WITHOUT updating any other Node values\n\n  }, {\n    key: 'setModules',\n    value: function setModules (keyValuePairs) {\n      return this.dna.setModules(keyValuePairs)\n    }\n  }, {\n    key: 'setRunLimit',\n    value: function setRunLimit (limit) {\n      this.dna.setRunLimit(limit)\n    } // Adds or deletes zero or more Nodes from the selection set WITHOUT updating the required set or node values.\n\n  }, {\n    key: 'setSelected',\n    value: function setSelected (keyValuePairs) {\n      return this.dna.setSelected(keyValuePairs)\n    }\n  }, {\n    key: 'setStoreFunction',\n    value: function setStoreFunction (storeFunction) {\n      this.dna.storeFunction = storeFunction\n    }\n  }])\n\n  return Dag\n}())\n\n/**\n * @file class AbstractVariant\n * @copyright 2020 Systems for Environmental Management\n * @author Collin D. Bevins, <cbevins@montana.com>\n * @license MIT\n * @version 0.1.0\n * #coverage-20200506\n */\n\n/**\n * AbstractVariant is the abstract base class of all other, more specialized, Variants.\n *\n * A Variant is a *specification* for a Node value.\n * Variant does not actually hold a value itself, rather specifications for:\n * - the *type* of value held by a Node,\n * - all input filters, validators, and validation specs to be applied to a Node's value, and\n * - all display transformers, converters, and decorators for a Node's value.\n */\nconst AbstractVariant = /* #__PURE__ */(function () {\n  function AbstractVariant (defaultValue) {\n    _classCallCheck(this, AbstractVariant)\n\n    this._display = {}\n    this._specs = {\n      _defaultValue: defaultValue\n    }\n    this._validator = []\n  }\n\n  _createClass(AbstractVariant, [{\n    key: 'defaultValue',\n    value: function defaultValue () {\n      return this._specs._defaultValue\n    }\n    /**\n     * The displayString may be a decorated version of a displayValue\n     */\n\n  }, {\n    key: 'displayString',\n    value: function displayString (value) {\n      return this.displayValue(value)\n    }\n  }, {\n    key: 'displayUnits',\n    value: function displayUnits () {\n      return ''\n    }\n    /**\n     * Returns the current value converted to a string.\n     * @param {any} value\n     */\n\n  }, {\n    key: 'displayValue',\n    value: function displayValue (value) {\n      return value.toString()\n    }\n  }, {\n    key: 'isValid',\n    value: function isValid (value) {\n      for (let _i = 0, _Object$entries = Object.entries(this._validator); _i < _Object$entries.length; _i++) {\n        const _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2)\n        const key = _Object$entries$_i[0]\n        const func = _Object$entries$_i[1]\n\n        if (!func(value)) {\n          return {\n            pass: false,\n            value: value,\n            fails: key\n          }\n        }\n      }\n\n      return {\n        pass: true,\n        value: value,\n        fails: 'none'\n      }\n    }\n  }])\n\n  return AbstractVariant\n}())\n\n/**\n * Blob is an Variant whose value is a generic Javascript Object.\n *\n * Blob should be treated as an abstract class: derived classes\n * should be developed for Nodes with a specific value object structure.\n */\n\nconst Blob = /* #__PURE__ */(function (_AbstractVariant) {\n  _inherits(Blob, _AbstractVariant)\n\n  const _super = _createSuper(Blob)\n\n  function Blob () {\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}\n\n    _classCallCheck(this, Blob)\n\n    if (_typeof(defaultValue) !== 'object') {\n      throw new Error('new Variant.Blob('.concat(JSON.stringify(defaultValue), \") requires an the 'defaultValue' argument to be an 'object'\"))\n    }\n\n    return _super.call(this, defaultValue)\n  }\n\n  _createClass(Blob, [{\n    key: 'displayString',\n    value: function displayString (value) {\n      return JSON.stringify(value)\n    }\n  }])\n\n  return Blob\n}(AbstractVariant))\n\n/**\n * Bool is a Variant whose value is a Javascript boolean primitive,\n * and whose display may be decorated with strings representing its\n * 'true' and 'false' state.\n */\n\nconst Bool = /* #__PURE__ */(function (_AbstractVariant) {\n  _inherits(Bool, _AbstractVariant)\n\n  const _super = _createSuper(Bool)\n\n  function Bool () {\n    let _this\n\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false\n    const trueString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'true'\n    const falseString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'false'\n\n    _classCallCheck(this, Bool)\n\n    if (typeof defaultValue !== 'boolean') {\n      throw new Error('new Variant.Bool('.concat(defaultValue, \") requires the 'defaultValue' argument to be a 'boolean'\"))\n    } else if (typeof trueString !== 'string') {\n      throw new Error('new Variant.Bool('.concat(defaultValue, \", trueString) requires the 'trueString' argument to be a 'string'\"))\n    } else if (typeof falseString !== 'string') {\n      throw new Error('new Variant.Bool('.concat(defaultValue, \", trueString, falseString) requires the 'falseString' argument to be a 'string'\"))\n    }\n\n    _this = _super.call(this, defaultValue)\n    _this._specs._trueString = trueString\n    _this._specs._falseString = falseString\n\n    _this._validator.isBool = function (value) {\n      return typeof value === 'boolean'\n    }\n\n    return _this\n  }\n\n  _createClass(Bool, [{\n    key: 'displayString',\n    value: function displayString (value) {\n      return value ? this._specs._trueString : this._specs._falseString\n    }\n  }])\n\n  return Bool\n}(AbstractVariant))\n\n/**\n * Numeric is a Variant whose value is a Javascript number primitive\n * and whose filters ensure a numeric value.\n */\n\nconst Numeric = /* #__PURE__ */(function (_AbstractVariant) {\n  _inherits(Numeric, _AbstractVariant)\n\n  const _super = _createSuper(Numeric)\n\n  function Numeric () {\n    let _this\n\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0\n    const minValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1 - Number.MAX_VALUE\n    const maxValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_VALUE\n\n    _classCallCheck(this, Numeric)\n\n    if (typeof defaultValue !== 'number') {\n      throw new Error('new Variant.Numeric('.concat(defaultValue, \") requires the 'defaultValue' argument to be a 'number'\"))\n    } else if (typeof minValue !== 'number') {\n      throw new Error('new Variant.Numeric('.concat(defaultValue, ', ').concat(minValue, \") requires the 'minValue' argument to be a 'number'\"))\n    } else if (typeof maxValue !== 'number') {\n      throw new Error('new Variant.Numeric('.concat(defaultValue, ', ').concat(minValue, ', ').concat(maxValue, \") requires an 'maxValue' argument to be a 'number'\"))\n    } else if (minValue > maxValue) {\n      throw new Error('new Variant.Numeric('.concat(defaultValue, ', ').concat(minValue, ', ').concat(maxValue, ') minValue exceeds maxValue'))\n    } else if (defaultValue < minValue) {\n      throw new Error('new Variant.Numeric('.concat(defaultValue, ', ').concat(minValue, ', ').concat(maxValue, ') defaultValue is less than minValue'))\n    } else if (defaultValue > maxValue) {\n      throw new Error('new Variant.Numeric('.concat(defaultValue, ', ').concat(minValue, ', ').concat(maxValue, ') defaultValue exceeds maxValue'))\n    }\n\n    _this = _super.call(this, defaultValue)\n    _this._specs._minimumValue = minValue\n    _this._specs._maximumValue = maxValue\n\n    _this._validator.isNumeric = function (value) {\n      return typeof value === 'number'\n    }\n\n    _this._validator.minimumValue = function (value) {\n      return value >= _this._specs._minimumValue\n    }\n\n    _this._validator.maximumValue = function (value) {\n      return value <= _this._specs._maximumValue\n    }\n\n    return _this\n  }\n\n  return Numeric\n}(AbstractVariant))\n\n/**\n * Integer is a Numeric Variant whose value is an integer.\n */\n\nconst Integer = /* #__PURE__ */(function (_Numeric) {\n  _inherits(Integer, _Numeric)\n\n  const _super = _createSuper(Integer)\n\n  function Integer () {\n    let _this\n\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0\n    const minValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1 - Number.MAX_VALUE\n    const maxValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_VALUE\n\n    _classCallCheck(this, Integer)\n\n    if (typeof defaultValue !== 'number' || Number.isInteger(defaultValue) === false) {\n      throw new Error('new Variant.Integer('.concat(defaultValue, \") requires the 'defaultValue' argument to be an integer 'number'\"))\n    } else if (typeof minValue !== 'number' || Number.isInteger(minValue) === false) {\n      throw new Error('new Variant.Integer('.concat(defaultValue, ', ').concat(minValue, \") requires the 'minValue' argument to be an integer 'number'\"))\n    } else if (typeof maxValue !== 'number' || Number.isInteger(maxValue) === false) {\n      throw new Error('new Variant.Integer('.concat(defaultValue, ', ').concat(minValue, ', ').concat(maxValue, \") requires an 'maxValue' argument to be an integer 'number'\"))\n    }\n\n    _this = _super.call(this, defaultValue, minValue, maxValue)\n\n    _this._validator.isInteger = function (value) {\n      return Number.isInteger(value)\n    }\n\n    return _this\n  }\n\n  return Integer\n}(Numeric))\n\n/**\n * Count is an Integer Variant whose minimum value is 0.\n */\n\nconst Count = /* #__PURE__ */(function (_Integer) {\n  _inherits(Count, _Integer)\n\n  const _super = _createSuper(Count)\n\n  function Count () {\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0\n    const maxValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE\n\n    _classCallCheck(this, Count)\n\n    return _super.call(this, defaultValue, 0, maxValue)\n  }\n\n  return Count\n}(Integer))\n/**\n * Index is an Count Variant whose maximum value is size-1.\n */\n\nconst Index = /* #__PURE__ */(function (_Count) {\n  _inherits(Index, _Count)\n\n  const _super2 = _createSuper(Index)\n\n  function Index () {\n    let _this\n\n    const maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1\n\n    _classCallCheck(this, Index)\n\n    _this = _super2.call(this, 0, maxSize - 1)\n    _this._specs._maxSize = maxSize\n    return _this\n  }\n\n  return Index\n}(Count))\n\n/**\n * Float is a Numeric Variant whose value may be a floating point or integer number,\n * and whose display value may be\n * - a fixed number of decimals,\n * - a fixed precision, or\n * - an exponential number with a fixed number of decimal digits.\n */\n\nconst Float = /* #__PURE__ */(function (_Numeric) {\n  _inherits(Float, _Numeric)\n\n  const _super = _createSuper(Float)\n\n  function Float () {\n    let _this\n\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0\n    const minValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1 - Number.MAX_VALUE\n    const maxValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_VALUE\n\n    _classCallCheck(this, Float)\n\n    _this = _super.call(this, defaultValue, minValue, maxValue)\n    _this._display._mode = 'fixed'\n    _this._display._decimals = 2\n    return _this\n  }\n\n  _createClass(Float, [{\n    key: 'setDisplayExponential',\n    value: function setDisplayExponential (decimals) {\n      this._display._mode = 'exponential'\n      this._display._decimals = decimals\n    }\n  }, {\n    key: 'setDisplayFixed',\n    value: function setDisplayFixed (decimals) {\n      this._display._mode = 'fixed'\n      this._display._decimals = decimals\n    }\n  }, {\n    key: 'setDisplayPrecision',\n    value: function setDisplayPrecision (decimals) {\n      this._display._mode = 'precision'\n      this._display._decimals = decimals\n    }\n    /**\n     * Converts a numeric value into a string in the current display mode.\n     * @param {number} value\n     */\n\n  }, {\n    key: 'displayString',\n    value: function displayString (value) {\n      return this.displayValue(value)\n    }\n    /**\n     * Converts a numeric value into a string in the current display mode.\n     * @param {number} value\n     * @return {string} The value arg in the display mode.\n     */\n\n  }, {\n    key: 'displayValue',\n    value: function displayValue (value) {\n      if (this._display._mode === 'precision') {\n        return value.toPrecision(this._display._decimals)\n      }\n\n      if (this._display._mode === 'exponential') {\n        return value.toExponential(this._display._decimals)\n      }\n\n      return value.toFixed(this._display._decimals)\n    }\n  }])\n\n  return Float\n}(Numeric))\n\n/**\n * Option is a Variant whose value is a Javascript string primitive\n * and a member of a predefined set of strings.\n */\n\nconst Option = /* #__PURE__ */(function (_AbstractVariant) {\n  _inherits(Option, _AbstractVariant)\n\n  const _super = _createSuper(Option)\n\n  function Option (validOptionsArray) {\n    let _this\n\n    const defaultOptionIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0\n\n    _classCallCheck(this, Option)\n\n    if (!(validOptionsArray instanceof Array)) {\n      throw new Error('new Variant.Option('.concat(validOptionsArray, ') options array is not an array'))\n    } else if (defaultOptionIndex < 0 || defaultOptionIndex >= validOptionsArray.length) {\n      throw new Error('new Variant.Option('.concat(validOptionsArray, ', ').concat(defaultOptionIndex, ') defaultOptionIndex is invalid'))\n    }\n\n    _this = _super.call(this, validOptionsArray[defaultOptionIndex])\n    _this._specs._options = validOptionsArray\n\n    _this._validator.isString = function (value) {\n      return typeof value === 'string'\n    }\n\n    _this._validator.isMember = function (value) {\n      return _this.has(value)\n    }\n\n    return _this\n  }\n\n  _createClass(Option, [{\n    key: 'displayString',\n    value: function displayString (option) {\n      this.ensure(option) // @todo Check for translation table\n\n      return option\n    }\n  }, {\n    key: 'ensure',\n    value: function ensure (option) {\n      if (!this.has(option)) {\n        throw new Error(\"Invalid Option '\".concat(option, \"'\"))\n      }\n\n      return true\n    }\n  }, {\n    key: 'has',\n    value: function has (option) {\n      return this._specs._options.includes(option)\n    }\n  }, {\n    key: 'options',\n    value: function options () {\n      return this._specs._options\n    }\n  }])\n\n  return Option\n}(AbstractVariant))\n\n/**\n * @file Data and methods to support Quantity units-of-measure and conversions.\n * @copyright 2020 Systems for Environmental Management\n * @author Collin D. Bevins, <cbevins@montana.com>\n * @license MIT\n * @version 0.1.0\n * #coverage-20200506\n */\n\n/**\n  * UnitsOfMeasure defines all base units which are subsequently\n  * which are subsequently exponentiated and/or combined into\n  * derived units-of-measure.\n  *\n  * Some examples:\n  * - the distance UoM 'ft' and the time UoM 'min' are combined\n  *   to form the derived UoM velocity of 'ft/min'\n  * - the distance UoM 'ft' is eponentiated to form area 'ft2' and volume 'ft3'\n  * - and so forth, such as 'btu/ft2-s'\n  *\n  * The array also includes UoMs with special names that cannot be parsed\n  * into their base units; 'ac', 'ha', and 'W' for example.  Otherwise, only the\n  * fundamental units are defined here.\n  *\n  * Each entry is a 2-element array:\n  * - Element 0 is the unit-of-measure key,\n  * - Element 1 is a multiplication factor for converting a value\n  *   from its (arbitrary) *base* amount into the units-of-measure key amount.\n  *\n  * For example, to convert from 'x' ft into\n  * - inches, multiply by 12,\n  * - yards, multiply by 1/3, and\n  * - chains, multiply by 1/11\n  *\n  * The *base* unit-of-measure is arbitrarily chosen for each fundamental\n  * quantity (arc, distance, energy, mass, ratio, temperature, time).\n  * While it is never necessary for the client to know what base unit was chosen,\n  * it can be ascertained by its multiplication factor === 1.\n  */\nconst UnitsOfMeasure = [// unity\n  ['1', 1], // arc ('deg' is the base)\n  ['deg', 1], ['\\xB0', 1], ['\\u2109', 1], // oF\n  ['\\u2103', 1], // oC\n  // distance ('ft' is base)\n  ['ft', 1], // based on [ft_us}, NOT [ft_i]]\n  ['ch', 1 / 66], ['in', 12], ['mi', 1 / 5280], ['yd', 1 / 3], ['m', 0.3048], ['cm', 30.48], ['mm', 304.8], ['km', 0.0003048], ['ac', 1 / 43560], ['ha', 1 / 107639], ['W', 1 / 0.057], // energy ('btu' is base)\n  ['btu', 1], // [Btu_IT]\n  ['J', 1055.05585262], // btu_IT:\n  // mass ('lb' is base)\n  ['lb', 1], ['oz', 16], ['ton', 1 / 2000], ['kg', 0.45359237], ['g', 453.59237], ['T', 0.00045359237], // 1 / 2204.622621848776\n  // ratio ('ratio' is base)\n  ['ratio', 1], ['percent', 100], ['%', 100], // temp ('F' is base)\n  ['F', 1], ['C', 5 / 9], ['K', 5 / 9], // time ('min' is base)\n  ['min', 1], ['s', 60], ['h', 1 / 60], ['d', 1 / (60 * 24)], ['y', 1 / (60 * 24 * 365)]]\nconst UnitsMap = new Map(UnitsOfMeasure)\n\n/**\n * @file Units-of-measure conversion methods\n * @copyright 2020 Systems for Environmental Management\n * @author Collin D. Bevins, <cbevins@montana.com>\n * @license MIT\n * @version 0.1.0\n * #coverage-20200507\n */\n/**\n * Returns the 'asUnits' amount that is equivalent to base units `baseAmount`\n *\n * This is used by the behaveplus-dag Node class to convert Node values\n * (which are stored in base units) to some other display/output units-of-measure.\n *\n * @param {number} baseAmount The amount of some Quantity expressed in its base units\n * @param {string} asUnits The amount of the Quantity expressed in the `asUnits`\n */\n\nfunction asAmount (baseAmount, asUnits) {\n  // Special case:: temperature scale\n  if (asUnits === 'F' || asUnits === '\\u2109') {\n    return baseAmount\n  } else if (asUnits === 'C' || asUnits === '\\u2103') {\n    return (baseAmount - 32) * 5 / 9\n  } else if (asUnits === 'K') {\n    return 273.15 + (baseAmount - 32) * 5 / 9\n  }\n\n  const f = factor(asUnits)\n  return f * baseAmount\n}\n/**\n * Returns the base amount that is equivalent to `fromAmount` `fromUnits`\n *\n * This is used by the behaveplus-dag Node class to convert display/input amounts\n * into Node values (which are stored in base units).\n *\n * @param {number} fromAmount The amount of some Quantity expressed in `asUnits`\n * @param {string} fromUnits The `fromAmount` units-of-measure\n */\n\nfunction baseAmount (fromAmount, fromUnits) {\n  // Special case:: temperature scale\n  if (fromUnits === 'F' || fromUnits === '\\u2109') {\n    return fromAmount\n  } else if (fromUnits === 'C' || fromUnits === '\\u2103') {\n    return 32 + 9 * fromAmount / 5\n  } else if (fromUnits === 'K') {\n    return 32 + 9 * (fromAmount - 273.15) / 5\n  }\n\n  const f = factor(fromUnits)\n  return fromAmount / f\n}\n/**\n * Converts an amount from some units-of-measure into another units-of-measure.\n *\n * @param {number} fromAmount The amount of some quantity as measured in `fromUnits`\n * @param {string} fromUnits The units-of-measure of the `fromAmount`\n * @param {string} intoUnits The units-of-measure of the converted amount.\n * @return {number} The `fromAmount` converted into `intoUnits`\n *\n * NOTE: This does not test if `fromUnits` and `intoUnits` are compatible!\n */\n\nfunction convert (fromAmount, fromUnits, intoUnits) {\n  return asAmount(baseAmount(fromAmount, fromUnits), intoUnits)\n}\n/**\n * Returns the multiplication factor to convert an amount from `units`\n * into its (anonymous) base units.\n *\n *  This function does some basic parsing of compound units-of-measure,\n *  and can handle the following syntax:\n * - 'ft' (simple one-dim measure, simple single term)\n * - 'ft2'  (multi-dim measure, simple single term)\n * - 'ft3' (multi-dim measure, simple single term)\n * - 'ft/min' (simple one-dim numerator with simple on-dim denom)\n * - 'ft2/ft3' (simple multi-dim numerator with simple multi-dim denom)\n * - '1/ft'  (reduced simple multi-dim numerator with simple multi-dim denom)\n * - 'lb/ft2'\n * - 'T/ha', 't/ac' (multi-dim measure with an alias)\n * - 'lb/ft3'\n * - 'btu/ft/s'\n * - 'btu/ft-s'\n * - 'ft-lb/min'\n *\n * This function can also be used to ensure correct units-of-measure strings,\n * as it will throw an Error if it is unable to parse the units.\n *\n * @param {string} units Units-of-measure string.  The following syntax is accepted:\n * @returns {number} The multiplication factor to convert an amount from some `units`\n * into its (anonymous) base units.\n */\n\nfunction factor (units) {\n  let f = 1 // split into at least 1 numerator and 0 or more denominators\n\n  units.split('/').forEach(function (part, idx) {\n    // Special case: numerator is just '1' as in '1/ft'\n    if (idx === 0 && part === '1') ; else {\n      // split into terms\n      part.split('-').forEach(function (term) {\n        let power = 1\n        let uom = term\n        const lastChar = term.charAt(term.length - 1)\n\n        if (lastChar === '2') {\n          uom = term.substring(0, term.length - 1)\n          power = 2\n        } else if (lastChar === '3') {\n          power = 3\n          uom = term.substring(0, term.length - 1)\n        }\n\n        if (!UnitsMap.has(uom)) {\n          throw new Error(\"Units '\".concat(units, \" term '\").concat(term, \"' uom '\").concat(uom, \"' is invalid\"))\n        }\n\n        const termFactor = Math.pow(UnitsMap.get(uom), power) // If before the first '/', multiply; otherwise, divide\n\n        f *= idx === 0 ? termFactor : 1 / termFactor\n      })\n    }\n  })\n  return f\n}\n\n/**\n * Quantity is a Float Variant class with a minimum value of 0 and a units-of-measure.\n *\n * In addition to a 'base' units-of-measure, a Quantity has a current display\n * units-of-measure; calling displayString() transforms the base amount to the display amount.\n *\n * Quantity is able to convert between a base units-of-measure and other defined\n * units-of-measure.\n */\n\nconst Quantity = /* #__PURE__ */(function (_Float) {\n  _inherits(Quantity, _Float)\n\n  const _super = _createSuper(Quantity)\n\n  /**\n   *\n   * @param {string[]} uom Array of allowed units-of-measure (i.e., ['lb/ft2', 't/ac', 'kg/m2', 'T/ha'] )\n   * @param {number} defaultValue  If omitted, set to 0\n   * @param {number} maxValue If omitted, set to Number.MAX_VALUE\n   */\n  function Quantity (uomArray) {\n    let _this\n\n    const defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0\n    const maxValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_VALUE\n\n    _classCallCheck(this, Quantity)\n\n    if (!(uomArray instanceof Array)) {\n      throw new Error(\"Quantity() arg 1 expects an array, but got '\".concat(_typeof(uomArray), \"'\"))\n    }\n\n    uomArray.forEach(function (uom) {\n      return factor(uom)\n    })\n    _this = _super.call(this, defaultValue, 0, maxValue)\n    _this._specs._uomArray = uomArray\n    _this._display._units = uomArray[0]\n    return _this\n  }\n  /**\n   * Returns the `baseAmount` expressed in the current display units-of-measure.\n   * @param {number} baseAmount  The base amount (usually a Quantity Node value)\n   */\n\n  _createClass(Quantity, [{\n    key: 'baseAsDisplayUom',\n    value: function baseAsDisplayUom (baseAmount) {\n      return this.baseAsUom(baseAmount, this._display._units)\n    }\n    /**\n     * Returns the `baseAmount` expressed in `asUnits`\n     * @param {number} baseAmount\n     * @param {string} asUnits\n     */\n\n  }, {\n    key: 'baseAsUom',\n    value: function baseAsUom (baseAmount, asUnits) {\n      return asAmount(baseAmount, asUnits)\n    }\n    /**\n     * Returns the `fromAmount` expressed in its base units-of-measure.\n     * @param {number} fromAmount The quantity amount expressed in `fromUnits`\n     * @param {string} fromUnits The `fromAmount` units-of-measure\n     */\n\n  }, {\n    key: 'baseFromUom',\n    value: function baseFromUom (fromAmount, fromUnits) {\n      return baseAmount(fromAmount, fromUnits)\n    }\n  }, {\n    key: 'convert',\n    value: function convert$1 (fromAmount, fromUnits, intoUnits) {\n      return convert(fromAmount, fromUnits, intoUnits)\n    }\n    /**\n     * Usually called by Node to express its current value on some display units and format.\n     * @param {number} baseAmount\n     */\n\n  }, {\n    key: 'displayString',\n    value: function displayString (baseAmount) {\n      return ''.concat(this.displayValue(baseAmount), ' ').concat(this._display._units)\n    }\n  }, {\n    key: 'displayUnits',\n    value: function displayUnits () {\n      return this._display._units\n    }\n    /**\n     * Usually called by Node to express its current value on some display units and format.\n     * @param {number} baseAmount\n     */\n\n  }, {\n    key: 'displayValue',\n    value: function displayValue (baseAmount) {\n      const displayAmount = this.baseAsDisplayUom(baseAmount)\n      return Float.prototype.displayValue.call(this, displayAmount)\n    }\n  }, {\n    key: 'setDisplayUnits',\n    value: function setDisplayUnits (units) {\n      factor(units) // throws Error if bad units\n\n      this._display._units = units\n    }\n    /**\n     * @return Array of units-of-measure property key strings available for this Quantity\n     */\n\n  }, {\n    key: 'uomKeys',\n    value: function uomKeys () {\n      return this._specs._uomArray\n    }\n  }])\n\n  return Quantity\n}(Float))\n\n/**\n * Slope is a special case of Quantity, as it can be expressed\n * in 2 distinct systems of measurement:\n * - as a ratio of delta vertical / delta horizontal (range 0..inf),\n * - or as degrees above the horizontal (range 0..90)\n */\n\nconst Slope = /* #__PURE__ */(function (_Quantity) {\n  _inherits(Slope, _Quantity)\n\n  const _super = _createSuper(Slope)\n\n  // 'ratio' is the base, and we handle 'deg' as special case\n  function Slope () {\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0\n\n    _classCallCheck(this, Slope)\n\n    return _super.call(this, ['ratio', 'percent', '%'], defaultValue)\n  }\n\n  _createClass(Slope, [{\n    key: 'baseAsUom',\n    value: function baseAsUom (baseAmount, asUnits) {\n      return asUnits === 'deg' ? Slope.slopeDegrees(baseAmount) : Quantity.prototype.baseAsUom(baseAmount, asUnits)\n    }\n  }, {\n    key: 'baseFromUom',\n    value: function baseFromUom (fromAmount, fromUnits) {\n      return fromUnits === 'deg' ? Quantity.prototype.baseFromUom(Slope.slopeRatio(fromAmount), 'ratio') : Quantity.prototype.baseFromUom(fromAmount, fromUnits)\n    }\n  }, {\n    key: 'convert',\n    value: function convert (fromAmount, fromUnits, intoUnits) {\n      return this.baseAsUom(this.baseFromUom(fromAmount, fromUnits), intoUnits)\n    }\n    /**\n     * @return Array of units-of-measure property key strings available for this Quantity\n     */\n\n  }, {\n    key: 'uomKeys',\n    value: function uomKeys () {\n      return ['ratio', 'percent', '%', 'deg']\n    }\n  }], [{\n    key: 'constrain',\n    value: function constrain (degrees) {\n      while (degrees >= 90) {\n        degrees -= 90\n      }\n\n      while (degrees < 0) {\n        degrees += 90\n      }\n\n      return degrees\n    }\n  }, {\n    key: 'degrees',\n    value: function degrees (radians) {\n      return radians * 180 / Math.PI\n    }\n  }, {\n    key: 'radians',\n    value: function radians (degrees) {\n      return degrees * Math.PI / 180\n    }\n  }, {\n    key: 'slopeDegrees',\n    value: function slopeDegrees (ratio) {\n      const radians = Math.atan(ratio)\n      return Slope.degrees(radians)\n    }\n  }, {\n    key: 'slopeRatio',\n    value: function slopeRatio (degrees) {\n      const rad = Slope.radians(Slope.constrain(degrees))\n      return Math.tan(rad)\n    }\n  }])\n\n  return Slope\n}(Quantity))\n\n/**\n * Text is a Variant whose value is a Javascript string primitive.\n */\n\nconst Text = /* #__PURE__ */(function (_AbstractVariant) {\n  _inherits(Text, _AbstractVariant)\n\n  const _super = _createSuper(Text)\n\n  function Text () {\n    let _this\n\n    const defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''\n    const minLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0\n    const maxLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 999999\n\n    _classCallCheck(this, Text)\n\n    if (typeof defaultValue !== 'string') {\n      throw new Error('new Variant.Text('.concat(defaultValue, \") requires the 'defaultValue' argument to be a 'string'\"))\n    } else if (typeof minLength !== 'number') {\n      throw new Error('new Variant.Text('.concat(defaultValue, ', ').concat(minLength, \") requires the 'minLength' argument to be a 'number', but received a \").concat(_typeof(minLength)))\n    } else if (typeof maxLength !== 'number') {\n      throw new Error('new Variant.Text('.concat(defaultValue, ', ').concat(minLength, ', ').concat(maxLength, \") requires an 'maxLength' argument to be a 'number'\"))\n    } else if (minLength > maxLength) {\n      throw new Error('new Variant.Text('.concat(defaultValue, ', ').concat(minLength, ', ').concat(maxLength, ') minLength exceeds maxLength'))\n    } else if (defaultValue.length < minLength) {\n      throw new Error('new Variant.Text('.concat(defaultValue, ', ').concat(minLength, ', ').concat(maxLength, ') defaultValue length is less than minLength'))\n    } else if (defaultValue.length > maxLength) {\n      throw new Error('new Variant.Text('.concat(defaultValue, ', ').concat(minLength, ', ').concat(maxLength, ') defaultValue length exceeds maxLength'))\n    }\n\n    _this = _super.call(this, defaultValue)\n    _this._specs._minimumLength = minLength\n    _this._specs._maximumLength = maxLength\n\n    _this._validator.isString = function (value) {\n      return typeof value === 'string'\n    }\n\n    _this._validator.minimumLength = function (value) {\n      return value.length >= _this._specs._minimumLength\n    }\n\n    _this._validator.maximumLength = function (value) {\n      return value.length <= _this._specs._maximumLength\n    }\n\n    return _this\n  }\n\n  return Text\n}(AbstractVariant))\n\n/**\n * @file Exported WFSP math functions.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\nconst divide = function divide () {\n  for (var _len = arguments.length, numbers = new Array(_len), _key = 0; _key < _len; _key++) {\n    numbers[_key] = arguments[_key]\n  }\n\n  return numbers.reduce(function (a, b) {\n    return b === 0 ? 0 : a / b\n  }, numbers[0] * numbers[0])\n}\nconst fraction = function fraction (number) {\n  return Math.max(0, Math.min(1, number))\n}\nconst greaterThan = function greaterThan (a, b) {\n  return a > b\n}\nconst multiply = function multiply () {\n  for (var _len2 = arguments.length, numbers = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    numbers[_key2] = arguments[_key2]\n  }\n\n  return numbers.reduce(function (a, b) {\n    return a * b\n  }, 1)\n}\nconst or = function or (a, b) {\n  return a || b\n}\nconst positive = function positive (number) {\n  return Math.max(0, number)\n}\nconst sum = function sum () {\n  for (var _len4 = arguments.length, numbers = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    numbers[_key4] = arguments[_key4]\n  }\n\n  return numbers.reduce(function (a, b) {\n    return a + b\n  }, 0)\n}\nconst sumOfProducts = function sumOfProducts () {\n  for (var _len5 = arguments.length, numbers = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    numbers[_key5] = arguments[_key5]\n  }\n\n  const mid = Math.floor(numbers.length / 2)\n  const a1 = numbers.slice(0, mid)\n  return a1.reduce(function (acc, number, idx) {\n    return acc + a1[idx] * numbers[mid + idx]\n  }, 0)\n}\n\n/**\n * @file Exported WFSP standard Behave fuel model equations as implemented by BehavePlus v6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\nfunction curedHerbFraction (liveHerbMc) {\n  const fraction$1 = 1.333 - 1.11 * liveHerbMc\n  return fraction(fraction$1)\n}\nfunction deadHerbLoad (totalHerbLoad, curedHerbFraction) {\n  return totalHerbLoad * curedHerbFraction\n}\nfunction liveHerbLoad (totalHerbLoad, curedHerbFraction) {\n  return totalHerbLoad * (1 - curedHerbFraction)\n}\n\n/**\n * @file Exported WFSP canopy functions as implemented by BehavePlus v6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\n// is filled with tree crowns (division by 3 assumes conical crown shapes).\n\nfunction crownFill (cover, cratio) {\n  return fraction(cratio) * fraction(cover) / 3\n} // Crown length\n\nfunction crownLength (baseHt, ht) {\n  return positive(ht - baseHt)\n} // // Crown length from crown ratio and canopy height\n// export function crownLengthFromRatio(crownRatio, ht) {\n//   return crownRatio * ht\n// }\n// Crown ratio\n\nfunction crownRatio (length, ht) {\n  return fraction(divide(length, ht))\n} // Canopy fuel load\n\nfunction fuelLoad (bulk, length) {\n  return positive(bulk * length)\n} // Canopy heat per unit area\n\nfunction heatPerUnitArea (load, heat) {\n  return positive(load * heat)\n} // Returns true if canopy effectively shelters the fuel from wind\n\nfunction sheltersFuelFromWind (cover, ht, fill) {\n  return cover >= 0.01 && fill >= 0.05 && ht >= 6\n} // Canopy induced midflame windspeed adjustment factor\n\nfunction windSpeedAdjustmentFactor (cover, ht, fill) {\n  let waf = 1\n\n  if (sheltersFuelFromWind(cover, ht, fill)) {\n    waf = 0.555 / (Math.sqrt(fill * ht) * Math.log((20 + 0.36 * ht) / (0.13 * ht)))\n  }\n\n  return fraction(waf)\n}\n\n/**\n * @file Exported WFSP chaparral dynamic fuel equations\n * as described by Rothermel and Philpot (1973)\n * and as implemented by BehavePlus V6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\nconst TypeChamise = 'chamise'\nconst TypeMixedBrush = 'mixedBrush'\nconst Types = [TypeChamise, TypeMixedBrush]\n/**\n * Estimates the chaparral age (years since last burned)\n * from the chaparral fuel depth and fuel type.\n *\n *  @param {number} depth - Chaparral fuel depth (ft+1)\n *  @param {string} type -  Chaparral fuel type ['chamise' | 'mixedBrush']\n *  @returns {number} Estimated chaparral age (years since last burned).\n */\n\nfunction age (depth, type) {\n  if (type === TypeChamise) {\n    return Math.exp(3.912023 * Math.sqrt(depth / 7.5))\n  }\n\n  if (type === TypeMixedBrush) {\n    return Math.exp(3.912023 * Math.sqrt(depth / 10))\n  }\n\n  return 0\n}\n/**\n * Estimates the chaparral fuel depth from its age and type.\n *\n * @param {number} age\n * @param {string} type  One of 'chamise' or 'mixedBrush'\n * @returns {number} Estimated fuel bed depth (ft+1)\n */\n\nfunction fuelDepth (age, type) {\n  // Prevent values of age < 1 from increasing the depth!\n  const x = Math.log(Math.max(age, 1.1)) / 3.912023\n  return type === TypeChamise ? 7.5 * x * x : 10 * x * x // type === TypeMixedBrush\n}\n/**\n *  Estimates the total chaparral fuel load from age and type.\n *\n * NOTE - Rothermel & Philpot (1973) used a factor of 0.0315 for chamise age,\n * while Cohen used 0.0347 in FIRECAST.  According to Faith Ann Heinsch:\n * <i>We are going to use Cohen’s calculation from FIRECAST. The change has to do\n * with the fact that we are creating a proxy age from fuel bed depth rather than\n * using an entered age. He had to make some corrections for that assumption.</i>\n *\n *  @param {number} age - Chaparral age (years since last burned)\n *  @param {string} type -  Chaparral fuel type ['chamise' | 'mixedBrush']\n *  @returns {number} Total fuel load (lb+1 ft-2)\n */\n\nfunction totalLoad (age, type) {\n  // Total load in tons per acre\n  let tpa = 0\n\n  if (type === TypeChamise) {\n    // const chamise1 = 0.0315   // Chamise load factor from Rothermel & Philpot (1973)\n    const chamise2 = 0.0347 // Chamise load factor from Cohen's FIRECAST code\n\n    tpa = age / (1.4459 + chamise2 * age)\n  } else if (type === TypeMixedBrush) {\n    tpa = age / (0.4849 + 0.017 * age)\n  } // Return total load in lb/ft2\n\n  return tpa * 2000 / 43560\n}\n/**\n * Dead fuel fraction from age for AVERAGE mortality level\n *\n * @param {number} age - Chaparral age (years since last burned)\n * @returns {number} Dead fuel fraction assuming avereage mortality.\n */\n\nfunction deadFractionAverageMortality (age) {\n  return fraction(0.0694 * Math.exp(0.0402 * age))\n}\n/**\n * Dead fuel fraction from age for SEVERE mortality level\n *\n * @param {number} age - Chaparral age (years since last burned)\n * @returns {number} Dead fuel fraction assuming severe mortality.\n */\n\nfunction deadFractionSevereMortality (age) {\n  return fraction(0.1094 * Math.exp(0.0385 * age))\n}\n/**\n *  Estimates chaparral dead fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} Chaparral dead fuel load (lb+1 ft-2)\n */\n\nfunction deadLoad (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * deadFuelFraction)\n}\n/**\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the dead fine (0 to 0.25 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot 1973 Figure 1.\n */\n\nfunction deadClass1Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * 0.347 * deadFuelFraction)\n}\n/**\n *  Estimates chaparral small (0.25-0.5 inch diameter) dead fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the dead small (0.25 to 0.5 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot 1973 Figure 1.\n */\n\nfunction deadClass2Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * 0.364 * deadFuelFraction)\n}\n/**\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the dead medium (0.5 to 1 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction deadClass3Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * 0.207 * deadFuelFraction)\n}\n/**\n * Estimates chaparral large (1 to 3 inch diameter) dead fuel load.\n *\n * Note that the factor of 0.082 varies from the Rothermel & Philpot\n * Figure 1 value of .085, because their factors totaled 1.03 instead of 1.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the dead large (1 to 3 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction deadClass4Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * 0.082 * deadFuelFraction)\n}\n/**\n *  Estimates chaparral live fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} Chaparral live fuel load (lb+1 ft-2)\n */\n\nfunction liveLoad (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * (1 - deadFuelFraction))\n}\n/**\n *  Estimates live fine (0 to 0.25 inch diameter) chaparral stem wood fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the live fine (0 to 0.25 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction liveClass1Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * (0.2416 - 0.256 * deadFuelFraction))\n}\n/**\n *  Estimates live small (0.25 to 0.5 inch diameter) chaparral stem wood fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the live small (0.25 t0 0.5 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction liveClass2Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * (0.1918 - 0.256 * deadFuelFraction))\n}\n/**\n *  Estimates live medium (0.5 to 1 inch diameter) chaparral stem wood fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the live medium (0.5 to 1 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction liveClass3Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * (0.2648 - 0.05 * deadFuelFraction))\n}\n/**\n *  Estimates live large (1 to 3 inch diameter) chaparral stem wood fuel load.\n *\n * Modified so that thisLoad = live load - (liveLeaf + liveFine + liveSmall + liveMedium)\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the live large (1 to 3 inch diameter) chaparral stem wood\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction liveClass4Load (totalFuelLoad, deadFuelFraction) {\n  const liveLoad = totalFuelLoad * (1 - deadFuelFraction)\n  const l1 = liveClass1Load(totalFuelLoad, deadFuelFraction)\n  const l2 = liveClass2Load(totalFuelLoad, deadFuelFraction)\n  const l3 = liveClass3Load(totalFuelLoad, deadFuelFraction)\n  const l5 = liveClass5Load(totalFuelLoad, deadFuelFraction)\n  return positive(liveLoad - l1 - l2 - l3 - l5) // return Calc.positive(totalFuelLoad * (0.1036 - 0.114 * deadFuelFraction))\n}\n/**\n *  Estimates live chaparral leaf fuel load.\n *\n * @param {number} totalFuelLoad Total chaparral fuel load (lb+1 ft-2)\n * @param {*} deadFuelFraction Dead fuel fraction (fraction)\n * @returns {number} The load (lb+1 ft-2)\n * of the live chaparral leaf\n * as per Rothermel and Philpot (1973) Figure 1.\n */\n\nfunction liveClass5Load (totalFuelLoad, deadFuelFraction) {\n  return positive(totalFuelLoad * (0.1957 - 0.305 * deadFuelFraction))\n}\n\n/**\n * @file Exported WFSP compass functions as implemented by BehavePlus v6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\n\n/**\n * Constrain compass degrees to the azimuth range [0 <= degrees < 360].\n *\n * @param float degrees The compass azimuth (degrees).\n *\n * @return float The compass azimuth constrained to the range [0 <= azimuth < 360] degrees.\n */\nfunction constrain (degrees) {\n  while (degrees >= 360) {\n    degrees -= 360\n  }\n\n  while (degrees < 0) {\n    degrees += 360\n  }\n\n  return degrees\n}\n/**\n * Calculate compass degrees (azimuth, clockwise from north) from radians.\n *\n * @param float radians Compass azimuth expressed in radians.\n *\n * @return float Compass azimuth expressed in degrees.\n */\n\nfunction degrees (radians) {\n  return radians * 180 / Math.PI\n}\nfunction diff (x, y) {\n  return constrain(x - y)\n}\n/**\n * Get the opposite azimuth from degrees.\n *\n * @param float deg A compass azimuth (degrees).\n *\n * @return float The opposite compass azimuth from dgrees.\n */\n\nfunction opposite (degrees) {\n  return constrain(degrees - 180)\n}\n/**\n * Calculate the radians of the compass azimuth (clockwise from north).\n *\n * @param float degrees  Compass azimuth (degrees clockwise from north).\n *\n * @return float The compass azimuth expressed in radians.\n */\n\nfunction radians (degrees) {\n  return degrees * Math.PI / 180\n}\n/**\n * Calculate the slope steepness in degrees from the slope vertical rise / horizontal reach ratio.\n *\n * @param float $ratio Ratio of the slope vertical rise / horizontal reach (fraction).\n *\n * @return float Slope steepness expressed in degrees.\n */\n\nfunction slopeDegrees (ratio) {\n  const radians = Math.atan(ratio)\n  return degrees(radians)\n}\n/**\n * Calculate slope steepness degrees from map measurements.\n *\n * @param float $mapScale Map sacle factor (Greater than 1, i.e., 24000)\n * @param float $contourInterval Map contour interval (in same units-of-measure as $distance)\n * @param float $contours Number of contours crossed in the measurement\n * @param float $mapDistance Map distance covered in the measurement\n *\n * @return float Slope steepness degrees\n */\n\nfunction slopeDegreesMap (mapScale, contourInterval, contours, mapDistance) {\n  const ratio = slopeRatioMap(mapScale, contourInterval, contours, mapDistance)\n  return slopeDegrees(ratio)\n}\n/**\n * Calculate the slope vertical rise / horizontal reach ratio from its steepness in degrees.\n *\n * @param float $degrees  Slope steepness in degrees.\n *\n * @return float Slope vertical rise / horizontal reach ratio (fraction).\n */\n\nfunction slopeRatio (degrees) {\n  const rad = radians(constrain(degrees))\n  return Math.tan(rad)\n}\n/**\n * Calculate slope steepness ratio from map measurements.\n *\n * @param float $mapScale Map sacle factor (Greater than 1, i.e., 24000)\n * @param float $contourInterval Map contour interval (in same units-of-measure as $distance)\n * @param float $contours Number of contours crossed in the measurement\n * @param float $mapDistance Map distance covered in the measurement\n *\n * @return float Slope steepness ratio\n */\n\nfunction slopeRatioMap (mapScale, contourInterval, contours, mapDistance) {\n  const reach = mapScale * mapDistance\n  const rise = contours * contourInterval\n  return reach <= 0 ? 0 : rise / reach\n}\nfunction sum$1 (x, y) {\n  return constrain(x + y)\n}\n\n/**\n * @file Exported WFSP crown fire functions\n * @version 0.1.0\n * as described by Rothermel () and by Scott & Reinhardt ()\n * and as implemented by BehavePlus v6.\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\nconst ACTIVE = 'Active'\nconst CONDITIONAL = 'Conditional'\nconst PASSIVE = 'Passive'\nconst SURFACE = 'Surface'\nconst InitiationTypes = [ACTIVE, CONDITIONAL, PASSIVE, SURFACE]\n/**\n * Calculate the crown fire active ratio.\n *\n * @param rActive Actual active crown fire spread rate (ft+1 min-1)\n * @param rPrime Crown spread rate required to maintain active crowning (ft+1 min-1)\n * @return Scott & Reinhardt's active crowning ratio.\n */\n\nfunction activeRatio (rActive, rPrime) {\n  return rPrime <= 0 ? 0 : rActive / rPrime\n}\n/**\n * Crown fire area per Rothermel (1991) equation 11 (p 16)\n *\n * @param dist Crown fire spread distance (ft+1)\n * @param lwr Crown fire length-to-width ratio\n * @return Crown fire area (ft+2)\n */\n\nfunction area (dist, lwr) {\n  return Math.PI * dist * dist / (4 * lwr)\n}\nfunction canTransition (transRatio) {\n  return transRatio >= 1\n}\n/**\n * Calculates the crown fraction burned as per Scott & Reinhardt (2001).\n *\n * @param rSurface Actual surface fire spread rate [Rsurface] (ft+1 min-1).\n * @param rInit Surface fire spread rate required to\n *  initiate torching/crowning [R'initiation] (ft+1 min-1).\n * @param rSa Surface fire spread rate [R'sa] (ft+1 min-1)\n *   at which the active crown fire spread rate is fully achieved\n *   and the crown fraction burned is 1.\n * @return The crown fraction burned (fraction).\n */\n\nfunction crownFractionBurned (rSurface, rInit, rSa) {\n  const numer = rSurface - rInit // Rsurface - R'init\n\n  const denom = rSa - rInit // R'sa - R'init\n\n  return fraction(divide(numer, denom))\n}\n/**\n * Calculate the Scott & Reinhardt 'crowning index' (O'active),\n * the 20-ft wind speed at which the crown canopy becomes fully available\n * for active fire spread (and the crown fraction burned approaches 1).\n *\n * @param oActive Open wind speed sufficient for active xcrown fire (ft+1 min-1)\n * @return The Scott & Reinhardt Crowning Index (km+1 h-1).\n */\n\nfunction crowningIndex (oActive) {\n  return oActive / 54.680665 // CI in km/h\n}\n/**\n *\n * @param crownHpua Crown fire (surface plus canopy fuel) heat per unit area (Btu+1 ft-2)\n * @param rActive Active crown fire spread rate (ft+1 min-1)\n * @return Active crown fire fireline intensity (BTU+1 ft-1 s-1)\n */\n\nfunction fliActive (crownHpua, rActive) {\n  return rActive / 60 * crownHpua\n}\nfunction fliFinal (rFinal, cfb, cpyHpua, surfHpua) {\n  return rFinal * (surfHpua + cfb * cpyHpua) / 60\n}\n/**\n * Calculate the critical surface fire intensity (I'initiation)\n * sufficient to drive off canopy foliar moisture and initiate a\n * passive or active crown fire.\n *\n * This is Scott & Reinhardt (2001) equation 11 (p 13).\n *\n * @param folMois Canopy foliar moisture content (ratio).\n * @param cpyBase Crown canopy base height (ft+1).\n * @return The critical surface fireline intensity (btu+1 ft-1 s-1)\n *  required to initiate a passive or active crown fire.\n */\n\nfunction fliInit (folMois, cpyBase) {\n  const fmc = Math.max(30, 100 * folMois) // convert to percent with 30% min\n\n  const cbh = Math.max(0.1, 0.3048 * cpyBase) // convert to meters with 10 cm min\n\n  const kwm = Math.pow(0.01 * cbh * (460 + 25.9 * fmc), 1.5) // (kW/m)\n\n  return kwm * 0.288672 // return as Btu/ft/s\n}\n/**\n * Calculate Thomas's (1963) flame length (ft+1) given a fireline intensity.\n *\n * @param fli Fireline intensity (Btu+1 ft-1 s-1).\n * @return Thomas' (1963) flame length (ft+1).\n */\n\nfunction flameLengthThomas (fli) {\n  return fli <= 0 ? 0 : 0.2 * Math.pow(fli, 2 / 3)\n} // Active crown fire heat per unit area,\n// sum of the surface fire HPUA and the entire active canopy HPUA\n// (i.e., the canopy load * canopy heat content,\n// and NOT the canopy fuel model 10 HPUA)\n\nfunction hpuaActive (surfHpua, cpyHpua) {\n  return surfHpua + cpyHpua\n}\nfunction isActive (transRatio, activeRatio) {\n  return type(transRatio, activeRatio) === ACTIVE\n}\nfunction isCrown (transRatio, activeRatio) {\n  const fireType = type(transRatio, activeRatio)\n  return fireType === ACTIVE || fireType === PASSIVE\n}\nfunction isConditional (transRatio, activeRatio) {\n  return type(transRatio, activeRatio) === CONDITIONAL\n}\nfunction isPassive (transRatio, activeRatio) {\n  return type(transRatio, activeRatio) === PASSIVE\n}\nfunction isSurface (transRatio, activeRatio) {\n  return type(transRatio, activeRatio) === SURFACE\n}\nfunction isPlumeDominated (powerRatio) {\n  return powerRatio >= 1\n}\nfunction isWindDriven (powerRatio) {\n  return powerRatio < 1\n}\n/**\n * Calculate the crown fire length-to-width ratio given the 20-ft\n * wind speed (Rothermel 1991, Equation 10, p16).\n *\n * @param wspd20 Wind speed at 20-ft (ft+1 min-1).\n * @return The crown fire length-to-width ratio (ratio).\n */\n\nfunction lengthToWidthRatio (wspd20) {\n  return 1 + 0.125 * (wspd20 / 88) // Wind speed must be in miles per hour\n}\n/**\n * Calculate the Scott & Reinhardt 'crowning index' (O'active),\n * the 20-ft wind speed at which the crown canopy becomes fully available\n * for active fire spread (and the crown fraction burned approaches 1).\n *\n * @param cpyBulk Crown canopy bulk density (btu+1 ft-3).\n * @param crownRxi Crown fire (fuel model 10) reaction intensity (btu+1 ft-2 min-1).\n * @param crownSink Crown fire (fuel model 10) heat sink (btu+1 ft-3).\n * @param phis Slope coefficient (0 for crown fire)\n * @return The O`active wind speed (ft+1 min-1) or Infinity.\n */\n\nfunction oActive (cpyBulk, crownRxi, crownSink, phis) {\n  if (cpyBulk === 0 || crownSink === 0) return Infinity // In native units\n\n  const cbd = 16.0185 * cpyBulk // Convert from lb/ft3 to kg/m3\n\n  const ractive = 3.28084 * (3 / cbd) // R'active, ft/min\n\n  const r10 = ractive / 3.34 // R'active = 3.324 * r10\n\n  const pflux = 0.048317062998571636 // Fuel model 10 actual propagating flux ratio\n\n  const ros0 = crownRxi * pflux / crownSink\n  if (ros0 - 1 - phis === 0) return Infinity\n  const windB = 1.4308256324729873 // Fuel model 10 actual wind factor B\n\n  const windBInv = 1 / windB // Fuel model 10 actual inverse of wind factor B\n\n  const windK = 0.0016102128596515481 // Fuel model 10 actual K = C*pow((beta/betOpt),-E)\n\n  const a = (r10 / ros0 - 1 - phis) / windK\n  if (a === 0) return Infinity\n  const uMid = Math.pow(a, windBInv)\n  const u20 = uMid / 0.4\n  return u20\n}\n/**\n * Crown fire perimeter per Rothermel (1991) equation 13 (p 16).\n *\n * @param dist Crown fire spread distance (ft+1)\n * @param lwr Crown fire length-to-width ratio\n * @return Crown fire perimeter (ft+1)\n */\n\nfunction perimeter (dist, lwr) {\n  return 0.5 * Math.PI * dist * (1 + 1 / lwr)\n}\n/**\n * Calculate the crown fire power-of-the-fire(ft+11 lb+1 ft-2 s-1).\n *\n * @param fliActive Crown fire active fireline intensity (Btu+1 ft-1 s-1).\n * @return Rothermel's power of the fire (ft+1 lb+1 ft-2 s-1).\n */\n\nfunction powerOfTheFire (fliActive) {\n  return fliActive / 129\n}\n/**\n * Calculate the crown fire power-of-the-wind (ft+1 lb+1 ft-2 s-1).\n *\n * See Rothermel (1991) equations 6 & 7 (p 14).\n *\n * @param wspd20 Wind speed at 20-ft (ft+1 min-1).\n * @param rActive Actiuve crown fire spread rate (ft+1 min-1).\n * @return Rothermel's power of the wind (ft+1 lb+1 ft-2 s-1).\n */\n\nfunction powerOfTheWind (wspd20, rActive) {\n  // Difference must be in ft+1 s-1\n  const diff = positive((wspd20 - rActive) / 60)\n  return 0.00106 * diff * diff * diff\n}\n/**\n * Calculate the active crown fire spread rate at head [Ractive] (ft+1 min-1)\n * given the corresponding standard fuel model 10 spread rate at head.\n *\n * This is the crown fire spread rate per Rothermel (1991), and which\n * Scott & Reinhardt term `Ractive`\n *\n * @param fm10Ros Standard fuel model 10 spread rate at head (ft+1 min-1).\n *\n * @return The spread rate at head (ft+1 min-1) of the active crown fire.\n */\n\nfunction rActive (fm10ros) {\n  return 3.34 * fm10ros\n}\n/**\n * Scott & Reinhardt (2005) final spread rate based on FAH.\n *\n * @param rSurface\n * @param rActive\n * @param cfb Crown fraction burned (fraction).\n * @return float Final crown fire spread rate (ft+1 min-1)\n */\n\nfunction rFinal (rSurface, rActive, cfb) {\n  return rSurface + cfb * positive(rActive - rSurface)\n}\n/**\n * Calculate the critical surface fire spread rate (R'initiation)\n * sufficient to initiate a passive or active crown fire.\n *\n * This is Scott & Reinhardt (2001) equation 12 (p 13).\n *\n * @param critSurfFli Critical surface fireline intensity (btu_1 ft-1 s-1).\n * @param surfHpua Surface fire heat per unit area (Btu+1 ft-2).\n * @return Scott & Reinhardt's critical surface fire spread rate\n *  [R'initiation] (ft+1 min-1)\n */\n\nfunction rInit (critSurfFli, surfHpua) {\n  return surfHpua <= 0 ? 1.0e12 : 60 * critSurfFli / surfHpua\n}\n/**\n * Calculate R'active, the critical crown (minimum) rate of spread for active crowning.\n *\n * Scott & Reinhardt (2001) equation 14, p 14.\n *\n * @param cpyBulk Crown canopy bulk density (lb+1 ft-3).\n * @return The critical crown fire spread rate (ft+1 min-1).\n */\n\nfunction rPrimeActive (cpyBulk) {\n  const cbdSi = 16.0184663678 * cpyBulk // convert to Kg/m3\n\n  const rosSi = cbdSi <= 0 ? 0 : 3 / cbdSi // m/min\n\n  const rosFpm = rosSi * 3.2808399 // return as ft/min\n\n  return rosFpm\n}\n/**\n * Scott & Reinhardt (2001) R'sa, the theoretical surface fire spread rate\n * when the 20-ft wind speed equals O'active\n *\n * @param oActive Critical open wind speed (ft+1 min-1) for sustaining fully active crown fire\n * @param surfRos0 Surface fire no-wind no-slope spread rate (ft+1 min-1)\n * @param surfWaf Surface fuel's wind speed adjustment factor to apply to oActive\n * @param surfWindB Surface fuel's wind factor B\n * @param surfWindK Surface fuel's wind factor K\n * @param surfPhiS Surface fuel's slope coefficient\n * @return R'sa The theoretical surface fire spread rate\n * when the 20-ft wind speed equals O'active\n */\n\nfunction rSa (oActive, surfRos0, surfWaf, surfWindB, surfWindK, surfPhiS) {\n  if (oActive === Infinity) return Infinity\n  const mwspd = surfWaf * oActive\n  const surfPhiW = mwspd <= 0 ? 0 : surfWindK * Math.pow(mwspd, surfWindB)\n  return surfRos0 * (1 + surfPhiW + surfPhiS)\n}\n/**\n * Calculate the crown fire transition ratio.\n *\n * @param surfFli Actual surface fire fireline intensity (Btu+1 ft-1 s-1).\n * @param iInit Critical surface fire fireline intensity [I'initiation]\n * required to initiate active or passive crowning (Btu+1 ft-1 s-1).\n * @return Rothermel's crown fire transition ratio.\n */\n\nfunction transitionRatio (surfFli, fliInit) {\n  return fliInit <= 0 ? 0 : surfFli / fliInit\n}\n/**\n * Calculate the final fire type.\n *\n *  <table>\n *    <tr>\n *      <td> Transition </td>\n *        <td colspan='2'> Active Ratio </td>\n *    </tr>\n *    <tr>\n *        <td> Ratio </td>\n *        <td> &lt 1 </td>\n *        <td> &gt = 1 </td>\n *    </tr>\n *    <tr>\n *        <td> &lt 1 </td>\n *        <td> 0 : Surface Fire </td>\n *        <td> 2 : Conditional Active Crown Fire </td>\n *    </tr>\n *    <tr>\n *        <td> &gt = 1 </td>\n *        <td> 1 : Passive Crown Fire </td>\n *        <td> 3 : Active Crown Fire </td>\n *    </tr>\n *  </table>\n *\n * @param transRatio The ratio of the surface fireline intensity to the\n * critical surface fireline intensity.\n * @param activeRatio The ratio of the active crown fire spread rate to the\n * critical crown fire spread rate\n * @return One of the following codes:\n *  - 'surface fire' indicates a surface fire with no torching or crowning\n *      (transition ratio < 1 && active ratio < 1)\n * - 'passive crown fire' indicates a passive/torching crown fire\n *      (transition ratio >= 1 && active ratio < 1)\n * - 'conditional surface fire' indicates a surface fire that could conditionally\n *      transition to an active crown fire\n *      (transition ratio < 1 && active ratio >= 1)\n * - 'active crown fire' indicates an active crown fire\n *      (transition ratio >= 1 && active ratio >= 1)\n */\n\nfunction type (transRatio, activeRatio) {\n  if (transRatio < 1) {\n    return activeRatio < 1 ? SURFACE : CONDITIONAL\n  } else {\n    // ( transRatio >= 1.0 )\n    return activeRatio < 1 ? PASSIVE : ACTIVE\n  }\n}\n\n/**\n * Calculates crown firebrand dropout altitude and distance,\n * drift distance, and total flat terrain spot distance.\n *\n * Thin wrapper around dist() that performs input/output\n * units conversions native to BPX.\n *\n * @param {real} canopyHt Average crown top height of forest cover (ft)\n * @param {real} crownFli Fire intensity (Btu/ft/s)\n * @param {real} ws20 Wind speed at canopy top, (ft/min)\n *\n * @return {object}\n *  zdrop: firebrand dropout plume coordinate height (ft)\n *  xdrop: firebrand dropout plume coordinate horizontal distance (ft)\n *  xdrift: firebrand down-wind drift horizontal distance (ft)\n *  xspot:  firebrand down-wind spotting distance on flat terrain (ft)\n *  layer: plume profile layer where dropout occurs\n */\n\nfunction flatDistance (canopyHt, ws20, crownFli) {\n  const fpm = 3.2808\n  const htop = canopyHt / fpm\n  const fikwpm = 3.46414 * crownFli // Anemometer wind speed must be km/h\n\n  const uan = 1.60934 * ws20 / 88 // Anemometer height (m)\n\n  const anem = 6.096 // utop is wind speed in m/s\n\n  const utop = windSpeedAtCanopyTop(htop, uan, anem)\n  const diam = 1\n\n  const _dist = dist(htop, fikwpm, utop, diam)\n  const _dist2 = _slicedToArray(_dist, 5)\n  const z = _dist2[0]\n  const x = _dist2[1]\n  const drift = _dist2[2]\n  const spot = _dist2[3]\n  const layer = _dist2[4]\n\n  return {\n    zdrop: fpm * z,\n    xdrop: fpm * x,\n    xdrift: fpm * drift,\n    xspot: fpm * spot,\n    layer: layer\n  }\n}\n/**\n * Simply returns the 'drift' property from the 'firebrand' object.\n *\n * @param {real} firebrandObj Object returned by flatDistance().\n * @return {real} Firebrand down-wind drift horizontal distance (ft)\n */\n\nfunction xdrift (firebrandObj) {\n  return firebrandObj.xdrift\n}\n/**\n * Simply returns the 'xdrop' property from the 'firebrand' object.\n *\n * @param {real} firebrandObj Object returned by flatDistance().\n * @return {real} Firebrand dropout plume coordinate horizontal distance (ft)\n */\n\nfunction xdrop (firebrandObj) {\n  return firebrandObj.xdrop\n}\n/**\n * Simply returns the 'spot' property from the 'firebrand' object.\n *\n * @param {real} firebrandObj Object returned by flatDistance().\n * @return {real} Firebrand down-wind spotting distance on flat terrain (ft)\n */\n\nfunction xspot (firebrandObj) {\n  return firebrandObj.xspot\n}\n/**\n * Simply returns the 'zdrop' property from the 'firebrand' object.\n *\n * @param {real} firebrandObj Object returned by flatDistance().\n * @return {real} Firebrand dropout plume coordinate height (ft)\n */\n\nfunction zdrop (firebrandObj) {\n  return firebrandObj.zdrop\n}\n/**\n * Adapted from Albini's MS FORTRAN PROGRAM DIST().\n *\n * @param {real} htop Average crown top height of forest cover (m)\n * @param {real} fikwpm Fire intensity (kW/m) (must be > 1000 kW/m)\n * @param {real} utop Wind speed at canopy top, (m/s)\n * @param {real} diam Firebrand diameter when it reaches the surface (mm)\n *\n * @return {array} [fbHeight, fbDist, fbDrift, flatSpotDist, layer], where\n *  dbHeight is the firebrand dropout plume coordinate height (m)\n *  dbDist is the firebrand dropout plume coordinate distance (m)\n *  dbDrift is the firebrand down-wind drift distance (m)\n *  flatSpotDist is the firebrand down-wind spotting distance on flat terrain (m)\n *  layer is the plume profile layer\n */\n\nfunction dist (htop, fikwpm, utop, diam) {\n  // flame = flame height above the canopy top (m)\n  const flame = flameHeightAlbini(fikwpm, utop, htop)\n\n  if (flame <= 0) {\n    return [0, 0, 0, 0, 0]\n  } // if (ido===2) fikwpm = fireIntensityAlbini(flame, utop, htop)\n  // hf = normalized flame height above the canopy top (dl)\n\n  const hf = flame / htop // uc = normalized wind speed at the crown top\n\n  const g = 9.82 // Acceleration of gravity, m / s^2\n\n  const wn = Math.sqrt(g * htop)\n  const uc = utop / wn // dlosmm = ember diameter loss from the top of the plume till it hits the surface\n\n  const dlosmm = 0.064 * htop // Display inputs and intermediates derived so far:\n  // console.log('Mean height of forest (htop)', htop, '(m)')\n  // console.log('Mean wind speed at anemometer height', uan, '(km/h)')\n  // console.log('Mean height of flame above tops', flame, '(m)')\n  // console.log('Fire intensity [input or calculated]', fikwpm, '(kW/m)')\n  // console.log('Anemometer height', anem, '(m)')\n  // console.log('hf (flame ht / canopy ht)', hf, '(dl)')\n  // console.log('utop (wind speed at crown top)', utop, '(dl)')\n  // console.log('uc (normalized wind at crown top)', uc, '(dl)')\n  // console.log('wn (sqrt( g * htop ))', wn)\n  // console.log('Firebrand alighting diameter', diam, '(mm)')\n  // console.log('dlosmm (Ember diam loss=0.064 * htop)', dlosmm, '(mm)')\n  // dhitmm = ember diameter when it hits the ground (mm)\n\n  const dhitmm = diam // dtopmm = ember diameter when it reaches the top of the plume (mm)\n\n  const dtopmm = dhitmm + dlosmm // eta = 'safety factor' for firebrand diameter on impact (eta > 1.)\n\n  const eta = dtopmm / dlosmm // Determine firebrand dropout location within the plume.  Outputs are:\n  //  zdrop = normalized vertical firebrand dropout altitude (dl) (m / htop)\n  //  xdrop = corresponding dropout normalized distance down wind (dl) (m / htop)\n  //  layer = plume layer where dropout occurs\n\n  const _dropout = dropout(hf, uc, eta)\n  const _dropout2 = _slicedToArray(_dropout, 3)\n  const zdrop = _dropout2[0]\n  const xdrop = _dropout2[1]\n  const layer = _dropout2[2] // xdrift = normalized down wind drift distance (dl) (m / htop)\n\n  const xdrift = drift(zdrop, eta, uc) // xspot = normalized total spotting distance on flat terrain (m / htop)\n\n  const xspot = xdrop + xdrift // Convert normalized distances to m\n\n  const fbHeight = zdrop * htop\n  const fbDist = xdrop * htop\n  const fbDrift = xdrift * htop\n  const flatSpotDist = xspot * htop // console.log('Plume Drop-out Layer', layer)\n  // console.log('Normalized dropout altitude', zdrop, '(m / htop)')\n  // console.log('Normalized dropout distance', xdrop, '(m / htop)')\n  // console.log('Normalized drift distance', xdrift, '(m / htop)')\n  // console.log('Firebrand Height', fbHeight, '(m)')\n  // console.log('Firebrand Distance', fbDist, '(m)')\n  // console.log('Firebrand Drift', fbDrift, '(m)')\n  // console.log('Flat spot distance',  flatSpotDist, '(m)')\n\n  return [fbHeight, fbDist, fbDrift, flatSpotDist, layer]\n}\n/**\n * According to Albini:\n * \"Calculates normalized down wind drift distance, 'delx',\n * for a firebrand particle injected into log profile wind field at\n * normalized altitude 'zdrop' and entering the canopy with diameter\n * equal to 'eta' times that necessary to reach the surface.\"\n *\n * Adapted from Frank Albini's 'drift.for' FORTRAN source, SUBROUTINE DRIFT()\n *\n * @param {real} zdrop Normalized firebrand drop-out altitude (dl) (m / htop)\n * @param {real} eta Safety factor (eta>1)\n * @param {real} uc Normalized horizontal wind speed at crown top (dl)\n *\n * @return {real} Normalized down wind firebrand drift distance (m / htop)\n */\n\nfunction drift (zdrop, eta, uc) {\n  const f0 = 1 + 2.94 * zdrop\n  const f1 = Math.sqrt(eta / (eta + zdrop))\n  const f2 = eta > 0.34 ? Math.sqrt(eta / (eta - 0.34)) : 0\n  const f3 = f1 > 0 ? f2 / f1 : 0\n  const f2log = f2 > 1 ? Math.log((f2 + 1) / (f2 - 1)) : 0\n  const f3log = f3 > 1 ? Math.log((f3 + 1) / (f3 - 1)) : 0\n  const F = f3 > 0 ? 1 + Math.log(f0) - f1 + (f3log - f2log) / f3 : 0\n  const xdrift = 10.9 * F * uc * Math.sqrt(zdrop + eta)\n  return xdrift\n}\n/**\n * Calculates firebrand drop-out altitude and distance\n *\n * @param {real} hf  Normalized flame height above the canopy top (dl)\n * @param {real} uc Normalized horizontal wind speed at crown top (dl)\n * @param {real} eta Safety factor (eta>1)\n *\n * @returns {array} [zdrop, xdrop, layer], where\n *  zdrop = normalized vertical firebrand dropout altitude (dl) (m / htop)\n *  xdrop = corresponding dropout normalized distance down wind (dl) (m / htop)\n *  layer = plume layer where dropout occurs\n */\n\nfunction dropout (hf, uc, eta) {\n  // Delta x-z iteration factor\n  const ds = 0.2 // qfac = constant used to determine sufficient qreq at each layer\n\n  const qfac = uc > 0 ? 0.00838 / (uc * uc) : 0 // Albini's tip()\n\n  const rfc = 1 + 2.94 * hf\n  let fm = 0.468 * rfc * Math.log(rfc)\n  const fmuf = 1.3765 * (hf + rfc * Math.pow(Math.log(rfc), 2))\n  const uf = fmuf / fm\n  const ctn2f = rfc - 1 + rfc * Math.pow(Math.log(rfc), 2)\n  const tang = 1.4 * hf / (uc * Math.sqrt(ctn2f))\n  const ang = Math.atan(tang)\n  const wf = tang * uf\n  const vf = Math.sqrt(uf * uf + wf * wf)\n  const rhof = 0.6\n  const bf = fm / (rhof * vf) // end tip()\n\n  let sing = Math.sin(ang)\n  let cosg = Math.cos(ang)\n  let delx = 0.5 * bf * sing\n  let delz = 0.5 * bf * cosg\n  const zc2 = hf\n  const xc2 = hf / Math.tan(ang)\n  const fmf = fm\n  const tratf = 2 * fmf / 3\n  const fmadd = fm > 0 ? 0.2735 * fm : 0\n  const hfarg = 1 + 2.94 * hf\n  const fmuadd = 0.3765 * (hf + hfarg * Math.pow(Math.log(hfarg), 2))\n  let fmw = fm * wf\n  const dmwfac = uc > 0 ? 2 * fmf / (3 * uc * uc) : 0\n  let w = wf\n  let V = vf\n  let z = hf\n  let x = xc2 // Level 1\n\n  let q = 0.5 * rhof * wf * wf\n  let xb = delx\n  let zb = 0 // Level 2\n\n  q = 0.5 * rhof * wf * wf\n  xb = xc2 + delx\n  zb = zc2 - delz\n  let zp = zb\n  let xp = xb\n  let layer = 2\n  let qreq = qfac * (zb + eta)\n\n  if (q <= qreq) {\n    // console.log('plume cannot lift a particle large enough to provide the \"eta\" saftey factor')\n    return [0, 0, 0]\n  }\n\n  while (true) {\n    layer += 1\n    const dx = ds * cosg\n    const dz = ds * sing\n    x = x + dx\n    z = z + dz\n    const zarg = 1 + 2.94 * z\n    fm = 0.34 * zarg * Math.log(zarg) + fmadd\n    const fmu = z + 0.34 * zarg * Math.pow(Math.log(zarg), 2) + fmuadd\n    const trat = 1 + tratf / fm\n    const u = fmu / fm\n    fmw = fmw + dmwfac / V * dz\n    w = fmw / fm\n    V = Math.sqrt(u * u + w * w)\n    const b = fm * trat / V\n    sing = w / V\n    cosg = u / V\n    delx = 0.5 * b * sing\n    delz = 0.5 * b * cosg\n    xb = x + delx\n    zb = z - delz\n    q = 0.5 * w * w / trat\n    qreq = qfac * (zb + eta) // Compare with dist2a_plume.csv\n    // console.log(k, q[k], xb[k], zb[k], ang, dx, dz, x, z, zarg)\n    // fm, fmu, trat, u, fmw, w, V, b, sing, cosg, delx, delz)\n\n    if (q < qreq) {\n      return [zp, xp, layer - 1]\n    }\n\n    zp = zb // store as previous layer value\n\n    xp = xb // store as previous layer value\n\n    if (layer > 50000) {\n      throw new Error('dropout() exceeded 50000 layers')\n    }\n  }\n}\n/**\n * Calculates crown fire intensity from crown fire flame length\n * using Thomas equation.\n *\n * @param {real} flameLength Crown fire flame length (ft)\n * @return {real} Crown fire intensity (btu/ft/s)\n *  (multiply by 3.46414 to obtain kW/m)\n */\n\nfunction firelineIntensityThomas (flameLength) {\n  return flameLength <= 0 ? 0 : Math.pow(5 * flameLength, 3 / 2)\n}\n/**\n * Estimates crown fire average flame HEIGHT (not length) above canopy top (m)\n *\n * Adapted from Albini's MS FORTRAN FUNCTION HEIGHT().\n *\n * @param {real} fikwpm Fire intensity (kW/m) (must be > 1000 kW/m)\n * @param {real} utop  Mean wind speed at canopy top (m/s)\n * @param {real} htop Average crown top height of forest cover (m)\n * @return {real} Average height of flame above canopy top (m)\n */\n\nfunction flameHeightAlbini (fikwpm, utop, htop) {\n  if (htop * utop <= 0 || fikwpm < 1000) return 0\n  const con = 7.791e-3 * fikwpm / (utop * htop)\n  let ylow = 1\n  let yhigh = Math.exp(con) // As 'con' approaches 780, 'yhigh' approaches Infinity,\n  // which causes endless binary seach loop.  So cap it...\n  // console.log(`Start flameHeightAlbini(): con=${con}, yhigh=${yhigh}`)\n\n  if (yhigh === Infinity) {\n    yhigh = Number.MAX_VALUE // console.log(` RESET: con=${con}, yhigh=${yhigh}`)\n  }\n\n  let loop = 1\n\n  while (true) {\n    const y = 0.5 * (ylow + yhigh)\n    const test = y * Math.log(y)\n\n    if (Math.abs(test - con) <= 1e-6) {\n      const height = htop * (y - 1) / 2.94 // console.log(`Loop ${loop} ylow=${ylow}, yhigh=${yhigh}`)\n\n      return height\n    }\n\n    loop = loop + 1\n\n    if (loop > 10000) {\n      // The following statement should never be executed, but still...\n      throw new Error('flameHeightAlbini() binary search endless loop detected')\n    }\n\n    if (test >= con) yhigh = y\n    if (test < con) ylow = y\n  }\n}\n/**\n * Estimates the mean wind speed at canopy top (m/s)\n *\n * Adapted from Albini's MS FORTRAN PROGRAM DIST() around statements 45 to 50\n *\n * @param {real} htop Average crown top height of forest cover (m)\n * @param {real} uan Measured wind speed at anemometer height (km/h)\n * @param {real} anem Height of measured wind speed (m)\n * @return {real} utop Mean wind speed at canopy top (m/s)\n */\n\nfunction windSpeedAtCanopyTop (htop, uan, anem) {\n  const zonh = htop > 0 ? anem / htop : 0\n  const fact = 1 + Math.log(1 + 2.94 * zonh)\n  const utop = uan / (3.6 * fact)\n  return utop\n}\n\n/* eslint-disable no-unused-vars */\n// Node updater methods that are handled internally by the Dag\nfunction bind (value) {\n  return value\n}\nfunction config (value) {\n  return value\n}\nfunction dangler (value) {\n  return value\n}\nfunction fixed (value) {\n  return value\n}\nfunction input (value) {\n  return value\n}\nfunction link (value) {\n  return value\n}\n/**\n * Callback for Dag.setModule()\n *\n * Notes:\n * - module() is called via Dag.setModules() -> DagDna.setModules() -> DagSetRun.setModules()\n * - The Module values have already been set before module() is called\n * - module() should enabled/disable Nodes and set Link Nodes as appropriate\n * - After returning from module(), DagSetRun.setModules() calls config()\n *\n * @param {Dag} dag  Reference to the DagDna instance\n * @param {string} mode 'cascade', 'independent', or 'none'\n *\n * In 'independent' mode, any two modules are ALWAYS and ONLY linked WHEN they are both active.\n * Thus, if both surfaceFire and crownFire are activate, they are also linked.\n * If crownSpot is then also activated, it is also linked to crownFire and then surfaceFire.\n * This forces the client to select all active modules, just as for BehavePlus for Windows.\n *\n * If mode is 'none', then links are set just like any other configure Node.\n * For example, if the client selects the flanking spread rate, the 'link.fireEllipse'\n * configuration Node becomes 'required', and the client may then choose between\n * 'linkedToSurfaceFire' or 'standAlone'.\n */\n\nfunction module (dag, mode) {\n  if (mode === 'independent') {\n    moduleIndependent(dag)\n  }\n}\n\nfunction moduleIndependent (dag) {\n  const modules = [['surfaceFire', ['surface.primary', 'surface.secondary', 'surface.weighted'], null], ['surfaceSpot', ['spotting.surfaceFire'], 'surfaceFire'], ['crownFire', ['crown.'], 'surfaceFire'], ['crownSpot', ['spotting.crownFire.'], 'crownFire'], ['fireEllipse', ['surface.fire.ellipse.'], 'surfaceFire'], ['fireContain', ['contain'], 'fireEllipse'], ['scorchHeight', ['scorch.'], 'surfaceFire'], ['treeMortality', ['mortality.'], 'scorchHeight'], ['spotting', ['spotting.burningPile', 'spotting.torchingTrees'], null], ['ignitionProbability', ['ignition.'], null]]\n  modules.forEach(function (_ref) {\n    const _ref2 = _slicedToArray(_ref, 3)\n    const name = _ref2[0]\n    const prefixes = _ref2[1]\n    const linkName = _ref2[2]\n\n    const modNode = dag.get('module.' + name) // *this* module Node\n\n    const active = modNode.value === 'active' // Set up possible linkage\n\n    if (linkName) {\n      const linkNode = dag.get('link.' + name)\n      linkNode.value = 'standAlone'\n\n      if (active) {\n        const linkMod = dag.get('module.' + linkName)\n\n        if (linkMod.value === 'active') {\n          // if there is a link module and its active\n          linkNode.value = 'linkedTo' + linkName.charAt(0).toUpperCase() + linkName.slice(1) // link to it\n        }\n      }\n    } // Enable/disable this module's Nodes\n\n    prefixes.forEach(function (prefix) {\n      dag.node.forEach(function (node) {\n        if (node.key.startsWith(prefix)) node.isEnabled = active\n      })\n    })\n  })\n}\n\n/**\n * @file Exported WFSP fire ellipse functions\n * as described by Albini (1998) and\n * as implemented by BehavePlus v6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\n/**\n * Calculate the fire ellipse area given its major axis length and\n * length-to-width ratio as per Rothermel (1991) equation 11 on page 16\n * (which ignores backing distance).\n *\n * @param len Total fire ellipse length (arbitrary distance unbits-of-measure).\n * @param lwr Fire ellipse length-to-width ratio (ratio).\n * @return Fire ellipse area (in same distance unitsof-measure as length squared).\n */\n\nfunction area$1 (len, lwr) {\n  return divide(Math.PI * len * len, 4 * lwr)\n}\n/**\n *  Calculate the fire spread rate (ft+1 min-1) at the ellipse back\n *  given the fire spread rate at ellipse head and fire ellipse length-to-width ratio.\n *\n *  NOTE this differs from FireSpread::spreadRateAtBack() which takes the\n *  length-to-width ratio as the second parameter, rather than ellipse eccentricity.\n *\n * @param spreadRateAtHead Fire spread rate at ellipse head (ft+1 min-1).\n * @param eccentricity Fire ellipse eccentricity (ratio).\n *\n * @return float The fire spread rate at the ellipse back (ft+1 min-1).\n */\n\nfunction backingSpreadRate (rosHead, eccent) {\n  return rosHead * divide(1 - eccent, 1 + eccent)\n}\n/**\n * Calculate the fire spread rate at 'beta' degrees from the fire ignition point-to-head vector.\n *\n * This calculates the fire spread rate at `beta` degrees from its *point of ignition*,\n * which *is not* the fire rate at `psi` degrees from the center of the ellipse.\n *\n * NOTE this differs from FireSPread::spreadRateATBeta(), which takes the ellipse\n * length-to-width ratio as its second argument.\n *\n * @param betaHead Fire spread vector of interest (degrees clockwise from heading direction).\n * @param rosHead Fire spread rate at the head (ft+1 min-1).\n * @param eccent Fire ellipse eccentricity (ratio).\n *\n * @return float The fire spread rate along the specified vector (ft+1 min-1).\n */\n\nfunction betaSpreadRate (betaHead, rosHead, eccent) {\n  let rosBeta = rosHead // Calculate the fire spread rate in this azimuth\n  // if it deviates more than a tenth degree from the maximum azimuth\n\n  if (Math.abs(betaHead) > 0) {\n    const rad = radians(betaHead)\n    rosBeta = rosHead * (1 - eccent) / (1 - eccent * Math.cos(rad))\n  }\n\n  return rosBeta\n}\n/**\n * Calculate the fire ellipse eccentricity.\n *\n * @param float lwr Fire ellipse length-to-width ratio.\n * @return float The fire ellipse eccentricity (ratio).\n */\n\nfunction eccentricity (lwr) {\n  const x = lwr * lwr - 1\n  return x <= 0 || lwr <= 0 ? 0 : Math.sqrt(x) / lwr\n}\n/**\n * Calculate the fire ellipse expansion rate at the flank.\n *\n * NOTE this differs from backingSpreadRate(), which takes two arguments,\n * the spread rate at head and the ellipse length-to-width ratio.\n *\n * @param rosMinor Fire ellipse expansion rate at its widest point\n * (in arbitrary velocity units-of-measure).\n *\n * @return The fire ellipse spread rate at the flank\n *  (in the same arbitrary velocity units-of-measure as minorAxisExpansionRate).\n */\n\nfunction flankingSpreadRate (rosMinor) {\n  return 0.5 * rosMinor\n}\n/**\n * Calculate the fire ellipse distance or rate at `F`.\n *\n * @param rosMajor Fire ellipse major axis spread rate or length\n *  (in arbitrary distance or velocity units-of-measure).\n * @return Fire ellipse `F` used to determine spread rates at arbitrary psi.\n */\n\nfunction fSpreadRate (rosMajor) {\n  return 0.5 * rosMajor\n}\n/**\n * Calculate the fire ellipse distance or rate at `G`.\n *\n * @param rosMajor Fire ellipse major axis spread rate or length\n *  (in arbitrary distance or velcoity units-of-measure).\n *\n * @param rosBack Portion of the total major axis rate or distance\n *  attributable to the backing rate or distance (in the same atbitrary\n *  distance or velcoity units-of-measure as majorAxisRateOrDistance).\n *\n * @return Fire ellipse `G` used to determine spread rates at arbitrary psi.\n */\n\nfunction gSpreadRate (rosMajor, rosBack) {\n  return 0.5 * rosMajor - rosBack\n}\n/**\n * Calculate the fire ellipse distance or rate at `H`.\n *\n * @param rosMinor Fire ellipse minor axis spread rate or length\n *  (in arbitrary distance or velcoity units-of-measure).\n *\n * @return Fire ellipse `H` used to determine spread rates at arbitrary psi.\n */\n\nfunction hSpreadRate (rosMinor) {\n  return 0.5 * rosMinor\n}\n/*! \\brief Caluclate the fireline intensity at some azimuth.\n */\n\nfunction fliAtAzimuth (fliHead, rosHead, rosAz) {\n  return positive(divide(fliHead * rosAz, rosHead))\n}\n/**\n * Calculate the fire ellipse expansion rate along its major axis.\n *\n * @param rosHead Fire spread rate at the head of the ellipse\n *  (in arbitrary velocity units-of-measure).\n *\n * @param rosBack Fire spread rate at the back of the ellipse\n *  (in the same velocity units-of-measure as spreadRateAtHead).\n *\n * @return The fire ellipse expansion rate along its major axis\n *  (in the same velocity units-of-measure as spreadRateAtHead).\n */\n\nfunction majorSpreadRate (rosHead, rosBack) {\n  return rosHead + rosBack\n}\n/**\n * Calculate the fire ellipse expansion rate along its minor axis.\n *\n * @param majorAxisRos Fire ellipse expansion rate along its major axis\n * (in arbitrary velocity units-of-measure).\n *\n * @param lwr The fire ellipse length-to-width ratio.\n *\n * @return The fire ellipse expansion rate along its mino axis\n * (in the same arbitrary velocity units-of-measure as majorAxisExpansionRate).\n */\n\nfunction minorSpreadRate (rosMajor, lwr) {\n  return positive(divide(rosMajor, lwr))\n} // Map area\n\nfunction mapArea (area, mapScale) {\n  return positive(divide(area, mapScale * mapScale))\n}\n/**\n *  Calculate the fire ellipse perimeter from its length and width.\n *\n * @param len Fire ellipse length (arbitrary distance units-of-measure).\n * @param wid Fire ellipse width (arbitrary distance units-of-measure).\n *\n * @return float The fire ellipse perimeter (in same distance units-of-measure as length).\n */\n\nfunction perimeter$1 (len, wid) {\n  const a = 0.5 * len\n  const b = 0.5 * wid\n  const xm = a + b <= 0 ? 0 : (a - b) / (a + b)\n  const xk = 1 + xm * xm / 4 + xm * xm * xm * xm / 64\n  return Math.PI * (a + b) * xk\n}\nfunction psiFromTheta (thetaFromHead, rosF, rosH) {\n  if (rosF <= 0 || rosH <= 0 || thetaFromHead <= 0) {\n    return 0\n  }\n\n  const thetaRadians = radians(thetaFromHead)\n  const tanPsiRadians = Math.tan(thetaRadians) * rosF / rosH\n  let psiRadians = Math.atan(tanPsiRadians) // psiRadians += ( psiRadians < 0) ? pi : 0\n  // psiradians += ( thetaRadians > pi) ? pi : 0\n  // Quadrant adjustment\n\n  if (thetaRadians <= 0.5 * Math.PI) ; else if (thetaRadians > 0.5 * Math.PI && thetaRadians <= 1.5 * Math.PI) {\n    psiRadians += Math.PI\n  } else if (thetaRadians > 1.5 * Math.PI) {\n    psiRadians += 2 * Math.PI\n  } // Convert psi radians to degrees\n\n  return degrees(psiRadians)\n}\n/**\n * Calculate the fire spread rate at 'psi' degrees from the fire ellipse center-to-head vector.\n *\n * This calculates the fire spread rate at `psi` degrees from its *ellipse center* to the ellipse head,\n * which *is not* the fire rate at `beta` degrees from the point of ignition.\n *\n * @param psiHead The fire spread vector of interest (degrees clockwise from heading direction).\n * @param rosF Fire ellipse expansion rate (ft+1 min-1) at ellipse point F.\n * @param rosG Fire ellipse expansion rate (ft+1 min-1) at ellipse point G.\n * @param rosH Fire ellipse expansion rate (ft+1 min-1) at ellipse point H.\n *\n *  @return The fire spread rate along the specified vector (ft+1 min-1).\n */\n\nfunction psiSpreadRate (psiHead, rosF, rosG, rosH) {\n  let rosPsi = 0\n\n  if (rosF * rosG * rosH > 0) {\n    const radians$1 = radians(psiHead)\n    const cosPsi = Math.cos(radians$1)\n    const cos2Psi = cosPsi * cosPsi\n    const sin2Psi = 1 - cos2Psi\n    const term1 = rosG * cosPsi\n    const term2 = rosF * rosF * cos2Psi\n    const term3 = rosH * rosH * sin2Psi\n    rosPsi = term1 + Math.sqrt(term2 + term3)\n  }\n\n  return rosPsi\n}\n/**\n * Calculate the distance given the velocity and elapsed time.\n *\n * @param rate Velocity\n * @param time Elapsed time\n * @return Distance traveled\n */\n\nfunction spreadDistance (rate, time) {\n  return rate * time\n}\nfunction thetaFromBeta (betaHead, rosF, rosG, rosH) {\n  if (rosF <= 0 || rosH <= 0) {\n    return 0\n  }\n\n  const betaRadians = radians(betaHead)\n  const cosBeta = Math.cos(betaRadians)\n  const cos2Beta = cosBeta * cosBeta\n  const sin2Beta = 1 - cos2Beta\n  const f2 = rosF * rosF\n  const g2 = rosG * rosG\n  const h2 = rosH * rosH\n  const term = Math.sqrt(h2 * cos2Beta + (f2 - g2) * sin2Beta)\n  const num = rosH * cosBeta * term - rosF * rosG * sin2Beta\n  const denom = h2 * cos2Beta + f2 * sin2Beta\n  const cosThetaRadians = num / denom\n  let thetaRadians = Math.acos(cosThetaRadians) // Quadrant adjustment\n\n  if (betaRadians < Math.PI) ; else if (betaRadians >= Math.PI) {\n    thetaRadians = 2 * Math.PI - thetaRadians\n  } // Convert theta radians to degrees\n\n  let thetaHead = degrees(thetaRadians)\n\n  if (betaHead > 180) {\n    thetaHead = 360 - thetaHead\n  }\n\n  return thetaHead\n} // //--------------------------------------------------------------------------\n// /** \\brief Updates beta wrt head from theta.\n//  *\n//  * Calculate the degrees from the fire ignition point given the degrees\n//  * from the ellipse center and some ellipse paramaters.\n//  *\n//  * @param theta Azimuth from the ellipse center wrt the fire head\n//  * @param rosF spread rate at F\n//  * @param rosG spread rate at G\n//  * @param rosH spread rate at H\n//  * @returns The azimuth from the fire ignition point.\n//  */\n// export function betaFromTheta( theta, rosF, rosG, rosH) {\n//   const thetaRadians = Compass.radians(theta)\n//   const num = rosH * Math.sin( thetaRadians)\n//   const denom = rosG + rosF* Math.cos(thetaRadians)\n//   let betaRadians = ( denom <= 0 ) ? 0 : Math.atan( num / denom )\n//   // Quandrant adjustment\n//   const boundary1 = 150\n//   const boundary2 = 210\n//   if (theta <= boundary1) {\n//     // no adjustment required\n//   } else if (theta > boundary1 && theta <= boundary2) {\n//     betaRadians += Math.PI\n//   } else if (theta > boundary2) {\n//     betaRadians += 2.0 * Math.PI\n//   }\n//   // Convert beta radians to degrees\n//   return Compass.degrees(betaRadians)\n// }\n// export function thetaFromPsi( psiHead, rosF, rosH ) {\n//   if ( rosF <= 0 ) {\n//     return 0.0\n//   }\n//   const tanThetaRadians = Math.tan( psiHead ) * rosH / rosF\n//   let thetaRadians = Math.atan( tanThetaRadians )\n//   // Quadrant adjustment\n//   if ( psiRadians <= 0.5 * Math.PI ) {\n//     // no adjustment\n//   } else if ( psiRadians > 0.5 * Math.PI && psiRadians <= 1.5 * Math.PI ) {\n//     thetaRadians += Math.PI\n//   } else if ( psiRadians > 1.5 * Math.PI ) {\n//     thetaRadians += 2 * Math.PI\n//   }\n//   //thetaRadians += ( thetaRadians < 0. || psiradians > pi ) ? pi : 0.\n//   // Convert theta radians to degrees\n//   thetaDegrees = Compass.degrees( thetaRadians )\n//   return thetaRadians\n// }\n\n/**\n * @file Exported WFSP fuel bed equations\n * as described by Rothermel (1972) and as implemented by BehavePlus V6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\n/**\n * Calculate the 'live' fuel category moisture content of extinction.\n *\n * @param real mextk The 'live' fuel category moisture content of extinction factor (ratio).\n * @param real dfmc The 'dead' fuel category fine moisture content (ratio).\n * @param real dmext The 'dead' category moisture content of extinction (ratio).\n * @return real The 'live' fuel category  moisture content of extinction (ratio).\n */\n\nfunction extinctionMoistureContent (mextk, dfmc, dmext) {\n  const dry = 1 - divide(dfmc, dmext)\n  const lmext = mextk * dry - 0.226\n  return Math.max(lmext, dmext)\n}\n/**\n * Calculate the 'live' fuel category moisture content of extinction factor.\n *\n * This factor is constant for a fuel bed, and represents the ratio\n * of dead-to-live fuel mass that must be raised to ignition.  It\n * is the method described by Rothermel (1972) on page 35 that was\n * subsequently refined in BEHAVE and BehavePlus to use the\n * effective fuel load and effective heating number to determine\n * the ratio of fine dead to fine live fuels.\n *\n * See Rothermel (1972) eq 88 on page 35.\n *\n * @param float defl The 'dead' fuel catagory total fine fuel load (lb+1 ft-2).\n * @param float lefl The 'live' fuel catagory total fine fuel load (lb+1 ft-2).\n *\n * @return float The 'live' fuel category moisture content of extinction factor.\n */\n\nfunction extinctionMoistureContentFactor (defl, lefl) {\n  return 2.9 * divide(defl, lefl)\n}\n/**\n * Calculate the fire heat per unit area.\n *\n * @param real rxi Fire reaction intensity (btu+1 ft-2 min-1).\n * @param real taur The fire/flame residence time (min+1).\n * @return The heat per unit area (btu+1 ft-2).\n */\n\nfunction heatPerUnitArea$1 (rxi, taur) {\n  return rxi * taur\n}\n/**\n *\n * @param float qig Fuel bed heat of pre-ignition (btu+1 lb-1)\n * @param float bulk Fuel bed bulk density (lb+1 ft-3)\n * @return float Fuel bed heat sink (btu+1 ft-3)\n */\n\nfunction heatSink (qig, bulk) {\n  return qig * bulk\n}\n/**\n * Calculate the dead or live category mineral damping coefficient.\n *\n * @param float lifeCategoryEffectiveMineralContent\n * @return float Dead or live fuel category mineral damping coefficient.\n */\n\nfunction mineralDamping (seff) {\n  const etas = seff <= 0 ? 1 : 0.174 / Math.pow(seff, 0.19)\n  return fraction(etas)\n}\n/**\n * Calculate the dead or live life category moisture damping coefficient.\n *\n * @param mois Life fuel category moisture content (ratio).\n * @param mext Life fuel category moisture content of extinction (ratio).\n * @return The life fuel category moisture damping coefficient (fraction).\n */\n\nfunction moistureDamping (mois, mext) {\n  const r = divide(mois, mext)\n  return fraction(1 - 2.59 * r + 5.11 * r * r - 3.52 * r * r * r)\n}\n/**\n * Calculate the no-wind no-slope fire spread rate.\n *\n * @param real rxi The total fire reaction intensity (btu+1 ft-2 min-1).\n * @param real pflx The fuel bed propagating flux ratio (ratio).\n * @param real sink The fuel bed heat sink (btu+1 ft-3).\n * @return The no-wind no-slope fire spread rate (ft+1 min-1).\n */\n\nfunction noWindNoSlopeSpreadRate (rxi, pflx, sink) {\n  return positive(divide(pflx * rxi, sink))\n}\n/**\n * Calculate the open-canopy midflame wind speed adjustment factor.\n *\n * @param fuelDepth Fuel bed depth (ft+1)\n * @return Wind speed adjustment factor\n */\n\nfunction openWindSpeedAdjustmentFactor (fuelDepth) {\n  const f = Math.min(6, Math.max(fuelDepth, 0.1))\n  return 1.83 / Math.log((20 + 0.36 * f) / (0.13 * f))\n}\n/**\n * Calculate the fuel bed optimum packing ratio (fraction).\n *\n * See Rothermel (1972) eq 37 (p 19, 26) and eq 69 (p32).\n *\n * @param float bedSavr Fuel bed surface area-to-volume ratio (ft-1).\n * @return float The fuel bed optimum packing ratio (fraction).\n */\n\nfunction optimumPackingRatio (savr) {\n  return savr <= 0 ? 0 : 3.348 / Math.pow(savr, 0.8189)\n}\nfunction packingRatio (deadPprc, livePprc, depth) {\n  return divide(deadPprc + livePprc, depth)\n}\n/**\n * Calculate the no-wind propagating flux ratio (ratio).\n *\n * The propagating flux is the numerator of the Rothermel (1972) spread\n * rate equation 1 and has units of heat per unit area per unit time.\n *\n * See Rothermel (1972) eq 42 (p 20, 26) and eq 76 (p32).\n *\n * @param float savr The fuel bed characteristic surface area-to-volume ratio (ft-1).\n * @param float beta The fuel bed packing ratio (ratio).\n * @return float The fuel bed no-wind propagating flux ratio (ratio).\n */\n\nfunction propagatingFluxRatio (savr, beta) {\n  return savr <= 0 ? 0 : Math.exp((0.792 + 0.681 * Math.sqrt(savr)) * (beta + 0.1)) / (192 + 0.2595 * savr)\n}\n/**\n * Calculate the life fuel category reaction intensity without moisture damping.\n *\n * @param float rxvo Fuel bed optimum reaction velocity (min-1).\n * @param float wnet Life fuel category net ovendry fuel load (lb+1 ft-2).\n * @param float heat Life fuel category heat of combustion (btu+1 lb-1).\n * @param float etas Life fuel category mineral damping coefficient (fraction).\n * @return float The life fuel category reaction intensity (btu+1 ft-2 min-1)\n *      without moisture damping.\n */\n\nfunction reactionIntensityDry (rxvo, wnet, heat, etas) {\n  return rxvo * wnet * heat * etas\n}\n/**\n * Calculate the fuel bed reaction velocity exponent 'A'.\n *\n * This is an arbitrary variable 'A'  used to derive the\n * fuel bed optimum reaction velocity.\n * See Rothermel (1972) eq 39 (p19, 26) and 67 (p 31).\n *\n * @param float savr Fuel bed surface area-to-volume ratio (ft-1).\n * @return float Fuel bed reaction velocity exponent 'A' (ratio).\n */\n\nfunction reactionVelocityExponent (savr) {\n  return savr <= 0 ? 0 : 133 / Math.pow(savr, 0.7913)\n}\n/**\n * Calculate the fuel bed maximum reaction velocity (min-1).\n *\n * See Rothermel (1972) eq 36 (p 19, 26) and 68 (p 32).\n *\n * @param float bedSavr Fuel bed surface area-to-volume ratio (ft-1).\n * @return float Fuel bed maximum reaction velocity (min-1).\n */\n\nfunction reactionVelocityMaximum (sv15) {\n  return sv15 <= 0 ? 0 : sv15 / (495 + 0.0594 * sv15)\n}\n/**\n * Calculate the fuel bed optimum reaction velocity (min-1).\n *\n * See Rothermel (1972) eq 38 (p 19, 26) and eq 67 (p 31).\n *\n * @param float betr Fuel bed packing ratio ratio (ratio).\n * @param float rxvm Fuel bed maximum reaction velocity (min-1).\n * @param float rxve Fuel bed reaction velocity exponent 'A' (ratio).\n * @return float Fuel bed optimum reaction velocity (min-1).\n */\n\nfunction reactionVelocityOptimum (betr, rxvm, rxve) {\n  return betr <= 0 || betr === 1 ? 0 : rxvm * Math.pow(betr, rxve) * Math.exp(rxve * (1 - betr))\n} // DEPRECATED - The size class surface area calculations are now done inside swtg()\n// Accumulate fuel particle surface area by size class\n// for fuel particles with size class idx\n// export function scArea(idx, s1, a1, s2, a2, s3, a3, s4, a4, s5, a5) {\n//   let area = 0\n//   area += (idx === s1) ? a1 : 0\n//   area += (idx === s2) ? a2 : 0\n//   area += (idx === s3) ? a3 : 0\n//   area += (idx === s4) ? a4 : 0\n//   area += (idx === s5) ? a5 : 0\n//   return area\n// }\n\n/**\n * Calculate the often-used intermediate parameter of the fuel bed's\n * characteristics surface area-to-volume ratio raised to the 1.5 power.\n *\n * @param float savr Fuel bed characteristic surface area-to-volume ratio (ft-1).\n * @return float Fuel bed parameter (ratio).\n */\n\nfunction savr15 (savr) {\n  return Math.pow(savr, 1.5)\n}\n/**\n * Calculate the fuel bed slope coeffient `phiS` slope factor.\n *\n * This factor is an intermediate parameter that is constant for a fuel bed,\n * and used to determine the fire spread slope coefficient `phiS`.\n *\n * See Rothermel (1972) eq 51 (p 24, 26) and eq 80 (p 33).\n *\n * @param float packingRatio Fuel bed packing ratio (ratio).\n * @return float Factor used to derive the slope coefficient `phiS' (ratio).\n */\n\nfunction slopeK (beta) {\n  return beta <= 0 ? 0 : 5.275 * Math.pow(beta, -0.3)\n} // Returns an array of 6 size class area weighting factors\n\nfunction sizeClassWeightingFactorArray (a1, s1, a2, s2, a3, s3, a4, s4, a5, s5) {\n  const a = [a1, a2, a3, a4, a5]\n  const s = [s1, s2, s3, s4, s5]\n  let tarea = 0.0\n  const scar = [0, 0, 0, 0, 0, 0]\n\n  for (let idx = 0; idx < 5; idx += 1) {\n    scar[s[idx]] += a[idx]\n    tarea += a[idx]\n  }\n\n  const scwt = [0, 0, 0, 0, 0, 0]\n\n  if (tarea > 0.0) {\n    for (let _idx = 0; _idx < 6; _idx += 1) {\n      scwt[_idx] = scar[_idx] / tarea\n    }\n  }\n\n  return scwt\n}\n/**\n * Calculate the fuel bed flame residence time.\n *\n * \\TODO find reference\n *\n * @param float savr Fuel bed surface area-to-volume ratio (ft-1).\n * @return float Fuel bed flame residence time (min+1).\n */\n\nfunction taur (savr) {\n  return savr <= 0 ? 0 : 384 / savr\n}\n/**\n * Calculate the fuel bed wind coefficient `phiW` correlation factor `B`.\n *\n * This factor is an intermediate parameter that is constant for a fuel bed,\n * and is used to derive the fire spread wind coefficient `phiW`.\n *\n * See Rothermel (1972) eq 49 (p 23, 26) and eq 83 (p 33).\n *\n * @param float savr Fuel bed characteristic surface area-to-volume ratio (ft-1).\n * @return float Wind coefficient `phiW` correlation parameter `B` (ratio).\n */\n\nfunction windB (savr) {\n  return 0.02526 * Math.pow(savr, 0.54)\n}\n/**\n * Calculate the fuel bed wind coefficient `phiW` correlation factor `C`.\n *\n * This factor is an intermediate parameter that is constant for a fuel bed,\n * and is used to derive the fire spread wind coefficient `phiW`.\n *\n * See Rothermel (1972) eq 48 (p 23, 26) and eq 82 (p 33).\n *\n * @param float savr Fuel bed characteristic surface area-to-volume ratio (ft-1).\n * @return float Wind coefficient `phiW` correlation parameter `C` (ratio).\n */\n\nfunction windC (savr) {\n  return 7.47 * Math.exp(-0.133 * Math.pow(savr, 0.55))\n}\n/**\n * Calculate the fuel bed wind coefficient `phiW` correlation factor `E`.\n *\n * This factor is an intermediate parameter that is constant for a fuel bed,\n * and is used to derive the fire spread wind coefficient `phiW`.\n *\n * See Rothermel (1972) eq 50 (p 23, 26) and eq 82 (p 33).\n *\n * @param float savr Fuel bed characteristic surface area-to-volume ratio (ft-1).\n * @return float Wind coefficient `phiW` correlation parameter `E` (ratio).\n */\n\nfunction windE (savr) {\n  return 0.715 * Math.exp(-0.000359 * savr)\n}\n/**\n * Calculate the fuel bed wind coeffient `phiW` wind factor.\n *\n * This factor is an intermediate parameter that is constant for a fuel bed,\n * and used to determine the fire spread wind coefficient `phiW`.\n *\n * See Rothermel (1972) eq 47 (p 23, 26) and eq 79 (p 33).\n *\n * @param float betr Fuel bed packing ratio (ratio).\n * @param float wnde The fuel bed wind coefficient `phiW` correlation factor `E`.\n * @param float wndc The fuel bed wind coefficient `phiW` correlation factor `C`.\n * @return float Factor used to derive the wind coefficient `phiW' (ratio).\n */\n\nfunction windK (betr, wnde, wndc) {\n  return betr <= 0 ? 0 : wndc * Math.pow(betr, -wnde)\n}\n/**\n * Calculate the fuel bed wind coeffient `phiW` inverse K wind factor.\n *\n * This factor is an intermediate parameter that is constant for a fuel bed,\n * and used to determine the fire spread wind coefficient `phiW`.\n *\n * It is the inverse of the wind factor 'K', and is used to re-derive\n * effective wind speeds within the BEHAVE fire spread computations.\n *\n * See Rothermel (1972) eq 47 (p 23, 26) and eq 79 (p 33).\n *\n * @param float betr Fuel bed packing ratio ratio (ratio).\n * @param float wnde The fuel bed wind coefficient `phiW` correlation factor `E`.\n * @param float wndc The fuel bed wind coefficient `phiW` correlation factor `C`.\n * @return float Factor used to derive the wind coefficient `phiW' (ratio).\n */\n\nfunction windI (betr, wnde, wndc) {\n  return betr <= 0.0 || wndc <= 0 ? 0 : Math.pow(betr, wnde) / wndc\n}\nfunction windSpeedAdjustmentFactor$1 (fuelSheltered, shelteredWaf, openWaf) {\n  return fuelSheltered ? Math.min(shelteredWaf, openWaf) : openWaf\n}\n\n/**\n * @file Exported BehavePlus fuel catalog accessors.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\nconst Domains = ['behave', 'chaparral', 'palmettoGallberry', 'westernAspen']\n/**\n * Map of fuel model aliases\n */\n\nconst Alias = new Map([['0', '0'], [0, '0'], ['none', '0'], ['rock', '0'], ['water', '0'], ['1', '1'], [1, '1'], ['2', '2'], [2, '2'], ['3', '3'], [3, '3'], ['4', '4'], [4, '4'], ['5', '5'], [5, '5'], ['6', '6'], [6, '6'], ['7', '7'], [7, '7'], ['8', '8'], [8, '8'], ['9', '9'], [9, '9'], ['10', '10'], [10, '10'], ['11', '11'], [11, '11'], ['12', '12'], [12, '12'], ['13', '13'], [13, '13'], ['101', '101'], [101, '101'], ['gr1', '101'], ['102', '102'], [102, '102'], ['gr2', '102'], ['103', '103'], [103, '103'], ['gr3', '103'], ['104', '104'], [104, '104'], ['gr4', '104'], ['105', '105'], [105, '105'], ['gr5', '105'], ['106', '106'], [106, '106'], ['gr6', '106'], ['107', '107'], [107, '107'], ['gr7', '107'], ['108', '108'], [108, '108'], ['gr8', '108'], ['109', '109'], [109, '109'], ['gr9', '109'], ['121', '121'], [121, '121'], ['gs1', '121'], ['122', '122'], [122, '122'], ['gs2', '122'], ['123', '123'], [123, '123'], ['gs3', '123'], ['124', '124'], [124, '124'], ['gs4', '124'], ['141', '141'], [141, '141'], ['sh1', '141'], ['142', '142'], [142, '142'], ['sh2', '142'], ['143', '143'], [143, '143'], ['sh3', '143'], ['144', '144'], [144, '144'], ['sh4', '144'], ['145', '145'], [145, '145'], ['sh5', '145'], ['146', '146'], [146, '146'], ['sh6', '146'], ['147', '147'], [147, '147'], ['sh7', '147'], ['148', '148'], [148, '148'], ['sh8', '148'], ['149', '149'], [149, '149'], ['sh9', '149'], ['161', '161'], [161, '161'], ['tu1', '161'], ['162', '162'], [162, '162'], ['tu2', '162'], ['163', '163'], [163, '163'], ['tu3', '163'], ['164', '164'], [164, '164'], ['tu4', '164'], ['165', '165'], [165, '165'], ['tu5', '165'], ['181', '181'], [181, '181'], ['tl1', '181'], ['182', '182'], [182, '182'], ['tl2', '182'], ['183', '183'], [183, '183'], ['tl3', '183'], ['184', '184'], [184, '184'], ['tl4', '184'], ['185', '185'], [185, '185'], ['tl5', '185'], ['186', '186'], [186, '186'], ['tl6', '186'], ['187', '187'], [187, '187'], ['tl7', '187'], ['188', '188'], [188, '188'], ['tl8', '188'], ['189', '189'], [189, '189'], ['tl9', '189'], ['201', '201'], [201, '201'], ['sb1', '201'], ['202', '202'], [202, '202'], ['sb2', '202'], ['203', '203'], [203, '203'], ['sb3', '203'], ['204', '204'], [204, '204'], ['sb4', '204'], ['301', '301'], [301, '301'], ['chaparral/type=chamise/depth=6/deadFraction=0.5', '301'], ['401', '401'], [401, '401'], ['pg/age=20/basal=120/cover=.8/height=5', '401'], ['501', '501'], [501, '501'], ['aspenShrub50', '501']])\n/**\n * Map of standard fuel models\n * where the map key is the model number as a text string\n */\n\nconst Model = new Map([// Example special case dynamic fuel models:\n  ['301', {\n    domain: 'chaparral',\n    label: 'chaparral, type=chamise, depth=6, deadFraction=0.5',\n    number: 301,\n    code: 'chaparral/type=chamise/depth=6/deadFraction=0.5',\n    depth: 6,\n    // the observed.depth\n    totalLoad: 1,\n    // the observed.totalLoad\n    deadFraction: 0.5,\n    // the observed.deadFuelFraction\n    fuelType: 'chamise'\n  }], ['401', {\n    domain: 'palmettoGallberry',\n    label: 'pg, age=20, basal=120, cover=.8, height=5',\n    number: 401,\n    code: 'pg/age=20/basal=120/cover=.8/height=5',\n    age: 20,\n    basalArea: 120,\n    cover: 0.8,\n    height: 5\n  }], ['501', {\n    domain: 'westernAspen',\n    label: 'Aspen-shrub 50%',\n    number: 501,\n    code: 'aspenShrub50',\n    curingLevel: 0.5,\n    fuelType: 'aspenShrub'\n  }], [// Standard BehavePlus Fuel Models\n    '0', {\n      domain: 'behave',\n      label: 'No Fuel',\n      number: 0,\n      code: 'none',\n      depth: 0,\n      deadMext: 0,\n      dead1Load: 0,\n      dead10Load: 0,\n      dead100Load: 0,\n      totalHerbLoad: 0,\n      liveStemLoad: 0,\n      dead1Savr: 0,\n      liveHerbSavr: 0,\n      liveStemSavr: 0,\n      deadHeat: 0,\n      liveHeat: 0\n    }], ['1', {\n    domain: 'behave',\n    label: 'Short grass',\n    number: 1,\n    code: '1',\n    depth: 1,\n    deadMext: 0.12,\n    dead1Load: 0.034,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 3500,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['2', {\n    domain: 'behave',\n    label: 'Timber grass and understory',\n    number: 2,\n    code: '2',\n    depth: 1,\n    deadMext: 0.15,\n    dead1Load: 0.092,\n    dead10Load: 0.046,\n    dead100Load: 0.023,\n    totalHerbLoad: 0.023,\n    liveStemLoad: 0,\n    dead1Savr: 3000,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['3', {\n    domain: 'behave',\n    label: 'Tall grass',\n    number: 3,\n    code: '3',\n    depth: 2.5,\n    deadMext: 0.25,\n    dead1Load: 0.138,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1500,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['4', {\n    domain: 'behave',\n    label: 'Chaparral',\n    number: 4,\n    code: '4',\n    depth: 6,\n    deadMext: 0.2,\n    dead1Load: 0.23,\n    dead10Load: 0.184,\n    dead100Load: 0.092,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.23,\n    dead1Savr: 2000,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['5', {\n    domain: 'behave',\n    label: 'Brush',\n    number: 5,\n    code: '5',\n    depth: 2,\n    deadMext: 0.2,\n    dead1Load: 0.046,\n    dead10Load: 0.023,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.092,\n    dead1Savr: 2000,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['6', {\n    domain: 'behave',\n    label: 'Dormant brush, hardwood slash',\n    number: 6,\n    code: '6',\n    depth: 2.5,\n    deadMext: 0.25,\n    dead1Load: 0.069,\n    dead10Load: 0.115,\n    dead100Load: 0.092,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1750,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['7', {\n    domain: 'behave',\n    label: 'Southern rough',\n    number: 7,\n    code: '7',\n    depth: 2.5,\n    deadMext: 0.4,\n    dead1Load: 0.052,\n    dead10Load: 0.086,\n    dead100Load: 0.069,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.017,\n    dead1Savr: 1750,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['8', {\n    domain: 'behave',\n    label: 'Short needle litter',\n    number: 8,\n    code: '8',\n    depth: 0.2,\n    deadMext: 0.3,\n    dead1Load: 0.069,\n    dead10Load: 0.046,\n    dead100Load: 0.115,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['9', {\n    domain: 'behave',\n    label: 'Long needle or hardwood litter',\n    number: 9,\n    code: '9',\n    depth: 0.2,\n    deadMext: 0.25,\n    dead1Load: 0.134,\n    dead10Load: 0.019,\n    dead100Load: 0.007,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2500,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['10', {\n    domain: 'behave',\n    label: 'Timber litter & understory',\n    number: 10,\n    code: '10',\n    depth: 1,\n    deadMext: 0.25,\n    dead1Load: 0.138,\n    dead10Load: 0.092,\n    dead100Load: 0.23,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.092,\n    dead1Savr: 2000,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['11', {\n    domain: 'behave',\n    label: 'Light logging slash',\n    number: 11,\n    code: '11',\n    depth: 1,\n    deadMext: 0.15,\n    dead1Load: 0.069,\n    dead10Load: 0.207,\n    dead100Load: 0.253,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1500,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['12', {\n    domain: 'behave',\n    label: 'Medium logging slash',\n    number: 12,\n    code: '12',\n    depth: 2.3,\n    deadMext: 0.2,\n    dead1Load: 0.184,\n    dead10Load: 0.644,\n    dead100Load: 0.759,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1500,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['13', {\n    domain: 'behave',\n    label: 'Heavy logging slash',\n    number: 13,\n    code: '13',\n    depth: 3,\n    deadMext: 0.25,\n    dead1Load: 0.322,\n    dead10Load: 1.058,\n    dead100Load: 1.288,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1500,\n    liveHerbSavr: 1500,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['101', {\n    domain: 'behave',\n    label: 'Short, sparse, dry climate grass',\n    number: 101,\n    code: 'gr1',\n    depth: 0.4,\n    deadMext: 0.15,\n    dead1Load: 0.004591368227731864,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.013774104683195591,\n    liveStemLoad: 0,\n    dead1Savr: 2200,\n    liveHerbSavr: 2000,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['102', {\n    domain: 'behave',\n    label: 'Low load, dry climate grass',\n    number: 102,\n    code: 'gr2',\n    depth: 1,\n    deadMext: 0.15,\n    dead1Load: 0.004591368227731864,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.04591368227731864,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['103', {\n    domain: 'behave',\n    label: 'Low load, very coarse, humid climate grass',\n    number: 103,\n    code: 'gr3',\n    depth: 2,\n    deadMext: 0.3,\n    dead1Load: 0.004591368227731864,\n    dead10Load: 0.018365472910927456,\n    dead100Load: 0,\n    totalHerbLoad: 0.06887052341597796,\n    liveStemLoad: 0,\n    dead1Savr: 1500,\n    liveHerbSavr: 1300,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['104', {\n    domain: 'behave',\n    label: 'Moderate load, dry climate grass',\n    number: 104,\n    code: 'gr4',\n    depth: 2,\n    deadMext: 0.15,\n    dead1Load: 0.01147842056932966,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.0872359963269054,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['105', {\n    domain: 'behave',\n    label: 'Low load, humid climate grass',\n    number: 105,\n    code: 'gr5',\n    depth: 1.5,\n    deadMext: 0.4,\n    dead1Load: 0.018365472910927456,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.11478420569329659,\n    liveStemLoad: 0,\n    dead1Savr: 1800,\n    liveHerbSavr: 1600,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['106', {\n    domain: 'behave',\n    label: 'Moderate load, humid climate grass',\n    number: 106,\n    code: 'gr6',\n    depth: 1.5,\n    deadMext: 0.4,\n    dead1Load: 0.004591368227731864,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.15610651974288337,\n    liveStemLoad: 0,\n    dead1Savr: 2200,\n    liveHerbSavr: 2000,\n    liveStemSavr: 1500,\n    deadHeat: 9000,\n    liveHeat: 9000\n  }], ['107', {\n    domain: 'behave',\n    label: 'High load, dry climate grass',\n    number: 107,\n    code: 'gr7',\n    depth: 3,\n    deadMext: 0.15,\n    dead1Load: 0.04591368227731864,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.24793388429752067,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['108', {\n    domain: 'behave',\n    label: 'High load, very coarse, humid climate grass',\n    number: 108,\n    code: 'gr8',\n    depth: 4,\n    deadMext: 0.3,\n    dead1Load: 0.02295684113865932,\n    dead10Load: 0.0459139,\n    dead100Load: 0,\n    totalHerbLoad: 0.33516988062442604,\n    liveStemLoad: 0,\n    dead1Savr: 1500,\n    liveHerbSavr: 1300,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['109', {\n    domain: 'behave',\n    label: 'Very high load, humid climate grass',\n    number: 109,\n    code: 'gr9',\n    depth: 5,\n    deadMext: 0.4,\n    dead1Load: 0.04591368227731864,\n    dead10Load: 0.04591368227731864,\n    dead100Load: 0,\n    totalHerbLoad: 0.4132231404958677,\n    liveStemLoad: 0,\n    dead1Savr: 1800,\n    liveHerbSavr: 1600,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['121', {\n    domain: 'behave',\n    label: 'Low load, dry climate grass-shrub',\n    number: 121,\n    code: 'gs1',\n    depth: 0.9,\n    deadMext: 0.15,\n    dead1Load: 0.009182736455463728,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0.02295684113865932,\n    liveStemLoad: 0.02984403,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1800,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['122', {\n    domain: 'behave',\n    label: 'Moderate load, dry climate grass-shrub',\n    number: 122,\n    code: 'gs2',\n    depth: 1.5,\n    deadMext: 0.15,\n    dead1Load: 0.02295684113865932,\n    dead10Load: 0.02295684113865932,\n    dead100Load: 0,\n    totalHerbLoad: 0.027548209366391182,\n    liveStemLoad: 0.04591368227731864,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1800,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['123', {\n    domain: 'behave',\n    label: 'Moderate load, humid climate grass-shrub',\n    number: 123,\n    code: 'gs3',\n    depth: 1.8,\n    deadMext: 0.4,\n    dead1Load: 0.013774104683195591,\n    dead10Load: 0.01147842056932966,\n    dead100Load: 0,\n    totalHerbLoad: 0.06657483930211203,\n    liveStemLoad: 0.057392102846648294,\n    dead1Savr: 1800,\n    liveHerbSavr: 1600,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['124', {\n    domain: 'behave',\n    label: 'High load, humid climate grass-shrub',\n    number: 124,\n    code: 'gs4',\n    depth: 2.1,\n    deadMext: 0.4,\n    dead1Load: 0.0872359963269054,\n    dead10Load: 0.013774104683195591,\n    dead100Load: 0.004591368227731864,\n    totalHerbLoad: 0.15610651974288337,\n    liveStemLoad: 0.3259871441689623,\n    dead1Savr: 1800,\n    liveHerbSavr: 1600,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['141', {\n    domain: 'behave',\n    label: 'Low load, dry climate shrub',\n    number: 141,\n    code: 'sh1',\n    depth: 1,\n    deadMext: 0.15,\n    dead1Load: 0.01147842056932966,\n    dead10Load: 0.01147842056932966,\n    dead100Load: 0,\n    totalHerbLoad: 0.0068870523415977955,\n    liveStemLoad: 0.05968778696051423,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['142', {\n    domain: 'behave',\n    label: 'Moderate load, dry climate shrub',\n    number: 142,\n    code: 'sh2',\n    depth: 1,\n    deadMext: 0.15,\n    dead1Load: 0.06198347107438017,\n    dead10Load: 0.11019283746556473,\n    dead100Load: 0.03443526170798898,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.17676767676767677,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['143', {\n    domain: 'behave',\n    label: 'Moderate load, humid climate shrub',\n    number: 143,\n    code: 'sh3',\n    depth: 2.4,\n    deadMext: 0.4,\n    dead1Load: 0.02066115702479339,\n    dead10Load: 0.13774104683195593,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.28466483011937554,\n    dead1Savr: 1600,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1400,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['144', {\n    domain: 'behave',\n    label: 'Low load, humid climate timber-shrub',\n    number: 144,\n    code: 'sh4',\n    depth: 3,\n    deadMext: 0.3,\n    dead1Load: 0.03902662993572084,\n    dead10Load: 0.05280073461891643,\n    dead100Load: 0.009182736455463728,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.11707988980716252,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['145', {\n    domain: 'behave',\n    label: 'High load, dry climate shrub',\n    number: 145,\n    code: 'sh5',\n    depth: 6,\n    deadMext: 0.15,\n    dead1Load: 0.1652892561983471,\n    dead10Load: 0.09641873278236915,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.13314967860422405,\n    dead1Savr: 750,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['146', {\n    domain: 'behave',\n    label: 'Low load, humid climate shrub',\n    number: 146,\n    code: 'sh6',\n    depth: 2,\n    deadMext: 0.3,\n    dead1Load: 0.13314967860422405,\n    dead10Load: 0.06657483930211203,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.06427915518824609,\n    dead1Savr: 750,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['147', {\n    domain: 'behave',\n    label: 'Very high load, dry climate shrub',\n    number: 147,\n    code: 'sh7',\n    depth: 6,\n    deadMext: 0.15,\n    dead1Load: 0.16069788797061524,\n    dead10Load: 0.24334251606978877,\n    dead100Load: 0.10101010101010101,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.15610651974288337,\n    dead1Savr: 750,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['148', {\n    domain: 'behave',\n    label: 'High load, humid climate shrub',\n    number: 148,\n    code: 'sh8',\n    depth: 3,\n    deadMext: 0.4,\n    dead1Load: 0.0941230486685032,\n    dead10Load: 0.15610651974288337,\n    dead100Load: 0.03902662993572084,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.19972451790633605,\n    dead1Savr: 750,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['149', {\n    domain: 'behave',\n    label: 'Very high load, humid climate shrub',\n    number: 149,\n    code: 'sh9',\n    depth: 4.4,\n    deadMext: 0.4,\n    dead1Load: 0.20661157024793386,\n    dead10Load: 0.11248852157943066,\n    dead100Load: 0,\n    totalHerbLoad: 0.07116620752984389,\n    liveStemLoad: 0.3213957759412305,\n    dead1Savr: 750,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1500,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['161', {\n    domain: 'behave',\n    label: 'Light load, dry climate timber-grass-shrub',\n    number: 161,\n    code: 'tu1',\n    depth: 0.6,\n    deadMext: 0.2,\n    dead1Load: 0.009182736455463728,\n    dead10Load: 0.04132231404958678,\n    dead100Load: 0.06887052341597796,\n    totalHerbLoad: 0.009182736455463728,\n    liveStemLoad: 0.04132231404958678,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['162', {\n    domain: 'behave',\n    label: 'Moderate load, humid climate timber-shrub',\n    number: 162,\n    code: 'tu2',\n    depth: 1,\n    deadMext: 0.3,\n    dead1Load: 0.0436179981634527,\n    dead10Load: 0.08264462809917356,\n    dead100Load: 0.057392102846648294,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.009182736455463728,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['163', {\n    domain: 'behave',\n    label: 'Moderate load, humid climate timber-grass-shrub',\n    number: 163,\n    code: 'tu4',\n    depth: 1.3,\n    deadMext: 0.3,\n    dead1Load: 0.050505050505050504,\n    dead10Load: 0.0068870523415977955,\n    dead100Load: 0.01147842056932966,\n    totalHerbLoad: 0.029843893480257115,\n    liveStemLoad: 0.050505050505050504,\n    dead1Savr: 1800,\n    liveHerbSavr: 1600,\n    liveStemSavr: 1400,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['164', {\n    domain: 'behave',\n    label: 'Dwarf conifer understory',\n    number: 164,\n    code: 'tu4',\n    depth: 0.5,\n    deadMext: 0.12,\n    dead1Load: 0.20661157024793386,\n    dead10Load: 0,\n    dead100Load: 0,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.09182736455463728,\n    dead1Savr: 2300,\n    liveHerbSavr: 1800,\n    liveStemSavr: 2000,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['165', {\n    domain: 'behave',\n    label: 'Very high load, dry climate timber-shrub',\n    number: 165,\n    code: 'tu5',\n    depth: 1,\n    deadMext: 0.25,\n    dead1Load: 0.18365472910927455,\n    dead10Load: 0.18365472910927455,\n    dead100Load: 0.13774104683195593,\n    totalHerbLoad: 0,\n    liveStemLoad: 0.13774104683195593,\n    dead1Savr: 1500,\n    liveHerbSavr: 1800,\n    liveStemSavr: 750,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['181', {\n    domain: 'behave',\n    label: 'Low load, compact conifer litter',\n    number: 181,\n    code: 'tl1',\n    depth: 0.2,\n    deadMext: 0.3,\n    dead1Load: 0.04591368227731864,\n    dead10Load: 0.10101010101010101,\n    dead100Load: 0.1652892561983471,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['182', {\n    domain: 'behave',\n    label: 'Low load broadleaf litter',\n    number: 182,\n    code: 'tl2',\n    depth: 0.2,\n    deadMext: 0.25,\n    dead1Load: 0.06427915518824609,\n    dead10Load: 0.10560146923783285,\n    dead100Load: 0.10101010101010101,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['183', {\n    domain: 'behave',\n    label: 'Moderate load conifer litter',\n    number: 183,\n    code: 'tl3',\n    depth: 0.3,\n    deadMext: 0.2,\n    dead1Load: 0.02295684113865932,\n    dead10Load: 0.10101010101010101,\n    dead100Load: 0.12855831037649218,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['184', {\n    domain: 'behave',\n    label: 'Small downed logs',\n    number: 184,\n    code: 'tl4',\n    depth: 0.4,\n    deadMext: 0.25,\n    dead1Load: 0.02295684113865932,\n    dead10Load: 0.06887052341597796,\n    dead100Load: 0.1928374655647383,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['185', {\n    domain: 'behave',\n    label: 'High load conifer litter',\n    number: 185,\n    code: 'tl5',\n    depth: 0.6,\n    deadMext: 0.25,\n    dead1Load: 0.05280073461891643,\n    dead10Load: 0.11478420569329659,\n    dead100Load: 0.20202020202020202,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['186', {\n    domain: 'behave',\n    label: 'High load broadleaf litter',\n    number: 186,\n    code: 'tl6',\n    depth: 0.3,\n    deadMext: 0.25,\n    dead1Load: 0.11019283746556473,\n    dead10Load: 0.055096418732782364,\n    dead100Load: 0.055096418732782364,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['187', {\n    domain: 'behave',\n    label: 'Large downed logs',\n    number: 187,\n    code: 'tl7',\n    depth: 0.4,\n    deadMext: 0.25,\n    dead1Load: 0.013774104683195591,\n    dead10Load: 0.06427915518824609,\n    dead100Load: 0.371900826446281,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['188', {\n    domain: 'behave',\n    label: 'Long-needle litter',\n    number: 188,\n    code: 'tl8',\n    depth: 0.3,\n    deadMext: 0.35,\n    dead1Load: 0.2662993572084481,\n    dead10Load: 0.06427915518824609,\n    dead100Load: 0.050505050505050504,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1800,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['189', {\n    domain: 'behave',\n    label: 'Very high load broadleaf litter',\n    number: 189,\n    code: 'tl9',\n    depth: 0.6,\n    deadMext: 0.35,\n    dead1Load: 0.305325987144169,\n    dead10Load: 0.1515151515151515,\n    dead100Load: 0.19054178145087236,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 1800,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['201', {\n    domain: 'behave',\n    label: 'Low load activity fuel',\n    number: 201,\n    code: 'sb1',\n    depth: 1,\n    deadMext: 0.25,\n    dead1Load: 0.06887052341597796,\n    dead10Load: 0.13774104683195593,\n    dead100Load: 0.505050505050505,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['202', {\n    domain: 'behave',\n    label: 'Moderate load activity or low load blowdown',\n    number: 202,\n    code: 'sb2',\n    depth: 1,\n    deadMext: 0.25,\n    dead1Load: 0.20661157024793386,\n    dead10Load: 0.1951331496786042,\n    dead100Load: 0.18365472910927455,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['203', {\n    domain: 'behave',\n    label: 'High load activity fuel or moderate load blowdown',\n    number: 203,\n    code: 'sb3',\n    depth: 1.2,\n    deadMext: 0.25,\n    dead1Load: 0.2525252525252525,\n    dead10Load: 0.12626262626262624,\n    dead100Load: 0.13774104683195593,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }], ['204', {\n    domain: 'behave',\n    label: 'High load blowdown',\n    number: 204,\n    code: 'sb4',\n    depth: 2.7,\n    deadMext: 0.25,\n    dead1Load: 0.24104683195592286,\n    dead10Load: 0.16069788797061524,\n    dead100Load: 0.24104683195592286,\n    totalHerbLoad: 0,\n    liveStemLoad: 0,\n    dead1Savr: 2000,\n    liveHerbSavr: 1800,\n    liveStemSavr: 1600,\n    deadHeat: 8000,\n    liveHeat: 8000\n  }]])\n\n/**\n * @file Exported BehavePlus fuel catalog accessors.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\nfunction domain (alias) {\n  return model(alias).domain\n}\n/**\n * @return A sorted array of all the fuel catalog model Map key strings.\n */\n\nfunction keys () {\n  return Array.from(Alias.keys()).sort()\n}\n/**\n * @param {string} alias Alias map key string\n * @return Reference to the Fuel.Model with the 'alias',\n * or throws an Error if the alias does not exist.\n */\n\nfunction model (alias) {\n  if (!Alias.has(alias)) {\n    throw new Error(\"Fuel catalog does not have fuel model key or alias '\".concat(alias, \"'\"))\n  }\n\n  return Model.get(Alias.get(alias))\n}\nfunction behaveDead1Load (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.dead1Load : 0\n}\nfunction behaveDead1Savr (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.dead1Savr : 1\n}\nfunction behaveDead10Load (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.dead10Load : 0\n}\nfunction behaveDead100Load (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.dead100Load : 0\n}\nfunction behaveDeadHeat (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.deadHeat : 0\n}\nfunction behaveDeadMext (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.deadMext : 0.01\n}\nfunction behaveDepth (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.depth : 0.01\n}\nfunction behaveLiveHeat (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.liveHeat : 0\n}\nfunction behaveLiveHerbSavr (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.liveHerbSavr : 1\n}\nfunction behaveLiveStemLoad (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.liveStemLoad : 0\n}\nfunction behaveLiveStemSavr (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.liveStemSavr : 1\n}\nfunction behaveTotalHerbLoad (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'behave' ? fuel.totalHerbLoad : 0\n}\nfunction chaparralDeadFraction (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'chaparral' ? fuel.deadFraction : 0\n}\nfunction chaparralDepth (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'chaparral' ? fuel.depth : 0.01\n}\nfunction chaparralFuelType (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'chaparral' ? fuel.fuelType : 'none'\n}\nfunction chaparralTotalLoad (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'chaparral' ? fuel.totalLoad : 0\n}\nfunction palmettoGallberryAge (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'palmettoGallberry' ? fuel.age : 0\n}\nfunction palmettoGallberryBasalArea (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'palmettoGallberry' ? fuel.basalArea : 0\n}\nfunction palmettoGallberryCover (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'palmettoGallberry' ? fuel.cover : 0\n}\nfunction palmettoGallberryHeight (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'palmettoGallberry' ? fuel.height : 0\n}\nfunction westernAspenCuringLevel (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'westernAspen' ? fuel.curingLevel : 0\n}\nfunction westernAspenFuelType (alias) {\n  const fuel = model(alias)\n  return fuel.domain === 'westernAspen' ? fuel.fuelType : 'none'\n}\n\n/**\n * @file Exported WFSP fuel particle equations as implemented by BehavePlus v6.\n * @copyright Systems for Environmental Management 2019\n * @author Collin D. Bevins\n * @version 0.1.0\n */\n/**\n * Calculate and return a fuel particle effective heating number (fraction)\n * from a surface area-to-volume ratio (ft-1).\n *\n * The effective heating number is derived from Rothermel (1972) equation 14\n * (p 8, 26) and 77 (p 32).\n *\n * @param float savr Fuel particle surface area-to-volume ratio (ft-1).\n *\n * @return float Fuel particle effective heating number (fraction).\n */\n\nfunction effectiveHeatingNumber (savr) {\n  return savr <= 0 ? 0 : Math.exp(-138 / savr)\n}\n/**\n * Calculate and return the dead fuel particle `fine fuel load`.\n *\n * The `fine fuel load` is the portion of the fuel particle\n * load used to determine the life category fine fuel,\n * which in turn is used to determine the live category\n * moisture content of extinction.\n *\n * See Rothermel (1972) equation 88 on page 35.\n *\n * @param string life The fuel particle life category: 'dead' or 'live'.\n * @param real savr The fuel particle surface area-to-volume ratio (ft-1).\n * @param real load The fuel particle load (lb/ft2).\n *\n * @return real Fuel particle ignition fuel load (lb/ft2).\n */\n\nfunction effectiveFuelLoad (savr, load, life) {\n  return life === 'dead' ? effectiveFuelLoadDead(savr, load) : effectiveFuelLoadLive(savr, load)\n}\nfunction effectiveFuelLoadDead (savr, load) {\n  return savr <= 0 ? 0 : load * Math.exp(-138 / savr)\n} // Calculate and return the live fuel particle `fine fuel load`.\n\nfunction effectiveFuelLoadLive (savr, load) {\n  return savr <= 0 ? 0 : load * Math.exp(-500 / savr)\n} // Calculate and return the ignition fuel water load (lb water + 1 lb fuel -1)\n\nfunction effectiveFuelWaterLoad (effectiveFuelOvendryLoad, moistureContent) {\n  return effectiveFuelOvendryLoad * moistureContent\n}\n/**\n * Calculate the fuel particle heat of pre-ignition.\n * @return real The fuel particle heat of pre-ignition (btu+1 lb-1).\n */\n\nfunction heatOfPreignition (mc, efhn) {\n  const qig = 250.0 + 1116.0 * mc\n  return qig * efhn\n}\nfunction netOvendryLoad (ovendryFuelLoad, totalMineralContent) {\n  return (1 - totalMineralContent) * ovendryFuelLoad\n}\nfunction selectByDomain (domain, behave, chaparral, palmetto, waspen) {\n  if (domain === 'behave') {\n    return behave\n  } else if (domain === 'chaparral') {\n    return chaparral\n  } else if (domain === 'palmettoGallberry') {\n    return palmetto\n  } else if (domain === 'westernAspen') {\n    return waspen\n  }\n\n  throw new Error(\"Unknown domain '\".concat(domain, \"'\"))\n}\n/**\n * Calculate and return the fuel particle size class [0-5]\n * given its surface area-to-volume ratio (ft-1).\n *\n * The Rothermel fire spread model groups dead and down fuel particles into\n * one of 6 size classes based upon its diameter (or surface area-to-volume ratio)\n * as follows:\n *\n *<table>\n *<tr><td>Size Class</td><td>Diameter (in)</td><td>Surface Area-to-Vol</td><td>Time-lag</td></tr>\n *  <tr><td>0</td><td>0.00 - 0.04</td><td>&gt 1200</td><td>1</td></tr>\n *  <tr><td>1</td><td>0.04 - 0.25</td><td>192 - 1200</td><td>1</td></tr>\n *  <tr><td>2</td><td>0.25 - 0.50</td><td>96 - 192</td><td>10</td></tr>\n *  <tr><td>3</td><td>0.50 - 1.00</td><td>48 - 96</td><td>10</td></tr>\n *  <tr><td>4</td><td>1.00 - 3.00</td><td>16 - 48</td><td>100</td></tr>\n *  <tr><td>5</td><td>&gt 3.00</td><td>&lt 16</td><td>1000</td></tr>\n * </table>\n *\n * @param {number} savr Fuel particle surface area-to-volume ratio (ft-1).\n *\n * @return {integer} Fuel particle size class [0..5].\n */\n\nfunction sizeClass (savr) {\n  let size = 5 // 3.00+ \"\n\n  if (savr >= 1200.0) {\n    // 0.00 - 0.04\"\n    size = 0\n  } else if (savr >= 192.0) {\n    // 0.04 - 0.25\"\n    size = 1\n  } else if (savr >= 96.0) {\n    // 0.25 - 0.50\"\n    size = 2\n  } else if (savr >= 48.0) {\n    // 0.50 - 1.00\"\n    size = 3\n  } else if (savr >= 16.0) {\n    // 1.00 - 3.00\"\n    size = 4\n  }\n\n  return size\n}\nfunction sizeClassWeightingFactor (size, swtgArray) {\n  return swtgArray[size]\n}\n/**\n * Calculate and return the fuel particle surface area (ft+2)\n * given its load (lb+1 ft-2), surface area-to-volume ratio (ft-1),\n * and fiber density (lb+1 ft-3).\n *\n * @param float load Fuel particle load (lb+1 ft-2).\n * @param float savr Fuel particle surface area-to-volume ratio (ft-1).\n * @param float density Fuel particle fiber density (lb+1 ft-3).\n *\n * @return float Fuel particle surface area (ft+2).\n */\n\nfunction surfaceArea (load, savr, dens) {\n  return divide(load * savr, dens)\n}\nfunction surfaceAreaWeightingFactor (area, catArea) {\n  return fraction(divide(area, catArea))\n}\n/**\n * Calculate and return the fuel particle volume (ft3/ft2)\n * given its a load (lb/ft2) and fiber density (lb/ft3).\n *\n * @param {number} load Fuel particle ovendry load (lb/ft2).\n * @param {number} dens Fuel particle fiber density (lb/ft3).\n *\n * @return float Fuel particle volume per square foot of fuel bed (ft3/ft2).\n */\n\nfunction volume (load, dens) {\n  return divide(load, dens)\n}\n\n/**\n * @file Exported WFSP surface fire and lightning strike ignition probability equations\n * as described by Latham () as described by Albini (1998) and\n * as implemented by BehavePlus v6.\n * @copyright Systems for Environmental Management 2019\n * @author Collin D. Bevins <cbevins@montana.com>\n * @version 0.1.0\n */\n/**\n * Calculates the probability of a surface fire firebrand starting a fire.\n *\n * @param {number} fuelTemperature  Dead surface fuel temperature (oF).\n * @param {number} fuelMoisture     Dead 1-hour time-lag surface fuel moisture content (lb/lb).\n * @return Probability of a firebrand starting a fire [0..1].\n */\n\nfunction firebrand (fuelTemperature, fuelMoisture) {\n  const c = (fuelTemperature - 32) * 5 / 9\n  const qign = Math.min(144.51 - 0.266 * c - 0.00058 * c * c - c * fuelMoisture + 18.54 * (1 - Math.exp(-15.1 * fuelMoisture)) + 640 * fuelMoisture, 400)\n  const x = 0.1 * (400 - qign)\n  return fraction(0.000048 * Math.pow(x, 4.3) / 50)\n}\n/**\n * Calculates the fuel temperature using the BEHAVE FIRE2 subroutine CAIGN() algorithm.\n *\n *  @param airTemp        Air temperature (oF).\n *  @param shadeFraction  Fraction of sun shaded from the fuel.\n *  @return Fuel temperature (oF).\n */\n\nfunction fuelTemperature (airTemp, shadeFraction) {\n  const xincr = 25 - 20 * shadeFraction\n  return airTemp + xincr\n} // Probability of a continuing current by charge type (Latham)\n\nconst ccNeg = 0.2\nconst ccPos = 0.9\nconst lightningData = {\n  ponderosaPineLitter: {\n    label: 'Ponderosa pine litter',\n    positive: function positive (arg) {\n      return ccPos * (0.92 * Math.exp(-0.087 * arg.moisture))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (1.04 * Math.exp(-0.054 * arg.moisture))\n    }\n  },\n  punkyWoodRottenChunky: {\n    label: 'Punky wood, rotten, chunky',\n    positive: function positive (arg) {\n      return ccPos * (0.44 * Math.exp(-0.11 * arg.moisture))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (0.59 * Math.exp(-0.094 * arg.moisture))\n    }\n  },\n  punkyWoodPowderDeep: {\n    label: 'Punky wood powder, deep (4.8 cm)',\n    positive: function positive (arg) {\n      return ccPos * (0.86 * Math.exp(-0.06 * arg.moisture))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (0.9 * Math.exp(-0.056 * arg.moisture))\n    }\n  },\n  punkyWoodPowderShallow: {\n    label: 'Punk wood powder, shallow (2.4 cm)',\n    positive: function positive (arg) {\n      return ccPos * (0.6 - 0.011 * arg.moisture)\n    },\n    negative: function negative (arg) {\n      return ccNeg * (0.73 - 0.011 * arg.moisture)\n    }\n  },\n  lodgepolePineDuff: {\n    label: 'Lodgepole pine duff',\n    positive: function positive (arg) {\n      return ccPos * (1 / (1 + Math.exp(5.13 - 0.68 * arg.depth)))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (1 / (1 + Math.exp(3.84 - 0.6 * arg.depth)))\n    }\n  },\n  douglasFirDuff: {\n    label: 'Douglas-fir duff',\n    positive: function positive (arg) {\n      return ccPos * (1 / (1 + Math.exp(6.69 - 1.39 * arg.depth)))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (1 / (1 + Math.exp(5.48 - 1.28 * arg.depth)))\n    }\n  },\n  highAltitudeMixed: {\n    label: 'High altitude mixed (mainly Engelmann spruce)',\n    positive: function positive (arg) {\n      return ccPos * (0.62 * Math.exp(-0.05 * arg.moisture))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (0.8 - 0.014 * arg.moisture)\n    }\n  },\n  peatMoss: {\n    label: 'Peat moss (commercial)',\n    positive: function positive (arg) {\n      return ccPos * (0.71 * Math.exp(-0.07 * arg.moisture))\n    },\n    negative: function negative (arg) {\n      return ccNeg * (0.84 * Math.exp(-0.06 * arg.moisture))\n    }\n  }\n}\nconst LightningCharges = ['negative', 'positive', 'unknown']\nconst LightningFuels = Object.keys(lightningData)\n/**\n * Calculates the probability of a lightning strike starting a fire.\n *\n *  @param fuelType Ignition fuel bed type:\n *  @param depth    Ignition fuel (duff & litter) bed depth (inches).\n *  @param duffMoisture Ignition fuel (duff & litter 100-h) moisture content (lb/lb).\n *  @param chargeType Lightning charge, one of 'positive', 'negative', or 'unknown'\n *  @return Probability of the lightning strike starting a fire [0..1].\n *\n *  \\note  The following assumptions are made by Latham:\n *  - 20% of negative flashes have continuing current\n *  - 90% of positive flashes have continuing current\n *  - Latham and Schlieter found a relative frequency of\n *    0.723 negative and 0.277 positive strikes\n *  - Unknown strikes are therefore p = 0.1446 neg + 0.2493 pos\n */\n\nfunction lightningStrike (fuelType, depth, moisture, chargeType) {\n  // Convert duff depth to cm and restrict to maximum of 10 cm.\n  // Convert duff moisture to percent and restrict to maximum of 40%.\n  const args = {\n    depth: Math.min(30.48 * depth, 10),\n    moisture: Math.min(100 * moisture, 40)\n  } // If 'positive' or 'negative'...\n\n  if (chargeType === 'positive' || chargeType === 'negative') {\n    return fraction(lightningData[fuelType][chargeType](args))\n  } // Otherwise, return a positive/negative frequency-weighted value using\n  // Latham and Schlieter's relative frequency of a continuing current by charge type\n\n  const freqNeg = 0.723\n  const freqPos = 0.277\n  const pos = fraction(lightningData[fuelType].positive(args))\n  const neg = fraction(lightningData[fuelType].negative(args))\n  return fraction(freqPos * pos + freqNeg * neg)\n}\n\n/**\n * @file Exported WFSP palmetto-gallberry dynamic fuel model equations\n * as described by Hough and Albini (1978) and as implemented by BehavePlus V6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\n\nfunction deadFineLoad (age, ht) {\n  return positive(-0.00121 + 0.00379 * Math.log(age) + 0.00118 * ht * ht)\n} // dead 0.25 to 1 inch\n\nfunction deadSmallLoad (age, cover) {\n  return positive(-0.00775 + 0.00021 * cover + 0.00007 * age * age)\n} // dead foliage\n\nfunction deadFoliageLoad (age, cover) {\n  return 0.00221 * Math.pow(age, 0.51263) * Math.exp(0.02482 * cover)\n} // L layer\n\nfunction deadLitterLoad (age, basalArea) {\n  return (0.03632 + 0.0005336 * basalArea) * (1.0 - Math.pow(0.25, age))\n}\nfunction fuelDepth$1 (ht) {\n  return Math.max(0.01, 2.0 * ht / 3.0)\n} // live 0 to 0.25 inch\n\nfunction liveFineLoad (age, ht) {\n  return positive(0.00546 + 0.00092 * age + 0.00212 * ht * ht)\n} // live 0.25 to 1 inch\n\nfunction liveSmallLoad (age, ht) {\n  return positive(-0.02128 + 0.00014 * age * age + 0.00314 * ht * ht)\n} // live foliage\n\nfunction liveFoliageLoad (age, cover, ht) {\n  return positive(-0.0036 + 0.00253 * age + 0.00049 * cover + 0.00282 * ht * ht)\n}\n\n/**\n * @file Exported WFSP equations for spotting distance from a burning pile,\n * torching trees, and surface fire as implemented by BehavePlus V6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\n// Spot distance terrain location parameters\nconst Location = {\n  midslopeWindward: {\n    factor: 0,\n    label: 'Midslope, Windward'\n  },\n  valleyBottom: {\n    factor: 1,\n    label: 'Valley Bottom'\n  },\n  midslopeLeeward: {\n    factor: 2,\n    label: 'Midslope, Leeward'\n  },\n  ridgeTop: {\n    factor: 3,\n    label: 'Ridge Top'\n  }\n}\nconst locations = function locations () {\n  return Object.keys(Location)\n}\n/**\n * Torching tree spotting distance supported species parameters\n *\n * The primary key is the 4-5 character FOFEM5 genus-species code.\n * The tree species properties are:\n * - common: common name,\n * - scientific: scientific name,\n * - height: flame height computation parameter,\n * - duration: flame duration computation parameter,\n */\n\nconst TorchingTreeSpecies = ['ABBA', 'ABGR', 'ABLA', 'PICO', 'PIEC2', 'PIEL', 'PIEN', 'PIMO3', 'PIPA2', 'PIPO', 'PISE', 'PITA', 'PSME', 'TSHE', 'LAOC', 'THPL']\nconst TorchingSteadyFlame = {\n  ABBA: {\n    common: 'balsam fir',\n    scientific: 'Abies balsamea',\n    height: [16.5, 0.515],\n    duration: [10.7, -0.278]\n  },\n  ABGR: {\n    common: 'grand fir',\n    scientific: 'Abies grandis',\n    height: [16.5, 0.515],\n    duration: [10.7, -0.278]\n  },\n  ABLA: {\n    common: 'subalpine fir',\n    scientific: 'Abies lasiocarpa',\n    height: [15.7, 0.451],\n    duration: [10.7, -0.278]\n  },\n  PICO: {\n    common: 'lodgepole pine',\n    scientific: 'Pinus contorta',\n    height: [12.9, 0.453],\n    duration: [12.6, -0.256]\n  },\n  PIEC2: {\n    common: 'shortleaf pine',\n    scientific: 'Pinus echinata',\n    height: [2.71, 1.0],\n    duration: [7.91, -0.344]\n  },\n  PIEL: {\n    common: 'slash pine',\n    scientific: 'Pinus elliottii',\n    height: [2.71, 1.0],\n    duration: [11.9, -0.389]\n  },\n  PIEN: {\n    common: 'Engelmann spruce',\n    scientific: 'Picea engelmannii',\n    height: [15.7, 0.451],\n    duration: [12.6, -0.256]\n  },\n  PIMO3: {\n    common: 'western white pine',\n    scientific: 'Pinus monticola',\n    height: [12.9, 0.453],\n    duration: [10.7, -0.278]\n  },\n  PIPA2: {\n    common: 'longleaf pine',\n    scientific: 'Pinus palustrus',\n    height: [2.71, 1.0],\n    duration: [11.9, -0.389]\n  },\n  PIPO: {\n    common: 'ponderosa pine',\n    scientific: 'Pinus ponderosa',\n    height: [12.9, 0.453],\n    duration: [12.6, -0.256]\n  },\n  PISE: {\n    common: 'pond pine',\n    scientific: 'Pinus serotina',\n    height: [2.71, 1.0],\n    duration: [7.91, -0.344]\n  },\n  PITA: {\n    common: 'loblolly pine',\n    scientific: 'Pinus taeda',\n    height: [2.71, 1.0],\n    duration: [13.5, -0.544]\n  },\n  PSME: {\n    common: 'Douglas-fir',\n    scientific: 'Pseudotsuga menziesii',\n    height: [15.7, 0.451],\n    duration: [10.7, -0.278]\n  },\n  TSHE: {\n    common: 'western hemlock',\n    scientific: 'Tsuga heterophylla',\n    height: [15.7, 0.451],\n    duration: [6.3, -0.249]\n  },\n  // This is an estimated guess,\n  // using the height parms used by PICO, PIPO, and PIMO3\n  // and the duration parms used by TSHE\n  LAOC: {\n    common: 'western larch',\n    scientific: '\"Larix occidentalis (guess)',\n    height: [12.9, 0.453],\n    duration: [6.3, -0.249]\n  },\n  // This is an estimated guess,\n  // using the height parms used by ABLA, PIEN, PSME, and TSHE\n  // and the duration parms used by PICO, PIEN, and PIPO\n  THPL: {\n    scientific: 'Thuja plicata',\n    common: 'western red cedar (guess)',\n    height: [15.7, 0.451],\n    duration: [12.6, -0.256]\n  }\n}\n/**\n * Adjusts down-wind canopy height based upon down-wind canopy cover\n * Added in BP6 by Issue #028FAH - Downwind Canopy Open/Closed\n *\n * @param {real} downWindCoverHt (ft+1)\n * @param {real} downWindCanopyIsOpen TRUE if down-wind canopy is open\n */\n\nfunction appliedDownWindCoverHeight (downWindCoverHt, downWindCanopyIsOpen) {\n  return downWindCanopyIsOpen ? 0.5 * downWindCoverHt : downWindCoverHt\n}\n/**\n * \\brief Calculates maximum firebrand height (ft+1)\n * from a burning pile\n *\n * \\param flameHt Flame height (ft+1) from the burning pile\n * \\return Maximum firebrand height (ft+1) from a burning pile\n */\n\nfunction burningPileFirebrandHeight (flameHt) {\n  return Math.max(0.0, 12.2 * flameHt)\n}\n/**\n * \\brief Calculates minimum value of cover height\n * used in calculation of flat terrain spotting distance\n * using logarithmic variation with height.\n *\n * Used for burning pile and surface fire spotting distances.\n *\n * \\param firebrandHt Maximum firebrand height (ft+1)\n * \\param appliedDownWindCoverHeight Adjusted down-wind canopy height\n *   based upon down-wind canopy cover (ft+1)\n * \\return Minimum value of cover ht (ft+1) used in calculation\n * of flat terrain spotting distance.\n */\n\nfunction criticalCoverHeight (firebrandHt, appliedDownWindCoverHeight) {\n  const criticalHt = firebrandHt > 0 ? 2.2 * Math.pow(firebrandHt, 0.337) - 4 : 0\n  return Math.max(appliedDownWindCoverHeight, criticalHt)\n}\n/**\n * \\brief Calculates maximum spotting distance over flat terrain\n * for burning piles, torching trees, and surface fires.\n *\n * \\param firebrandHt Maximum firebrand height (ft+1)\n * \\param criticalCoverHeight Downwind tree/vegetation cover height (ft)\n * \\param u20 Wind speed at 20 ft (ft+1 min-1)\n *\n * \\return Maximum spotting distance (ft+1) over flat terrain\n */\n\nfunction distanceFlatTerrain (firebrandHt, criticalCoverHeight, u20) {\n  // Wind speed must be converted to mi/h\n  return criticalCoverHeight <= 0 || firebrandHt <= 0 ? 0 : 5280 * 0.000718 * (u20 / 88) * Math.sqrt(criticalCoverHeight) * (0.362 + Math.sqrt(firebrandHt / criticalCoverHeight) / 2 * Math.log(firebrandHt / criticalCoverHeight))\n}\nfunction distanceFlatTerrainWithDrift (flatDistance, drift) {\n  return flatDistance + drift\n}\n/*\n * \\brief Calculates maximum spotting distance adjusted for mountain terrain.\n *\n * \\param flatDistFt Maximum spotting distance over flat terrain (ft+1).\n * \\param locationKey location property name\n *  ('midslopeWindward', 'valleyBottom', 'midslopeLeeward', 'ridgetop').\n * \\param rvDist Horizontal distance from ridge top to valley bottom (ft+1).\n * \\param rvElev Vertical distance from ridge top to valley bottom (ft+1).\n *\n * \\return Maximum spotting distance (ft+1) over mountainous terrain\n */\n\nfunction distanceMountainTerrain (flatDistFt, locationKey, rvDistFt, rvElev) {\n  const flatDist = flatDistFt / 5280\n  const rvDist = rvDistFt / 5280\n  let mtnDist = flatDist\n\n  if (rvElev > 0 && rvDist > 0) {\n    const a1 = flatDist / rvDist\n    const b1 = rvElev / (10 * Math.PI) / 1000\n    const factor = Location[locationKey].factor\n    let x = a1\n\n    for (let i = 0; i < 6; i++) {\n      x = a1 - b1 * (Math.cos(Math.PI * x - factor * Math.PI / 2) - Math.cos(factor * Math.PI / 2))\n    }\n\n    mtnDist = x * rvDist\n  }\n\n  return mtnDist * 5280\n}\n/**\n * Calculates surface fire firebrand down-wind drift distance (ft+1).\n * @param {real} firebrandHt  Firebrand loft hight (ft+1)\n * @param {real} u20 Wind speed at 20-ft (ft+1 min-1).\n */\n\nfunction surfaceFireFirebrandDrift (firebrandHt, u20) {\n  return firebrandHt <= 0 ? 0 : 5280 * 0.000278 * (u20 / 88) * Math.pow(firebrandHt, 0.643)\n}\n/**\n * \\brief Calculates maximum firebrand height (ft+1) from a surface fire\n *\n * \\param firelineIntensity Surface fireline intensity (btu+1 ft-1 s-1)\n * \\param u20 Wind speed at 20-ft (ft+1 min-1)\n *\n * \\return Maximum firebrand height (ft+1)\n */\n\nfunction surfaceFireFirebrandHeight (firelineIntensity, u20) {\n  if (u20 > 0 && firelineIntensity > 0) {\n    // f is a function relating thermal energy to windspeed.\n    const f = 322 * Math.pow(0.474 * (u20 / 88), -1.01) // Initial firebrand height (ft).\n\n    return 1.055 * Math.sqrt(f * firelineIntensity)\n  }\n\n  return 0\n}\n/**\n * Torching trees firebrand ht (ft+1)\n *\n * \\param treeHt Tree height (ft+1) of the torching trees\n * \\param flameHt Steady flame height (ft+1) of the toching trees\n *  as calculated by torchingTreesSteadyFlameHeight()\n * \\param flameDur Steady flame duration (min+1) of the toching trees\n *  as calculated by torchingTreesSteadyFlameDuration()\n *\n * \\return Maximum firebrand height (ft+1)\n */\n\nfunction torchingTreesFirebrandHeight (treeHt, flameHt, flameDur) {\n  const parms = [{\n    a: 4.24,\n    b: 0.332\n  }, {\n    a: 3.64,\n    b: 0.391\n  }, {\n    a: 2.78,\n    b: 0.418\n  }, {\n    a: 4.7,\n    b: 0.0\n  }]\n  const ratio = flameHt <= 0 ? 0 : treeHt / flameHt\n  let idx = 3\n\n  if (ratio >= 1) {\n    idx = 0\n  } else if (ratio >= 0.5) {\n    idx = 1\n  } else if (flameDur < 3.5) {\n    idx = 2\n  }\n\n  return parms[idx].a * Math.pow(flameDur, parms[idx].b) * flameHt + 0.5 * treeHt\n}\n/**\n * \\brief Calculates steady state flame duration (min+1) of the toching trees\n *\n * \\param species Species label of the torching trees\n * \\param dbh Dbh of the torching trees (in+1)\n * \\param trees Number of torching trees\n *\n * \\return Flame duration (min+1) of torching trees\n */\n\nfunction torchingTreesSteadyFlameDuration (species, dbh, trees) {\n  return TorchingSteadyFlame[species].duration[0] * Math.pow(dbh, TorchingSteadyFlame[species].duration[1]) * Math.pow(trees, -0.2)\n}\n/**\n * \\brief Calculates steady state flame height (ft+1) of the torching trees\n *\n * \\param species Species label of the torching trees\n * \\param dbh Dbh (in+1) of the torching trees\n * \\param trees Number of torching trees\n * \\return Steady state flame height (ft+1) of the torching trees\n */\n\nfunction torchingTreesSteadyFlameHeight (species, dbh, trees) {\n  return TorchingSteadyFlame[species].height[0] * Math.pow(dbh, TorchingSteadyFlame[species].height[1]) * Math.pow(trees, 0.4)\n}\n\n/**\n * @file Class of export function surface fire methods per Rothermel 1972.\n *\n * Library of algorithms implementing the Rothermel (1972) mathematical model\n * of surface fire spread rate and direction of maximum spread from upslope.\n *\n * It also includes a few of the fundamental Byram and Thomas equations for\n * fireline intensity, flame length, and scorch height.  All equations\n * relating to fire elliptical growth are in BpxLibFireEllipse.\n *\n * All algorithms in this class are implemented as pure export function methods,\n * returning a single property.\n *\n * @author Collin D. Bevins <cbevins@montana.com>\n * @copyright 2019 Systems for Environmental Management\n * @license MIT\n **/\nfunction arithmeticMeanSpreadRate (cover1, ros1, ros2) {\n  return cover1 * ros1 + (1 - cover1) * ros2\n}\n/**\n * Calculate the `effective wind speed` of a combined slope-plus-wind spread rate coefficient.\n *\n * The `effective` wind speed is the theoretical wind speed that yields the same\n * spread rate coefficient as the combined slope-plus-wind spread rate coefficient.\n *\n * @param phiew The sum of the slope and wind coefficients.\n * @param windB Fuel bed wind factor B.\n * @param windI Fuel bed wind factor I.\n * @return The effective wind speed for the slope-plus-wind coefficient (ft+1 min-1).\n */\n\nfunction effectiveWindSpeed (phiew, windB, windI) {\n  let ews = 0\n\n  if (phiew > 0 && windB > 0 && windI > 0) {\n    const a = phiew * windI\n    const b = 1.0 / windB\n    ews = Math.pow(a, b)\n  }\n\n  return ews\n}\n/**\n * Calculate the effective wind speed (ft+1 min-1) from the length-to-width ratio.\n *\n * This uses Anderson's (1983) equation.\n *\n * @param lwr The fire ellipse length-to-width ratio (ratio).\n * @return The effective wind speed (ft+1 min-1).\n */\n\nfunction effectiveWindSpeedFromLwr (lwr) {\n  return 88 * (4 * (lwr - 1))\n}\n/**\n * Calculate the maximum effective wind speed limit\n * as per Rothermel (1972) equation 86 on page 33.\n *\n * @param rxi Fire reaction intensity (btu+1 ft-2 min-1).\n * @return The maximum effective wind speed limit (ft+1 min-1).\n */\n\nfunction effectiveWindSpeedLimit (rxi) {\n  return 0.9 * rxi\n}\nfunction expectedValueSpreadRateMOCK (cover1, ros1, ros2) {\n  return 0.5 * (arithmeticMeanSpreadRate(cover1, ros1, ros2) + harmonicMeanSpreadRate(cover1, ros1, ros2))\n}\n/**\n * Calculate the fire heading direction (degrees clockwise from north).\n *\n * @param upslopeFromNorth Upslope direction (degrees clockwise from north).\n * @param headingFromUpslope Fire heading direction (degrees clockwise from the upslope direction).\n * @return The fire heading direction (degrees clockwise from north).\n */\n// export function headingFromNorth(upslopeFromNorth, headingFromUpslope) {\n//   return compass.constrain(upslopeFromNorth + headingFromUpslope)\n// }\n\n/**\n * Calculate the fireline intensity (btu+1 ft-1 s-1) from spread rate,\n * reaction intensity, and residence time.\n *\n * @param ros The fire spread rate (ft+1 min-1).\n * @param rxi The reaction intensity (btu+1 ft-2 min-1).\n * @param taur The flame residence time (min+1)\n * @return The fireline intensity (btu+1 ft-1 s-1).\n */\n\nfunction firelineIntensity (ros, rxi, taur) {\n  return ros * rxi * taur / 60\n}\n/**\n * Calculate the fireline intensity (btu+1 ft-1 s-1) from flame length.\n *\n * @param flame The flame length (ft+1).\n * @return The fireline intensity (btu+1 ft-1 s-1).\n */\n\nfunction firelineIntensityFromFlameLength (flame) {\n  return flame <= 0 ? 0 : Math.pow(flame / 0.45, 1 / 0.46)\n}\n/**\n * Calculate Byram's (1959) flame length (ft+1) given a fireline intensity.\n *\n * @param fli Fireline intensity (btu+1 ft-1 s-1).\n * @return Byram's (1959) flame length (ft+1).\n */\n\nfunction flameLength (fli) {\n  return fli <= 0 ? 0 : 0.45 * Math.pow(fli, 0.46)\n}\nfunction harmonicMeanSpreadRate (cover1, ros1, ros2) {\n  if (cover1 === 0 || ros1 === 0) {\n    return ros2\n  } else if (ros2 === 0) {\n    return ros1\n  }\n\n  return 1 / (cover1 / ros1 + (1 - cover1) / ros2)\n}\n/**\n * Calculate the fire ellipse length-to-width ratio from the\n * effective wind speed (ft+1 min-1).\n *\n * This uses Anderson's (1983) equation.\n *\n * @param effectiveWindSpeed The effective wind speed (ft+1 min-1).\n * @return The fire ellipse length-to-width ratio (ratio).\n */\n\nfunction lengthToWidthRatio$1 (effectiveWindSpeed) {\n  // Wind speed MUST be in miles per hour\n  return 1 + 0.25 * (effectiveWindSpeed / 88)\n}\n/**\n * Calculate the maximum fire spread rate under slope & wind conditions.\n *\n * @param ros0 No-wind, no-slope spread rate (ft+1 min-1).\n * @param phiEw Rothermel's (1972) `phiEw` wind-slope coefficient (ratio).\n * @return The maximum fire spread rate (ft+1 min-1).\n */\n\nfunction maximumSpreadRate (ros0, phiEw) {\n  return ros0 * (1 + phiEw)\n}\n/**\n * Calculate the wind-slope coefficient (phiEw = phiW + phiS)\n * from the individual slope (phiS) and wind (phiW) coefficients.\n *\n * @param phiW Rothermel (1972) wind coefficient `phiW` (ratio)\n * @param phiS Rothermel (1972) slope coefficient `phiS` (ratio)\n * @return Rothermel's (1972) wind-slope coefficient `phiEw` (ratio).\n */\n\nfunction phiEffectiveWind (phiW, phiS) {\n  return phiW + phiS\n}\n/**\n * Calculate the wind-slope coefficient (phiEw = phiW + phiS)\n * from the no-wind, no-slope spread rate and an actual spread rate.\n *\n * There are 3 ways to calculate the wind-slope coefficient `phiEw`:\n * - from `phiS` and `phiW`: see phiEw(phiS,phiW)\n * - from `ros0` and `rosHead`: see phiEwInferred(ros0,rosHead)\n * - from `ews`, `windB`, and `windK`: see phiEwFromEws(ews, windB, windK)\n *\n * @param ros0 No-wind, no-slope spread rate (ft+1 min-1).\n * @param rosHead The actual spread rate (ft+1 min-1) at the fire head\n *    (possibly under cross-slope wind conditions).\n * @return Rothermel's (1972) wind-slope coefficient `phiEw` (ratio).\n */\n\nfunction phiEffectiveWindInferred (ros0, rosHead) {\n  return ros0 <= 0 ? 0 : rosHead / ros0 - 1\n}\n/**\n * Calculate the wind-slope coefficient (phiEw = phiW + phiS)\n * from the effective wind speed.\n *\n * There are 3 ways to calculate the wind-slope coefficient `phiEw`:\n * - from `phiS` and `phiW`: see phiEw(phiS,phiW)\n * - from `ros0` and `rosHead`: see phiEwInferred(ros0,rosHead)\n * - from `ews`, `windB`, and `windK`: see phiEwFromEws(ews, windB, windK)\n *\n * @param ews The theoretical wind speed that produces\n *  the same spread rate coefficient as the current slope-wind combination.\n * @param windB\n * @param windK\n * @return Rothermel's (1972) wind-slope coefficient `phiEw` (ratio).\n */\n\nfunction phiEwFromEws (ews, windB, windK) {\n  return ews <= 0 ? 0 : windK * Math.pow(ews, windB)\n}\n/** Calculate the fire spread rate slope coefficient (ratio).\n *\n * This returns Rothermel's (1972) `phiS' as per equation 51 (p 24, 26).\n *\n * @param slopeRatio Slope steepness ratio (vertical rise / horizontal reach).\n * @param slopeK Fuel Bed slope factor.\n * @return The fire spread rate slope coefficient (ratio).\n */\n\nfunction phiSlope (slopeRatio, slopeK) {\n  return slopeK * slopeRatio * slopeRatio\n}\n/** Calculate the fire spread rate wind coefficient (ratio).\n *\n * This returns Rothermel's (1972) `phiW' as per equation 47 (p 23, 26).\n *\n * @param midflameWind Wind speed at midflame height (ft+1 min-1).\n * @param windB Fuel Bed wind factor `B`.\n * @param windK Fuel Bed wind factor `K`.\n * @return The fire spread rate wind coefficient (ratio).\n */\n\nfunction phiWind (midflameWind, windB, windK) {\n  return midflameWind <= 0 ? 0 : windK * Math.pow(midflameWind, windB)\n}\n/**\n * Calculate the maximum fire spread rate under cross-slope wind conditions.\n *\n * If the wind is blowing up-slope (or, if there is no slope, or if there is no wind),\n * then spreadRateMaximumUpSlopeWind() == spreadRateMaximumCrossSlopeWind().\n *\n * @param ros0 No-wind, no-slope spread rate (ft+1 min-1).\n * @param spreadDirVectorRate Additional spread reate (ft+1 min-1)\n *    along the cross-slope vector of maximum spread.\n * @return The maximum fire spread rate (ft+1 min-1).\n */\n\nfunction spreadRateWithCrossSlopeWind (ros0, spreadDirVectorRate) {\n  return ros0 + spreadDirVectorRate\n}\n/**\n * Calculate the maximum spread rate after applying the effective wind speed limit.\n *\n * If the effective wind speed does not exceed the limit,\n * then spreadRateMaximumCrossSlopeWind() == spreadRateMaximumEffectiveWindSpeedLimitApplied().\n *\n * @param ros0 The no-wind, no-slope spread rate (ft+1 min-1).\n * @param phiEwLimited Rothermel's (1972) `phiEw` wind-slope coefficient (ratio)\n * AFTER applying the effective wind speed limit.\n */\n// export function rosMaxEwslApplied(ros0, phiEwLimited) {\n//   return ros0 * (1 + phiEwLimited)\n// }\n\n/**\n * Calculate the maximum spread rate after applying the effective wind speed upper limit.\n *\n * If the spread rate exceeds the effective wind speed\n * AND the effective wind speed exceeds 1 mph, then the\n * spread rate is reduced back to the effective wind speed.\n *\n * @param rosMax The fire maximum spread rate (ft+1 min-1)\n * @param ews The effective wind speed (ft+1 min-1).\n * @return The maximum spread rate (ft+1 min-1) after applying any effective wind speed limit.\n */\n\nfunction spreadRateWithRosLimitApplied (rosMax, ews) {\n  return rosMax > ews && ews > 88 ? ews : rosMax\n}\n/**\n * Calculate the scorch height (ft+1) estimated from Byram's fireline\n * intensity, wind speed, and air temperature.\n *\n * @param fli Byram's fireline intensity (btu+1 ft-1 s-1).\n * @param windSpeed Wind speed (ft+1 min-1).\n * @param airTemp (oF).\n * @return The scorch height (ft+1).\n */\n\nfunction scorchHeight (fli, windSpeed, airTemp) {\n  const mph = windSpeed / 88\n  return fli <= 0 ? 0 : 63 / (140 - airTemp) * Math.pow(fli, 1.166667) / Math.sqrt(fli + mph * mph * mph)\n}\n/**\n * Calculate the direction of maximum spread as degrees clockwise from up-slope.\n *\n * @param xComp Vector x-component returned by spreadDirectionXComponent()\n * @param yComp Vector y-component as returned by spreadDirectionYComponent().\n * @param rosv Spread rate in the vector of maximum spread (ft+1 min-1).\n * @return The direction of maximum fire spread (degrees from upslope)\n */\n\nfunction spreadDirectionFromUpslope (xComp, yComp, rosv) {\n  const pi = Math.PI\n  const al = rosv <= 0 ? 0 : Math.asin(Math.abs(yComp) / rosv)\n  const radians = xComp >= 0 ? yComp >= 0 ? al : pi + pi - al : yComp >= 0 ? pi - al : pi + al\n  const degrees = radians * 180 / pi\n  return degrees\n}\n/**\n * Calculate the slope contribution to the spread rate.\n *\n * @param ros0 No-wind, no-wlope fire spread rate (ft+1 min-1)\n * @param phiS Slope coefficient (factor)\n * @return The slope contribution to the fire spread rate (ft+1 min-1)\n */\n\nfunction maximumDirectionSlopeSpreadRate (ros0, phiS) {\n  return ros0 * phiS\n}\n/**\n * Calculate the wind contribution to the spread rate.\n *\n * @param ros0 No-wind, no-wlope fire spread rate (ft+1 min-1)\n * @param phiW Wind coefficient (factor)\n * @return The wind contribution to the fire spread rate (ft+1 min-1)\n */\n\nfunction maximumDirectionWindSpreadRate (ros0, phiW) {\n  return ros0 * phiW\n}\n/**\n * Calculate the additional spread rate (ft+1 min-1) in the direction of maximum\n * spread under cross-slope wind condtions.\n *\n * @param xComp Vector x-component returned by spreadDirXComp()\n * @param yComp Vector y-component as returned by spreadDirYComp().\n * @return Cross wind - cross slope spread rate (ft+1 min-1)\n */\n\nfunction maximumDirectionSpreadRate (xComp, yComp) {\n  return Math.sqrt(xComp * xComp + yComp * yComp)\n}\n/**\n * Calculate the x-component of the spread rate vector under cross-slope wind conditions.\n *\n * @param windRate\n * @param slopeRate\n * @param windHdgAzUp Wind heading in degrees clockwise from the up-slope direction.\n */\n\nfunction maximumDirectionXComponent (windRate, slopeRate, windHdgAzUp) {\n  const radians = windHdgAzUp * Math.PI / 180\n  return slopeRate + windRate * Math.cos(radians)\n}\n/**\n * Calculate the y-component of the spread rate vector under cross-slope wind conditions.\n *\n * @param windRate\n * @param windHdgAzUp Wind heading in degrees clockwise from the up-slope direction.\n */\n\nfunction maximumDirectionYComponent (windRate, windHdgAzUp) {\n  const radians = windHdgAzUp * Math.PI / 180\n  return windRate * Math.sin(radians)\n}\n/**\n * Calculates the midflame wind speed required to attain a target fire spread rate.\n *\n * @param rosTarget Target fire spread rate (ft+1 min-1)\n * @param ros0 The fuel bed no-wind, no-slope fire spread rate (ft+1 min-1)\n * @param windB The fuel bed wind factor B\n * @param windK The fuel bed wind factor K\n * @param phiS The fuel bed slope coefficient (phi slope)\n * @return The midflame wind speed (ft+1 min-1) required to attain the target fire spread rate.\n */\n// export function windSpeedAtRosTarget(rosTarget, ros0, windB, windK, phiS) {\n//   if (ros0 <= 0 || windK <= 0) {\n//     return 0\n//   }\n//   const numerator = (rosTarget / ros0) - 1 - phiS\n//   const term = numerator / windK\n//   return Math.pow(term, (1/windB))\n// }\n\n/**\n * Calculates the midflame wind speed required to attain a target fire spread rate.\n *\n * @param rosTarget Target fire spread rate (ft+1 min-1)\n * @param ros0 The fuel bed no-wind, no-slope fire spread rate (ft+1 min-1)\n * @param beta The fuel bed packing ratio\n * @param bedSavr The fuel bed characteristic surface area-to-volume ratio (ft-1)\n * @param slopeRatio The fuel bed slope (ratio)\n * @return The midflame wind speed (ft+1 min-1) required to attain the target fire spread rate.\n */\n// export function windSpeedAtRosTarget2(rosTarget, ros0, beta, bedSavr, slopeRatio) {\n//   const windB = BpxLibFuelBed.windB(bedSavr)\n//   const windC = BpxLibFuelBed.windC(bedSavr)\n//   const windE = BpxLibFuelBed.windE(bedSavr)\n//   const betaOpt = BpxLibFuelBed.beto(bedSavr)\n//   const betaRatio = beta / betaOpt\n//   const windK = BpxLibFuelBed.windK(betaRatio, windE, windC)\n//   const slopeK = BpxLibFuelBed.slopeK(beta)\n//   const phiS = BpxLibSurfaceFire.phiS(slopeRatio, slopeK)\n//   return BpxLibSurfaceFire.windSpeedAtRosTarget(rosTarget, ros0, windB, windK, phiS)\n// }\n\n/**\n * @file Exported WFSP tree mortality data as implemented by BehavePlus V6 and FOFEM v6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\n// ------------------------------------------------------------------------------\n//  FOFEM tree species and equations\n//  These are used in the bark thickness and tree mortality functions.\n//\n//  NOTE: FOFEM v6 introduced new species codes for all species, and also\n// introduced 13 new species and dropped 2 other species.\n//\n// The FOFEM 6 genus-species abbreviations are the object key.\n//  The species object properties are:\n//  - 'fofem5' FOFEM 5 genus-species codes (deprecated),\n//  - 'mortEq' Index to mortality equation (base 1): 1, 3, and 10-20\n//      - Through BP5, there were only mortality equations 1 and 3.\n//      - BP6 introduces mortality equations 10 through 20.\n//  - 'barkEq' Index to single bark thickness equation (base 1)\n//  - 'regions' Region list (any combination of 1, 2, 3, and/or 4, where\n//      - 1 = Interior West,\n//      - 2 = Pacific West,\n//      - 3 = NorthEast,\n//      - 4 = SouthEast).\n//  - 'scientific' Scientific name\n//  - 'common' Common name\n// ------------------------------------------------------------------------------\n// Fofem factors for determining Single Bark Thickness.\n// Each FOFEM species has a SBT equation index \"barkEq\" [1-39] into this array.\nconst fofemSingleBarkThicknessFactor = [\n/* 00 */\n  0.0, // Not used\n\n  /* 01 */\n  0.019, // Not used\n\n  /* 02 */\n  0.022,\n  /* 03 */\n  0.024,\n  /* 04 */\n  0.025,\n  /* 05 */\n  0.026,\n  /* 06 */\n  0.027,\n  /* 07 */\n  0.028,\n  /* 08 */\n  0.029,\n  /* 09 */\n  0.03,\n  /* 10 */\n  0.031,\n  /* 11 */\n  0.032,\n  /* 12 */\n  0.033,\n  /* 13 */\n  0.034,\n  /* 14 */\n  0.035,\n  /* 15 */\n  0.036,\n  /* 16 */\n  0.037,\n  /* 17 */\n  0.038,\n  /* 18 */\n  0.039,\n  /* 19 */\n  0.04,\n  /* 20 */\n  0.041,\n  /* 21 */\n  0.042,\n  /* 22 */\n  0.043,\n  /* 23 */\n  0.044,\n  /* 24 */\n  0.045,\n  /* 25 */\n  0.046,\n  /* 26 */\n  0.047,\n  /* 27 */\n  0.048,\n  /* 28 */\n  0.049,\n  /* 29 */\n  0.05,\n  /* 30 */\n  0.052,\n  /* 31 */\n  0.055,\n  /* 32 */\n  0.057, // Not used\n\n  /* 33 */\n  0.059,\n  /* 34 */\n  0.06,\n  /* 35 */\n  0.062,\n  /* 36 */\n  0.063, // Changed from 0.065 to 0.063 in Build 606\n\n  /* 37 */\n  0.068,\n  /* 38 */\n  0.072,\n  /* 39 */\n  0.081,\n  /* 40 */\n  0.0 // Reserved for Pinus palustrus (longleaf pine)\n]\nconst data = {\n  ABAM: {\n    fofem5: 'ABIAMA',\n    mortEq: 1,\n    barkEq: 26,\n    regions: 2,\n    scientific: 'Abies amabilis',\n    common: 'Pacific silver fir'\n  },\n  ABBA: {\n    fofem5: 'ABIBAL',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 134,\n    scientific: 'Abies balsamea',\n    common: 'Balsam fir'\n  },\n  ABCO: {\n    fofem5: 'ABICON',\n    mortEq: 10,\n    barkEq: 27,\n    regions: 12,\n    scientific: 'Abies concolor',\n    common: 'White fir'\n  },\n  ABGR: {\n    fofem5: 'ABIGRA',\n    mortEq: 11,\n    barkEq: 25,\n    regions: 12,\n    scientific: 'Abies grandis',\n    common: 'Grand fir'\n  },\n  ABLA: {\n    fofem5: 'ABILAS',\n    mortEq: 11,\n    barkEq: 20,\n    regions: 12,\n    scientific: 'Abies lasiocarpa',\n    common: 'Subalpine fir'\n  },\n  ABMA: {\n    fofem5: 'ABIMAG',\n    mortEq: 16,\n    barkEq: 18,\n    regions: 12,\n    scientific: 'Abies magnifica',\n    common: 'Red fir'\n  },\n  ABPR: {\n    fofem5: 'ABIPRO',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 2,\n    scientific: 'Abies procera',\n    common: 'Noble fir'\n  },\n  ABISPP: {\n    fofem5: 'ABISPP',\n    mortEq: 1,\n    barkEq: 30,\n    regions: 34,\n    scientific: 'Abies species',\n    common: 'Firs'\n  },\n  ACBA3: {\n    fofem5: 'ACEBAR',\n    mortEq: 1,\n    barkEq: 8,\n    regions: 4,\n    scientific: 'Acer barbatum',\n    common: 'Southern sugar maple'\n  },\n  ACLE: {\n    fofem5: 'ACELEU',\n    mortEq: 1,\n    barkEq: 8,\n    regions: 4,\n    scientific: 'Acer leucoderme',\n    common: 'Chalk maple'\n  },\n  ACMA3: {\n    fofem5: 'ACEMAC',\n    mortEq: 1,\n    barkEq: 3,\n    regions: 2,\n    scientific: 'Acer macrophyllum',\n    common: 'Bigleaf maple'\n  },\n  ACNE2: {\n    fofem5: 'ACENEG',\n    mortEq: 1,\n    barkEq: 13,\n    regions: 34,\n    scientific: 'Acer negundo',\n    common: 'Boxelder'\n  },\n  ACNI5: {\n    fofem5: 'ACENIG',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 34,\n    scientific: 'Acer nigrum',\n    common: 'Black maple'\n  },\n  ACPE: {\n    fofem5: 'ACEPEN',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Acer pensylvanicum',\n    common: 'Striped maple'\n  },\n  ACRU: {\n    fofem5: 'ACERUB',\n    mortEq: 1,\n    barkEq: 7,\n    regions: 34,\n    scientific: 'Acer rubrum',\n    common: 'Red maple'\n  },\n  ACSA2: {\n    fofem5: 'ACESACI',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Acer saccharinum',\n    common: 'Silver maple'\n  },\n  ACSA3: {\n    fofem5: 'ACESACU',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Acer saccharum',\n    common: 'Sugar maple'\n  },\n  ACESPP: {\n    fofem5: 'ACESPI',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Acer spicatum',\n    common: 'Mountain maple'\n  },\n  ACSP2: {\n    fofem5: 'ACESPP',\n    mortEq: 1,\n    barkEq: 8,\n    regions: 34,\n    scientific: 'Acer species',\n    common: 'Maples'\n  },\n  AEGL: {\n    fofem5: 'AESGLA',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Aesculus glabra',\n    common: 'Ohio buckeye'\n  },\n  AEOC2: {\n    fofem5: 'AESOCT',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Aesculus octandra',\n    common: 'Yellow buckeye'\n  },\n  AIAL: {\n    fofem5: 'AILALT',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Ailanthus altissima',\n    common: 'Ailanthus'\n  },\n  ALRH2: {\n    fofem5: 'ALNRHO',\n    mortEq: 1,\n    barkEq: 35,\n    regions: 2,\n    scientific: 'Alnus rhombifolia',\n    common: 'White alder'\n  },\n  ALRU2: {\n    fofem5: 'ALNRUB',\n    mortEq: 1,\n    barkEq: 5,\n    regions: 2,\n    scientific: 'Alnus rubra',\n    common: 'Red alder'\n  },\n  AMAR3: {\n    fofem5: 'AMEARB',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Amelanchier arborea',\n    common: 'Common serviceberry'\n  },\n  ARME: {\n    fofem5: 'ARBMEN',\n    mortEq: 1,\n    barkEq: 34,\n    regions: 2,\n    scientific: 'Arbutus menziesii',\n    common: 'Pacific madrone'\n  },\n  BEAL2: {\n    fofem5: 'BETALL',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Betula alleghaniensis',\n    common: 'Yellow birch'\n  },\n  BELE: {\n    fofem5: 'BETLEN',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 4,\n    scientific: 'Betula lenta',\n    common: 'Sweet birch'\n  },\n  BENI: {\n    fofem5: 'BETNIG',\n    mortEq: 1,\n    barkEq: 8,\n    regions: 34,\n    scientific: 'Betula nigra',\n    common: 'River birch'\n  },\n  BEOC2: {\n    fofem5: 'BETOCC',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Betula occidentalis',\n    common: 'Water birch'\n  },\n  BEPA: {\n    fofem5: 'BETPAP',\n    mortEq: 1,\n    barkEq: 6,\n    regions: 234,\n    scientific: 'Betula papyrifera',\n    common: 'Paper birch'\n  },\n  BETSPP: {\n    fofem5: 'BETSPP',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 234,\n    scientific: 'Betula species ',\n    common: 'Birches'\n  },\n  CEOC: {\n    fofem5: 'CELOCC',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 34,\n    scientific: 'Celtis occidentalis',\n    common: 'Common hackberry'\n  },\n  CAAQ2: {\n    fofem5: 'CARAQU',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Carya aquatica',\n    common: 'Water hickory'\n  },\n  CACA18: {\n    fofem5: 'CARCAR',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 34,\n    scientific: 'Carpinus caroliniana',\n    common: 'American hornbeam'\n  },\n  CACOL3: {\n    fofem5: 'CARCOR',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Carya cordiformis',\n    common: 'Bitternut hickory'\n  },\n  CAGL8: {\n    fofem5: 'CARGLA',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Carya glabra',\n    common: 'Pignut hickory'\n  },\n  CAIL2: {\n    fofem5: 'CARILL',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Carya illinoensis',\n    common: 'Pecan'\n  },\n  CALA21: {\n    fofem5: 'CARLAC',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 34,\n    scientific: 'Carya laciniosa',\n    common: 'Shellbark hickory'\n  },\n  CAOV2: {\n    fofem5: 'CAROVA',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Carya ovata',\n    common: 'Shagbark hickory'\n  },\n  CARSPP: {\n    fofem5: 'CARSPP',\n    mortEq: 1,\n    barkEq: 23,\n    regions: 34,\n    scientific: 'Carya species',\n    common: 'Hickories'\n  },\n  CATE9: {\n    fofem5: 'CARTEX',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 4,\n    scientific: 'Carya texana',\n    common: 'Black hickory'\n  },\n  CATO6: {\n    fofem5: 'CARTOM',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 34,\n    scientific: 'Carya tomentosa',\n    common: 'Mockernut hickory'\n  },\n  CACHM: {\n    fofem5: 'CASCHR',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 2,\n    scientific: 'Castanopsis chrysophylla',\n    common: 'Giant chinkapin'\n  },\n  CADE12: {\n    fofem5: 'CASDEN',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Castanea dentata',\n    common: 'American chestnut'\n  },\n  CATSPP: {\n    fofem5: 'CATSPP',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 4,\n    scientific: 'Catalpa species',\n    common: 'Catalpas'\n  },\n  CELA: {\n    fofem5: 'CELLAE',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Celtis laevigata',\n    common: 'Sugarberry'\n  },\n  CECA4: {\n    fofem5: 'CERCAN',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 34,\n    scientific: 'Cercis canadensis',\n    common: 'Eastern redbud'\n  },\n  CHLA: {\n    fofem5: 'CHALAW',\n    mortEq: 1,\n    barkEq: 39,\n    regions: 2,\n    scientific: 'Chamaecyparis lawsoniana',\n    common: 'Port Orford cedar'\n  },\n  CHNO: {\n    fofem5: 'CHANOO',\n    mortEq: 1,\n    barkEq: 2,\n    regions: 2,\n    scientific: 'Chamaecyparis nootkatenis',\n    common: 'Alaska cedar'\n  },\n  CHTH2: {\n    fofem5: 'CHATHY',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 34,\n    scientific: 'Chamaecyparis thyoides',\n    common: 'Atlantic white cedar'\n  },\n  COFL2: {\n    fofem5: 'CORFLO',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Cornus florida',\n    common: 'Flowering dogwood'\n  },\n  CONU4: {\n    fofem5: 'CORNUT',\n    mortEq: 1,\n    barkEq: 35,\n    regions: 2,\n    scientific: 'Cornus nuttallii',\n    common: 'Pacific dogwood'\n  },\n  CORSPP: {\n    fofem5: 'CORSPP',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Cornus species',\n    common: 'Dogwoods'\n  },\n  CRDO2: {\n    fofem5: 'CRADOU',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Crataegus douglasii',\n    common: 'Black hawthorn'\n  },\n  CRASPP: {\n    fofem5: 'CRASPPW',\n    mortEq: 1,\n    barkEq: 35,\n    regions: 2,\n    scientific: 'Crataegus species (western)',\n    common: 'Hawthorns (western)'\n  },\n  DIVI5: {\n    fofem5: 'DIOVIR',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Diospyros virginiana',\n    common: 'Persimmon'\n  },\n  FAGR: {\n    fofem5: 'FAGGRA',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 34,\n    scientific: 'Fagus grandifolia',\n    common: 'American beech'\n  },\n  FRAM2: {\n    fofem5: 'FRAAMA',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 34,\n    scientific: 'Fraxinus americana',\n    common: 'White ash'\n  },\n  FRNI: {\n    fofem5: 'FRANIG',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 34,\n    scientific: 'Fraxinus nigra',\n    common: 'Black ash'\n  },\n  FRPE: {\n    fofem5: 'FRAPEN',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Fraxinus pennsylvanica',\n    common: 'Green ash'\n  },\n  FRPR: {\n    fofem5: 'FRAPRO',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Fraxinus profunda',\n    common: 'Pumpkin ash'\n  },\n  FRQU: {\n    fofem5: 'FRAQUA',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 34,\n    scientific: 'Fraxinus quadrangulata',\n    common: 'Blue ash'\n  },\n  FRASPP: {\n    fofem5: 'FRASPP',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 34,\n    scientific: 'Fraxinus species',\n    common: 'Ashes'\n  },\n  GLTR: {\n    fofem5: 'GLETRI',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 34,\n    scientific: 'Gleditsia triacanthos',\n    common: 'Honeylocust'\n  },\n  GOLA: {\n    fofem5: 'GORLAS',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Gordonia lasianthus',\n    common: 'Loblolly bay'\n  },\n  GYDI: {\n    fofem5: 'GYMDIO',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Gymnocladus dioicus',\n    common: 'Kentucky coffeetree'\n  },\n  HALSPP: {\n    fofem5: 'HALSPP',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Halesia species',\n    common: 'Silverbells'\n  },\n  ILOP: {\n    fofem5: 'ILEOPA',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 34,\n    scientific: 'Ilex opaca',\n    common: 'American holly'\n  },\n  JUCI: {\n    fofem5: 'JUGCIN',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Juglans cinerea',\n    common: 'Butternut'\n  },\n  JUNI: {\n    fofem5: 'JUGNIG',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Juglans nigra',\n    common: 'Black walnut'\n  },\n  JUOC: {\n    fofem5: 'JUNOCC',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 2,\n    scientific: 'Juniperus occidentalis',\n    common: 'Western juniper'\n  },\n  JUNSPP: {\n    fofem5: 'JUNSPP',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Juniperus species',\n    common: 'Junipers/Redcedars'\n  },\n  JUVI: {\n    fofem5: 'JUNVIR',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 34,\n    scientific: 'Juniperus virginiana',\n    common: 'Eastern red cedar'\n  },\n  LALA: {\n    fofem5: 'LARLAR',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Larix laricina',\n    common: 'Tamarack'\n  },\n  LALY: {\n    fofem5: 'LARLYA',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 2,\n    scientific: 'Larix lyallii',\n    common: 'Subalpine larch'\n  },\n  LAOC: {\n    fofem5: 'LAROCC',\n    mortEq: 14,\n    barkEq: 36,\n    regions: 12,\n    scientific: 'Larix occidentalis',\n    common: 'Western larch'\n  },\n  LIDE: {\n    fofem5: 'LIBDEC',\n    mortEq: 12,\n    barkEq: 34,\n    regions: 2,\n    scientific: 'Libocedrus decurrens',\n    common: 'Incense cedar'\n  },\n  LIST2: {\n    fofem5: 'LIQSTY',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Liquidambar styraciflua',\n    common: 'Sweetgum'\n  },\n  LITU: {\n    fofem5: 'LIRTUL',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Liriodendron tulipifera',\n    common: 'Yellow poplar'\n  },\n  LIDE3: {\n    fofem5: 'LITDEN',\n    mortEq: 1,\n    barkEq: 30,\n    regions: 2,\n    scientific: 'Lithocarpus densiflorus',\n    common: 'Tanoak'\n  },\n  MAPO: {\n    fofem5: 'MACPOM',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 4,\n    scientific: 'Maclura pomifera',\n    common: 'Osage orange'\n  },\n  MAAC: {\n    fofem5: 'MAGACU',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Magnolia acuminata',\n    common: 'Cucumber tree'\n  },\n  MAGR4: {\n    fofem5: 'MAGGRA',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 4,\n    scientific: 'Magnolia grandiflora',\n    common: 'Southern magnolia'\n  },\n  MAMA2: {\n    fofem5: 'MAGMAC',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 4,\n    scientific: 'Magnolia macrophylla',\n    common: 'Bigleaf magnolia'\n  },\n  MAGSPP: {\n    fofem5: 'MAGSPP',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Magnolia species',\n    common: 'Magnolias'\n  },\n  MAVI2: {\n    fofem5: 'MAGVIR',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Magnolia virginiana',\n    common: 'Sweetbay'\n  },\n  MALPRU: {\n    fofem5: 'MALPRU',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Prunus species',\n    common: 'Apples/Cherries'\n  },\n  MALSPP: {\n    fofem5: 'MALSPP',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 34,\n    scientific: 'Malus species',\n    common: 'Apples'\n  },\n  MOAL: {\n    fofem5: 'MORALB',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Morus alba',\n    common: 'White mulberry'\n  },\n  MORU2: {\n    fofem5: 'MORRUB',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Morus rubra',\n    common: 'Red mulberry'\n  },\n  MORSPP: {\n    fofem5: 'MORSPP',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Morus species',\n    common: 'Mulberries'\n  },\n  NYAQ2: {\n    fofem5: 'NYSAQU',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 4,\n    scientific: 'Nyssa aquatica',\n    common: 'Water tupelo'\n  },\n  NYOG: {\n    fofem5: 'NYSOGE',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Nyssa ogache',\n    common: 'Ogeechee tupelo'\n  },\n  NYSSPP: {\n    fofem5: 'NYSSPP',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 34,\n    scientific: 'Nyssa species',\n    common: 'Tupelos'\n  },\n  NYSY: {\n    fofem5: 'NYSSYL',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Nyssa sylvatica',\n    common: 'Black gum, Black tupelo'\n  },\n  NYBI: {\n    fofem5: 'NYSSYLB',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 4,\n    scientific: 'Nyssa biflora',\n    common: 'Swamp tupelo'\n  },\n  OSVI: {\n    fofem5: 'OSTVIR',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Ostrya virginiana',\n    common: 'Hophornbeam'\n  },\n  OXAR: {\n    fofem5: 'OXYARB',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Oxydendrum arboreum',\n    common: 'Sourwood'\n  },\n  PATO2: {\n    fofem5: 'PAUTOM',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Paulownia tomentosa',\n    common: 'Princess tree'\n  },\n  PEBO: {\n    fofem5: 'PERBOR',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Persea borbonia',\n    common: 'Redbay'\n  },\n  PIAB: {\n    fofem5: 'PICABI',\n    mortEq: 3,\n    barkEq: 8,\n    regions: 34,\n    scientific: 'Picea abies',\n    common: 'Norway spruce'\n  },\n  PIEN: {\n    fofem5: 'PICENG',\n    mortEq: 15,\n    barkEq: 15,\n    regions: 12,\n    scientific: 'Picea engelmannii',\n    common: 'Engelmann spruce'\n  },\n  PIGL: {\n    fofem5: 'PICGLA',\n    mortEq: 3,\n    barkEq: 4,\n    regions: 123,\n    scientific: 'Picea glauca',\n    common: 'White spruce'\n  },\n  PIMA: {\n    fofem5: 'PICMAR',\n    mortEq: 3,\n    barkEq: 11,\n    regions: 234,\n    scientific: 'Picea mariana',\n    common: 'Black spruce'\n  },\n  PIPU: {\n    fofem5: 'PICPUN',\n    mortEq: 3,\n    barkEq: 10,\n    regions: 1,\n    scientific: 'Picea pungens',\n    common: 'Blue spruce'\n  },\n  PIRU: {\n    fofem5: 'PICRUB',\n    mortEq: 3,\n    barkEq: 13,\n    regions: 34,\n    scientific: 'Picea rubens',\n    common: 'Red spruce'\n  },\n  PISI: {\n    fofem5: 'PICSIT',\n    mortEq: 3,\n    barkEq: 6,\n    regions: 2,\n    scientific: 'Picea sitchensis',\n    common: 'Sitka spruce'\n  },\n  PICSPP: {\n    fofem5: 'PICSPP',\n    mortEq: 3,\n    barkEq: 13,\n    regions: 34,\n    scientific: 'Picea species',\n    common: 'Spruces'\n  },\n  PIAL: {\n    fofem5: 'PINALB',\n    mortEq: 17,\n    barkEq: 9,\n    regions: 12,\n    scientific: 'Pinus albicaulis',\n    common: 'Whitebark pine'\n  },\n  PIAT: {\n    fofem5: 'PINATT',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 2,\n    scientific: 'Pinus attenuata',\n    common: 'Knobcone pine'\n  },\n  PIBA2: {\n    fofem5: 'PINBAN',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Pinus banksiana',\n    common: 'Jack pine'\n  },\n  PICL: {\n    fofem5: 'PINCLA',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 4,\n    scientific: 'Pinus clausa',\n    common: 'Sand pine'\n  },\n  PICO: {\n    fofem5: 'PINCON',\n    mortEq: 17,\n    barkEq: 7,\n    regions: 12,\n    scientific: 'Pinus contorta',\n    common: 'Lodgepole pine'\n  },\n  PIEC2: {\n    fofem5: 'PINECH',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Pinus echinata',\n    common: 'Shortleaf pine'\n  },\n  PIEL: {\n    fofem5: 'PINELL',\n    mortEq: 1,\n    barkEq: 31,\n    regions: 4,\n    scientific: 'Pinus elliottii',\n    common: 'Slash pine'\n  },\n  PIFL2: {\n    fofem5: 'PINFLE',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 1,\n    scientific: 'Pinus flexilis',\n    common: 'Limber pine'\n  },\n  PIGL2: {\n    fofem5: 'PINGLA',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 4,\n    scientific: 'Pinus glabra',\n    common: 'Spruce pine'\n  },\n  PIJE: {\n    fofem5: 'PINJEF',\n    mortEq: 19,\n    barkEq: 37,\n    regions: 12,\n    scientific: 'Pinus jeffreyi',\n    common: 'Jeffrey pine'\n  },\n  PILA: {\n    fofem5: 'PINLAM',\n    mortEq: 18,\n    barkEq: 38,\n    regions: 12,\n    scientific: 'Pinus lambertiana',\n    common: 'Sugar pine'\n  },\n  PIMO3: {\n    fofem5: 'PINMON',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 12,\n    scientific: 'Pinus monticola',\n    common: 'Western white pine'\n  },\n  PIPA2: {\n    fofem5: 'PINPAL',\n    mortEq: 5,\n    barkEq: 40,\n    regions: 4,\n    scientific: 'Pinus palustrus',\n    common: 'Longleaf pine'\n  },\n  PIPO: {\n    fofem5: 'PINPON',\n    mortEq: 19,\n    barkEq: 36,\n    regions: 12,\n    scientific: 'Pinus ponderosa',\n    common: 'Ponderosa pine'\n  },\n  PIPU5: {\n    fofem5: 'PINPUN',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Pinus pungens',\n    common: 'Table mountain pine'\n  },\n  PIRE: {\n    fofem5: 'PINRES',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 34,\n    scientific: 'Pinus resinosa',\n    common: 'Red pine'\n  },\n  PIRI: {\n    fofem5: 'PINRIG',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Pinus rigida',\n    common: 'Pitch pine'\n  },\n  PISA2: {\n    fofem5: 'PINSAB',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 2,\n    scientific: 'Pinus sabiniana',\n    common: 'Gray (Digger) pine'\n  },\n  PISE: {\n    fofem5: 'PINSER',\n    mortEq: 1,\n    barkEq: 35,\n    regions: 34,\n    scientific: 'Pinus serotina',\n    common: 'Pond pine'\n  },\n  PINSPP: {\n    fofem5: 'PINSPP',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 34,\n    scientific: 'Pinus species',\n    common: 'Pines'\n  },\n  PIST: {\n    fofem5: 'PINSTR',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Pinus strobus',\n    common: 'Eastern white pine'\n  },\n  PISY: {\n    fofem5: 'PINSYL',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 34,\n    scientific: 'Pinus sylvestris',\n    common: 'Scots pine'\n  },\n  PITA: {\n    fofem5: 'PINTAE',\n    mortEq: 1,\n    barkEq: 30,\n    regions: 34,\n    scientific: 'Pinus taeda',\n    common: 'Loblolly pine'\n  },\n  PIVI2: {\n    fofem5: 'PINVIR',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Pinus virginiana',\n    common: 'Virginia pine'\n  },\n  PLOC: {\n    fofem5: 'PLAOCC',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Plantus occidentalis',\n    common: 'American sycamore'\n  },\n  POBA2: {\n    fofem5: 'POPBAL',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Populus balsamifera',\n    common: 'Balsam poplar'\n  },\n  PODE3: {\n    fofem5: 'POPDEL',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Populus deltoides',\n    common: 'Eastern cottonwood'\n  },\n  POGR4: {\n    fofem5: 'POPGRA',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Populus grandidentata',\n    common: 'Bigtooth aspen'\n  },\n  POHE4: {\n    fofem5: 'POPHET',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Populus heterophylla',\n    common: 'Swamp cottonwood'\n  },\n  POPSPP: {\n    fofem5: 'POPSPP',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 34,\n    scientific: 'Populus species',\n    common: 'Poplars'\n  },\n  POTR15: {\n    fofem5: 'POPTRI',\n    mortEq: 1,\n    barkEq: 23,\n    regions: 2,\n    scientific: 'Populus trichocarpa',\n    common: 'Black cottonwood'\n  },\n  PRAM: {\n    fofem5: 'PRUAME',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Prunus americana',\n    common: 'American plum'\n  },\n  PREM: {\n    fofem5: 'PRUEMA',\n    mortEq: 1,\n    barkEq: 35,\n    regions: 2,\n    scientific: 'Prunus emarginata',\n    common: 'Bitter cherry'\n  },\n  PRPE2: {\n    fofem5: 'PRUDEN',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Prunus pensylvanica',\n    common: 'Pin cherry'\n  },\n  PRSE2: {\n    fofem5: 'PRUSER',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 34,\n    scientific: 'Prunus serotina',\n    common: 'Black cherry'\n  },\n  PRVI: {\n    fofem5: 'PRUVIR',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Prunus virginiana',\n    common: 'Chokecherry'\n  },\n  PSME: {\n    fofem5: 'PSEMEN',\n    mortEq: 20,\n    barkEq: 36,\n    regions: 12,\n    scientific: 'Pseudotsuga menziesii',\n    common: 'Douglas-fir'\n  },\n  QUAG: {\n    fofem5: 'QUEAGR',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 2,\n    scientific: 'Quercus agrifolia',\n    common: 'California live oak'\n  },\n  QUAL: {\n    fofem5: 'QUEALB',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Quercus alba',\n    common: 'White oak'\n  },\n  QUBI: {\n    fofem5: 'QUEBIC',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Quercus bicolor',\n    common: 'Swamp white oak'\n  },\n  QUCH2: {\n    fofem5: 'QUECHR',\n    mortEq: 1,\n    barkEq: 3,\n    regions: 2,\n    scientific: 'Quercus chrysolepis',\n    common: 'Canyon live oak'\n  },\n  QUOC2: {\n    fofem5: 'QUEOCC',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Quercus coccinea',\n    common: 'Scarlet oak'\n  },\n  QUDU: {\n    fofem5: 'QUEDOU',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 2,\n    scientific: 'Quercus douglasii',\n    common: 'Blue oak'\n  },\n  QUEL: {\n    fofem5: 'QUEELL',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 34,\n    scientific: 'Quercus ellipsoidalis',\n    common: 'Northern pin oak'\n  },\n  QUEN: {\n    fofem5: 'QUEENG',\n    mortEq: 1,\n    barkEq: 33,\n    regions: 2,\n    scientific: 'Quercus engelmannii',\n    common: 'Engelmann oak'\n  },\n  QUFA: {\n    fofem5: 'QUEFAL',\n    mortEq: 1,\n    barkEq: 23,\n    regions: 34,\n    scientific: 'Quercus falcata',\n    common: 'Southern red oak'\n  },\n  QUGA4: {\n    fofem5: 'QUEGAR',\n    mortEq: 1,\n    barkEq: 8,\n    regions: 2,\n    scientific: 'Quercus garryana',\n    common: 'Oregon white oak'\n  },\n  QUIM: {\n    fofem5: 'QUEIMB',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Quercus imbricaria',\n    common: 'Shingle oak'\n  },\n  QUIN: {\n    fofem5: 'QUEINC',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 4,\n    scientific: 'Quercus incana',\n    common: 'Bluejack oak'\n  },\n  QUKE: {\n    fofem5: 'QUEKEL',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 2,\n    scientific: 'Quercus kellogii',\n    common: 'Califonia black oak'\n  },\n  QULA2: {\n    fofem5: 'QUELAE',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 4,\n    scientific: 'Quercus laevis',\n    common: 'Turkey oak'\n  },\n  QULA3: {\n    fofem5: 'QUELAU',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 4,\n    scientific: 'Quercus laurifolia',\n    common: 'Laurel oak'\n  },\n  QULO: {\n    fofem5: 'QUELOB',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 2,\n    scientific: 'Quercus lobata',\n    common: 'Valley oak'\n  },\n  QULY: {\n    fofem5: 'QUELYR',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Quercus lyrata',\n    common: 'Overcup oak'\n  },\n  QUMA2: {\n    fofem5: 'QUEMAC',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 34,\n    scientific: 'Quercus macrocarpa',\n    common: 'Bur oak'\n  },\n  QUMA3: {\n    fofem5: 'QUEMAR',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Quercus marilandica',\n    common: 'Blackjack oak'\n  },\n  QUMI: {\n    fofem5: 'QUEMIC',\n    mortEq: 1,\n    barkEq: 25,\n    regions: 34,\n    scientific: 'Quercus michauxii',\n    common: 'Swamp chestnut oak'\n  },\n  QUMU: {\n    fofem5: 'QUEMUE',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 34,\n    scientific: 'Quercus muehlenbergii',\n    common: 'Chinkapin oak'\n  },\n  QUNI: {\n    fofem5: 'QUENIG',\n    mortEq: 1,\n    barkEq: 15,\n    regions: 34,\n    scientific: 'Quercus nigra',\n    common: 'Water oak'\n  },\n  QUNU: {\n    fofem5: 'QUENUT',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 4,\n    scientific: 'Quercus nuttallii',\n    common: 'Nuttall oak'\n  },\n  QUPA2: {\n    fofem5: 'QUEPAL',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Quercus palustris',\n    common: 'Pin oak'\n  },\n  QUPH: {\n    fofem5: 'QUEPHE',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 34,\n    scientific: 'Quercus phellos',\n    common: 'Willow oak'\n  },\n  QUPR2: {\n    fofem5: 'QUEPRI',\n    mortEq: 1,\n    barkEq: 28,\n    regions: 34,\n    scientific: 'Quercus prinus',\n    common: 'Chestnut oak'\n  },\n  QURU: {\n    fofem5: 'QUERUB',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 34,\n    scientific: 'Quercus rubra',\n    common: 'Northern red oak'\n  },\n  QUSH: {\n    fofem5: 'QUESHU',\n    mortEq: 1,\n    barkEq: 16,\n    regions: 34,\n    scientific: 'Quercus shumardii',\n    common: 'Shumard oak'\n  },\n  QUESPP: {\n    fofem5: 'QUESPP',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Quercus species',\n    common: 'Oaks'\n  },\n  QUST: {\n    fofem5: 'QUESTE',\n    mortEq: 1,\n    barkEq: 23,\n    regions: 34,\n    scientific: 'Quercus stellata',\n    common: 'Post oak'\n  },\n  QUVE: {\n    fofem5: 'QUEVEL',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Quercus velutina',\n    common: 'Black oak'\n  },\n  QUVI: {\n    fofem5: 'QUEVIR',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 4,\n    scientific: 'Quercus virginiana',\n    common: 'Live oak'\n  },\n  QUWI2: {\n    fofem5: 'QUEWIS',\n    mortEq: 1,\n    barkEq: 13,\n    regions: 2,\n    scientific: 'Quercus wislizenii',\n    common: 'Interior live oak'\n  },\n  ROPS: {\n    fofem5: 'ROBPSE',\n    mortEq: 1,\n    barkEq: 28,\n    regions: 34,\n    scientific: 'Robinia pseudoacacia',\n    common: 'Black locust'\n  },\n  SABE2: {\n    fofem5: 'SALDIA',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Salix bebbiana',\n    common: 'Diamond willow'\n  },\n  SANI: {\n    fofem5: 'SALNIG',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Salix nigra',\n    common: 'Black willow'\n  },\n  SALSPP: {\n    fofem5: 'SALSPP',\n    mortEq: 1,\n    barkEq: 20,\n    regions: 234,\n    scientific: 'Salix species',\n    common: 'Willows'\n  },\n  SAAL5: {\n    fofem5: 'SASALB',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 34,\n    scientific: 'Sassafras albidum',\n    common: 'Sassafras'\n  },\n  SEGI2: {\n    fofem5: 'SEQGIG',\n    mortEq: 1,\n    barkEq: 39,\n    regions: 2,\n    scientific: 'Sequoiadendron gigantea',\n    common: 'Giant sequoia'\n  },\n  SESE3: {\n    fofem5: 'SEQSEM',\n    mortEq: 1,\n    barkEq: 39,\n    regions: 2,\n    scientific: 'Sequoia sempervirens',\n    common: 'Redwood'\n  },\n  SOAM3: {\n    fofem5: 'SORAME',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 3,\n    scientific: 'Sorbus americana',\n    common: 'American mountain ash'\n  },\n  TABR2: {\n    fofem5: 'TAXBRE',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 12,\n    scientific: 'Taxus brevifolia',\n    common: 'Pacific yew'\n  },\n  TADI2: {\n    fofem5: 'TAXDIS',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 34,\n    scientific: 'Taxodium distichum',\n    common: 'Bald cypress'\n  },\n  TAAS: {\n    fofem5: 'TAXDISN',\n    mortEq: 1,\n    barkEq: 21,\n    regions: 4,\n    scientific: 'Taxodium distictum var. nutans',\n    common: 'Pond cypress'\n  },\n  THOC2: {\n    fofem5: 'THUOCC',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 34,\n    scientific: 'Thuja occidentalis',\n    common: 'Northern white cedar'\n  },\n  THPL: {\n    fofem5: 'THUPLI',\n    mortEq: 1,\n    barkEq: 14,\n    regions: 12,\n    scientific: 'Thuja plicata',\n    common: 'Western red cedar'\n  },\n  THUSPP: {\n    fofem5: 'THUSPP',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Thuju species',\n    common: 'Arborvitae'\n  },\n  TIAM: {\n    fofem5: 'TILAME',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 34,\n    scientific: 'Tilia americana',\n    common: 'American basswood'\n  },\n  TIHE: {\n    fofem5: 'TILHET',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Tilia heterophylla',\n    common: 'White basswood'\n  },\n  TSCA: {\n    fofem5: 'TSUCAN',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Tsuga canadensis',\n    common: 'Eastern hemlock'\n  },\n  TSHE: {\n    fofem5: 'TSUHET',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 12,\n    scientific: 'Tsuga heterophylla',\n    common: 'Western hemlock'\n  },\n  TSME: {\n    fofem5: 'TSUMER',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 12,\n    scientific: 'Tsuga mertensiana',\n    common: 'Mountain hemlock'\n  },\n  ULAL: {\n    fofem5: 'ULMALA',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Ulmus alata',\n    common: 'Winged elm'\n  },\n  ULAM: {\n    fofem5: 'ULMAME',\n    mortEq: 1,\n    barkEq: 10,\n    regions: 34,\n    scientific: 'Ulmus americana',\n    common: 'American elm'\n  },\n  ULPU: {\n    fofem5: 'ULMPUM',\n    mortEq: 1,\n    barkEq: 17,\n    regions: 34,\n    scientific: 'Ulmus pumila',\n    common: 'Siberian elm'\n  },\n  ULRU: {\n    fofem5: 'ULMRUB',\n    mortEq: 1,\n    barkEq: 11,\n    regions: 34,\n    scientific: 'Ulmus rubra',\n    common: 'Slippery elm'\n  },\n  ULMSPP: {\n    fofem5: 'ULMSPP',\n    mortEq: 1,\n    barkEq: 18,\n    regions: 34,\n    scientific: 'Ulmus species',\n    common: 'Elms'\n  },\n  ULTH: {\n    fofem5: 'ULMTHO',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Ulmus thomasii',\n    common: 'Rock elm'\n  },\n  UMCA: {\n    fofem5: 'UMBCAL',\n    mortEq: 1,\n    barkEq: 5,\n    regions: 2,\n    scientific: 'Umbellularia californica',\n    common: 'California laurel'\n  },\n  ABLO: {\n    fofem5: 'ABLO',\n    mortEq: 10,\n    barkEq: 27,\n    regions: 12,\n    scientific: 'Abies lowiana',\n    common: 'Sierra white fir'\n  },\n  ABNO: {\n    fofem5: 'ABNO',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 12,\n    scientific: 'Abies nobilis',\n    common: 'Noble fir'\n  },\n  AEFL: {\n    fofem5: 'AEFL',\n    mortEq: 1,\n    barkEq: 29,\n    regions: 34,\n    scientific: 'Aesculus flava',\n    common: 'Yellow buckeye'\n  },\n  CANO9: {\n    fofem5: 'CANO9',\n    mortEq: 1,\n    barkEq: 2,\n    regions: 2,\n    scientific: 'Callitropsis nootkatensis',\n    common: 'Alaska cedar'\n  },\n  CADE27: {\n    fofem5: 'CADE27',\n    mortEq: 12,\n    barkEq: 34,\n    regions: 12,\n    scientific: 'Calocedrus decurrens',\n    common: 'Incense cedar'\n  },\n  CAAL27: {\n    fofem5: 'CAAL27',\n    mortEq: 1,\n    barkEq: 22,\n    regions: 34,\n    scientific: 'Carya alba',\n    common: 'Mockernut hickory'\n  },\n  CACA38: {\n    fofem5: 'CACA38',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Carya carolinae septentrionalis',\n    common: 'Shagbark hickory'\n  },\n  CAAM29: {\n    fofem5: 'CAAM29',\n    mortEq: 1,\n    barkEq: 19,\n    regions: 34,\n    scientific: 'Castenea Americana',\n    common: 'American chestnut'\n  },\n  CHCHC4: {\n    fofem5: 'CHCHC4',\n    mortEq: 1,\n    barkEq: 24,\n    regions: 34,\n    scientific: 'Chrysolepis chrysophylla',\n    common: 'Giant chinkapin'\n  },\n  CUNO: {\n    fofem5: 'CUNO',\n    mortEq: 1,\n    barkEq: 2,\n    regions: 2,\n    scientific: 'Cupressus nootkatensis',\n    common: 'Nootka cypress'\n  },\n  CUTH: {\n    fofem5: 'CUTH',\n    mortEq: 1,\n    barkEq: 4,\n    regions: 2,\n    scientific: 'Cupressus thyoides',\n    common: 'Atlantic white cedar'\n  },\n  QUTE: {\n    fofem5: 'QUTE',\n    mortEq: 1,\n    barkEq: 9,\n    regions: 34,\n    scientific: 'Quercus texana',\n    common: 'Texas red oak'\n  },\n  ULRA: {\n    fofem5: 'ULRA',\n    mortEq: 1,\n    barkEq: 12,\n    regions: 34,\n    scientific: 'Ulmus racemosa',\n    common: 'Rock elm'\n  }\n}\n\n/* eslint-disable no-prototype-builtins */\nfunction barkThickness (fofem6Code, dbh) {\n  ensureFofem6Code(fofem6Code)\n  const equationIdx = data[fofem6Code].barkEq\n  ensureEquationIdx(fofem6Code, equationIdx) // In FOFEM 6, longleaf pine has its own bark thickness formula and uses dbh in cm\n\n  if (equationIdx === 40) {\n    const dbhCm = 2.54 * dbh // dbh in cm\n\n    const barkCm = 0.435 + 0.031 * dbhCm // bark thickness in cm\n\n    return barkCm / 2.54 // bark thickness in inches\n  }\n\n  return fofemSingleBarkThicknessFactor[equationIdx] * dbh\n}\n/**\n * Calculates fraction of crown length scorched.\n * @param {real} treeHt Tree height (ft)\n * @param {real} baseHt Tree crown base height (ft)\n * @param {real} scorchHt Scorch height (ft)\n * @return {real} Fraction of crown length that was scorched (ft/ft)\n */\n\nfunction crownLengthScorched (treeHt, baseHt, scorchHt) {\n  // Tree crown length (ft) and base height (ft)\n  const crownLength = treeHt - baseHt // Tree crown length scorched (ft)\n\n  const scorchLength = positive(Math.min(scorchHt, treeHt) - baseHt) // Fraction of the crown length scorched (ft/ft)\n\n  return divide(scorchLength, crownLength)\n}\n/**\n * Calculates fraction of crown volume scorched.\n * @param {real} treeHt Tree height (ft)\n * @param {real} baseHt Tree crown base height (ft)\n * @param {real} scorchHt Scorch height (ft)\n * @return {real} Fraction of crown volume that was scorched (ft3/ft3)\n */\n\nfunction crownVolumeScorched (treeHt, baseHt, scorchHt) {\n  // Tree crown length (ft) and base height (ft)\n  const crownLength = treeHt - baseHt // Tree crown length scorched (ft)\n\n  const scorchLength = positive(Math.min(scorchHt, treeHt) - baseHt) // Fraction of the crown volume scorched (ft3/ft3)\n\n  return divide(scorchLength * (2 * crownLength - scorchLength), crownLength * crownLength)\n}\nfunction ensureEquationIdx (fofem6Code, equationIdx) {\n  if (equationIdx < 0 || equationIdx >= fofemSingleBarkThicknessFactor.length) {\n    throw new Error(\"Tree Mortality Fofem6 species code '\".concat(fofem6Code, \"' bark thickness index '\").concat(equationIdx, \"' is invalid\"))\n  }\n}\nfunction ensureFofem6Code (fofem6Code) {\n  if (!hasFofem6Code(fofem6Code)) {\n    throw new Error(\"Tree Mortality Fofem6 species code '\".concat(fofem6Code, \"' is invalid\"))\n  }\n}\nfunction fofem6Codes () {\n  return Object.keys(data)\n}\nfunction hasFofem6Code (fofem6Code) {\n  return data.hasOwnProperty(fofem6Code)\n}\n/**\n *  Calculates probability of tree mortality using the FOFEM 6.0\n *  equations for trees with dbh >= 1.\n *\n *  This is only a partial implementation of the FOFEM mortality algorithm.\n *  Specifically, it only implements those cases where the tree dbh >= 1\".\n *  It also excludes the FOFEM special case of \\e Populus \\e tremuloides,\n *  which requires additional inputs (namely, flame height and fire severity).\n *\n * @param {string} fofem6Code FOFEM 6 tree species code\n * @param {number} dbh Tree diameter at breast height (in)\n * @param {number} treeHt Tree total height (ft)\n * @param {number} baseHt Tree crown base height (ft)\n * @param {number} scorchHt Scorch height (ft)\n */\n\nfunction mortalityRate (fofem6Code, dbh, treeHt, baseHt, scorchHt) {\n  const clsFraction = crownLengthScorched(treeHt, baseHt, scorchHt)\n  const cvsFraction = crownVolumeScorched(treeHt, baseHt, scorchHt)\n  const clsPercent = 100 * clsFraction\n  const cvsPercent = 100 * cvsFraction\n  const equationId = data[fofem6Code].mortEq\n  let mr = 0 // Pat requested that if scorch ht is zero, then mortality is zero\n\n  if (scorchHt <= 0) {\n    return mr\n  } // Equation 5 is specifically for Pinus palustris (longleaf pine)\n  // Note that bark thickness is in cm\n\n  if (equationId === 5) {\n    // This equation uses crown volume scorched as a scale of 1-10\n    const cvsScale = cvsPercent / 10\n    const barkCm = 2.54 * barkThickness(fofem6Code, dbh)\n    mr = 0.169 + 5.136 * barkCm + 14.492 * barkCm * barkCm - 0.348 * cvsScale * cvsScale\n    mr = 1 / (1 + Math.exp(mr))\n  } // Equation 10 is specifically for Abies concolor (white fir)\n  else if (equationId === 10) {\n    mr = -3.5083 + 0.0956 * clsPercent - 0.00184 * clsPercent * clsPercent + 0.000017 * clsPercent * clsPercent * clsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 11 is specifically for Abies lasiocarpa (subalpine fir)\n  // and Abies grandis (grad fir)\n  else if (equationId === 11) {\n    mr = -1.695 + 0.2071 * cvsPercent - 0.0047 * cvsPercent * cvsPercent + 0.000035 * cvsPercent * cvsPercent * cvsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 12 is specifically for Libocedrus decurrens (incense cedar)\n  else if (equationId === 12) {\n    mr = -4.2466 + 0.000007172 * clsPercent * clsPercent * clsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 14 is specifically for Larix occidentalis (western larch)\n  // Note that this is from Hood, so dbh is in cm\n  else if (equationId === 14) {\n    mr = -1.6594 + 0.0327 * cvsPercent - 0.0489 * (2.54 * dbh)\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 15 is specifically for Picea engelmannii (Englemann spruce)\n  else if (equationId === 15) {\n    mr = 0.0845 + 0.0445 * cvsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 16 is specifically for Abies magnifica (red fir)\n  else if (equationId === 16) {\n    mr = -2.3085 + 0.000004059 * clsPercent * clsPercent * clsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 17 is specifically for Pinus albicaulis (whitebark pine)\n  // and Pinus contorta (lodgepole pine)\n  // Note that this is from Hood, so dbh is in cm\n  else if (equationId === 17) {\n    mr = -0.3268 + 0.1387 * cvsPercent - 0.0033 * cvsPercent * cvsPercent + 0.000025 * cvsPercent * cvsPercent * cvsPercent - 0.0266 * (2.54 * dbh)\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 18 is specifically for Pinus lambertiana (sugar pine)\n  else if (equationId === 18) {\n    mr = -2.0588 + 0.000814 * clsPercent * clsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 19 is specifically for Pinus ponderosa (ponderosa pine)\n  // and Pinus jeffreyi (Jeffry pine)\n  else if (equationId === 19) {\n    mr = -2.7103 + 0.000004093 * cvsPercent * cvsPercent * cvsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 20 is specifically for Pseudotsuga menziesii (Douglas-fir)\n  else if (equationId === 20) {\n    mr = -2.0346 + 0.0906 * cvsPercent - 0.0022 * cvsPercent * cvsPercent + 0.000019 * cvsPercent * cvsPercent * cvsPercent\n    mr = 1 / (1 + Math.exp(-mr))\n  } // Equation 1 is the default mortality equation for all species with dbh > 1\"\n  // Equation 3 is for spruce species\n  // its the same as Equation 1 but with a minimum value of 0.8\n  else {\n    // if (equationId === 1 || equationId === 3) {\n    const bark = barkThickness(fofem6Code, dbh)\n    mr = -1.941 + 6.316 * (1 - Math.exp(-bark)) - 5.35 * cvsFraction * cvsFraction\n    mr = 1 / (1 + Math.exp(mr))\n    mr = equationId === 3 ? Math.max(0.8, mr) : mr\n  }\n\n  return fraction(mr)\n}\n\n/**\n * @file Exported WFSP western aspen dynamic fuel model equations\n * as described by Brown and Simmerman (1986) and implemented by BehavePlus V6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins\n * @license MIT\n */\nconst ppsf = 2000 / 43560 // Array curing levels are [0, 0.3, 0.5, 0.7 0.9, 1]\n\nconst Table = {\n  aspenShrub: {\n    depth: 0.65,\n    dead1Load: [0.8, 0.893, 1.056, 1.218, 1.379, 1.4595],\n    dead1Savr: [1440.0, 1620.0, 1910.0, 2090.0, 2220.0, 2285.0],\n    dead10Load: 0.975,\n    liveHerbLoad: [0.335, 0.234, 0.167, 0.1, 0.033, 0.0],\n    liveStemLoad: [0.403, 0.403, 0.333, 0.283, 0.277, 0.274],\n    liveStemSavr: [2440.0, 2440.0, 2310.0, 2090.0, 1670.0, 1670.0]\n  },\n  aspenTallForb: {\n    depth: 0.3,\n    dead1Load: [0.738, 0.93, 1.056, 1.183, 1.309, 1.372],\n    dead1Savr: [1480.0, 1890.0, 2050.0, 2160.0, 2240.0, 2280.0],\n    dead10Load: 0.475,\n    liveHerbLoad: [0.665, 0.465, 0.332, 0.199, 0.067, 0.0],\n    liveStemLoad: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n    liveStemSavr: [2440.0, 2440.0, 2440.0, 2440.0, 2440.0, 2440.0]\n  },\n  aspenLowForb: {\n    depth: 0.18,\n    dead1Load: [0.601, 0.645, 0.671, 0.699, 0.73, 0.7455],\n    dead1Savr: [1400.0, 1540.0, 1620.0, 1690.0, 1750.0, 1780.0],\n    dead10Load: 1.035,\n    liveHerbLoad: [0.15, 0.105, 0.075, 0.045, 0.015, 0.0],\n    liveStemLoad: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n    liveStemSavr: [2440.0, 2440.0, 2440.0, 2440.0, 2440.0, 2440.0]\n  },\n  mixedShrub: {\n    depth: 0.5,\n    dead1Load: [0.88, 0.906, 1.037, 1.167, 1.3, 1.3665],\n    dead1Savr: [1350.0, 1420.0, 1710.0, 1910.0, 2060.0, 2135.0],\n    dead10Load: 1.34,\n    liveHerbLoad: [0.1, 0.07, 0.05, 0.03, 0.01, 0.0],\n    liveStemLoad: [0.455, 0.455, 0.364, 0.29, 0.261, 0.2465],\n    liveStemSavr: [2530.0, 2530.0, 2410.0, 2210.0, 1800.0, 1800.0]\n  },\n  mixedForb: {\n    depth: 0.18,\n    dead1Load: [0.754, 0.797, 0.825, 0.854, 0.884, 0.899],\n    dead1LoadDEPRECATED: [0.754, 0.797, 0.825, 1.167, 0.884, 0.899],\n    dead1Savr: [1420.0, 1540.0, 1610.0, 1670.0, 1720.0, 1745.0],\n    dead10Load: 1.115,\n    liveHerbLoad: [0.15, 0.105, 0.075, 0.045, 0.015, 0.0],\n    liveStemLoad: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n    liveStemSavr: [2440.0, 2440.0, 2440.0, 2440.0, 2440.0, 2440.0]\n  }\n}\nconst Types$1 = Object.keys(Table)\nfunction interpolate (curingLevel, valueAtLevel) {\n  const Curing = [0.0, 0.3, 0.5, 0.7, 0.9, 1.000000001]\n  const cl = fraction(curingLevel)\n  let fraction$1 = 0\n\n  for (let idx = 1; idx <= 4; idx += 1) {\n    if (cl <= Curing[idx]) {\n      fraction$1 = 1 - (Curing[idx] - cl) / (Curing[idx] - Curing[idx - 1])\n      return valueAtLevel[idx - 1] + fraction$1 * (valueAtLevel[idx] - valueAtLevel[idx - 1])\n    }\n  }\n\n  return valueAtLevel[5]\n}\nfunction has (fuelType) {\n  return Object.keys(Table).includes(fuelType)\n}\nfunction depth (fuelType) {\n  return has(fuelType) ? Table[fuelType].depth : 0.01\n}\nfunction deadFineLoad$1 (fuelType, curingLevel) {\n  return has(fuelType) ? ppsf * interpolate(curingLevel, Table[fuelType].dead1Load) : 0\n}\nfunction deadFineSavr (fuelType, curingLevel) {\n  return has(fuelType) ? interpolate(curingLevel, Table[fuelType].dead1Savr) : 1\n}\nfunction deadSmallLoad$1 (fuelType) {\n  return has(fuelType) ? ppsf * Table[fuelType].dead10Load : 0\n}\n\nfunction liveHerbLoad$1 (fuelType, curingLevel) {\n  return has(fuelType) ? ppsf * interpolate(curingLevel, Table[fuelType].liveHerbLoad) : 0\n} // Live stem\n\nfunction liveStemLoad (fuelType, curingLevel) {\n  return has(fuelType) ? ppsf * interpolate(curingLevel, Table[fuelType].liveStemLoad) : 0\n}\nfunction liveStemSavr (fuelType, curingLevel) {\n  return has(fuelType) ? interpolate(curingLevel, Table[fuelType].liveStemSavr) : 1\n}\n\n/**\n * @file Exported WFSP wind functions as implemented by BehavePlus v6.\n * @version 0.1.0\n * @copyright Systems for Environmental Management 2020\n * @author Collin D. Bevins <cbevins@montana.com>\n * @license MIT\n */\nfunction speedAt10m (ws20ft) {\n  return 1.13 * ws20ft\n}\nfunction speedAt20ft (ws10m) {\n  return ws10m / 1.13\n}\nfunction speedAt20ftFromMidflame (wsmid, mwaf) {\n  return mwaf > 0 ? divide(wsmid, mwaf) : wsmid\n}\nfunction speedAtMidflame (ws20ft, mwaf) {\n  return mwaf * ws20ft\n}\n\n/**\n * Declares the specialized BehavePlus Config Variants.\n *\n * Note that classes derived from Crucible.Variant.Option() and COnfig()\n * require an array of options argument.\n */\n\n/**\n * Config is an Option Variant whose sole purpose is to define\n * Dag configuration options with their own 'node instanceof Config' test\n */\n\nconst Config = /* #__PURE__ */(function (_Option) {\n  _inherits(Config, _Option)\n\n  const _super = _createSuper(Config)\n\n  function Config () {\n    _classCallCheck(this, Config)\n\n    return _super.apply(this, arguments)\n  }\n\n  return Config\n}(Option)) // Configuration options\n\nconst ConfigModuleActive = /* #__PURE__ */(function (_Config) {\n  _inherits(ConfigModuleActive, _Config)\n\n  const _super2 = _createSuper(ConfigModuleActive)\n\n  function ConfigModuleActive () {\n    _classCallCheck(this, ConfigModuleActive)\n\n    return _super2.call(this, ['active', 'inactive'])\n  }\n\n  return ConfigModuleActive\n}(Config))\nconst ConfigLinkCrownFire = /* #__PURE__ */(function (_Config2) {\n  _inherits(ConfigLinkCrownFire, _Config2)\n\n  const _super3 = _createSuper(ConfigLinkCrownFire)\n\n  function ConfigLinkCrownFire () {\n    _classCallCheck(this, ConfigLinkCrownFire)\n\n    return _super3.call(this, ['linkedToCrownFire', 'standAlone'])\n  }\n\n  return ConfigLinkCrownFire\n}(Config))\nconst ConfigLinkFireEllipse = /* #__PURE__ */(function (_Config3) {\n  _inherits(ConfigLinkFireEllipse, _Config3)\n\n  const _super4 = _createSuper(ConfigLinkFireEllipse)\n\n  function ConfigLinkFireEllipse () {\n    _classCallCheck(this, ConfigLinkFireEllipse)\n\n    return _super4.call(this, ['linkedToFireEllipse', 'standAlone'])\n  }\n\n  return ConfigLinkFireEllipse\n}(Config))\nconst ConfigLinkScorchHeight = /* #__PURE__ */(function (_Config4) {\n  _inherits(ConfigLinkScorchHeight, _Config4)\n\n  const _super5 = _createSuper(ConfigLinkScorchHeight)\n\n  function ConfigLinkScorchHeight () {\n    _classCallCheck(this, ConfigLinkScorchHeight)\n\n    return _super5.call(this, ['linkedToScorchHeight', 'standAlone'])\n  }\n\n  return ConfigLinkScorchHeight\n}(Config))\nconst ConfigLinkSurfaceFire = /* #__PURE__ */(function (_Config5) {\n  _inherits(ConfigLinkSurfaceFire, _Config5)\n\n  const _super6 = _createSuper(ConfigLinkSurfaceFire)\n\n  function ConfigLinkSurfaceFire () {\n    _classCallCheck(this, ConfigLinkSurfaceFire)\n\n    return _super6.call(this, ['linkedToSurfaceFire', 'standAlone'])\n  }\n\n  return ConfigLinkSurfaceFire\n}(Config)) // bp6 #11 Surface > Input  > Chaparral > Total load is: [specified, est]\n\nconst ConfigChaparralTotalLoad = /* #__PURE__ */(function (_Config6) {\n  _inherits(ConfigChaparralTotalLoad, _Config6)\n\n  const _super7 = _createSuper(ConfigChaparralTotalLoad)\n\n  function ConfigChaparralTotalLoad () {\n    _classCallCheck(this, ConfigChaparralTotalLoad)\n\n    return _super7.call(this, [// .header('Chaparral total fuel load is')\n      'input', // 'entered as input', true)\n      'estimated']) // 'estimated from Chaparral depth');\n  }\n\n  return ConfigChaparralTotalLoad\n}(Config)) // bp6 #2 - Surface > Input  > Moisture > Herb Curing: [est, inp]\n\nconst ConfigCuredHerbFraction = /* #__PURE__ */(function (_Config7) {\n  _inherits(ConfigCuredHerbFraction, _Config7)\n\n  const _super8 = _createSuper(ConfigCuredHerbFraction)\n\n  function ConfigCuredHerbFraction () {\n    _classCallCheck(this, ConfigCuredHerbFraction)\n\n    return _super8.call(this, [// .header('Behave fuel model cured herb fraction is')\n      'input', // 'entered as input', true)\n      'estimated']) // 'estimated from live fuel moisture');\n  }\n\n  return ConfigCuredHerbFraction\n}(Config)) // bp6 #1 Surface > Input  > Fuel:\n// [key, std, exp, harm, arith, pg, wa, ch]\n// Bpx splits bp6 config #1 into two configs; primary.fuel and secondary.fuel\n\nconst ConfigPrimaryFuels = /* #__PURE__ */(function (_Config8) {\n  _inherits(ConfigPrimaryFuels, _Config8)\n\n  const _super9 = _createSuper(ConfigPrimaryFuels)\n\n  function ConfigPrimaryFuels () {\n    _classCallCheck(this, ConfigPrimaryFuels)\n\n    return _super9.call(this, [// .header('Primary fuels are specified by entering')\n      'catalog', // 'a fuel model catalog key', true)\n      'behave', // 'standard BehavePlus fuel parameters')\n      'chaparral', // 'chaparral dynamic fuel parameters')\n      'palmettoGallberry', // 'palmetto-gallberry dynamic fuel parameters')\n      'westernAspen']) // 'western aspen dynamic fuel models');\n  }\n\n  return ConfigPrimaryFuels\n}(Config)) // bp6 #1 Surface > Input  > Fuel:\n// [key, std, exp, harm, arith, pg, wa, ch]\n// Bpx splits bp6 config #1 into two configs; primary.fuel and secondary.fuel\n\nconst ConfigSecondaryFuels = /* #__PURE__ */(function (_Config9) {\n  _inherits(ConfigSecondaryFuels, _Config9)\n\n  const _super10 = _createSuper(ConfigSecondaryFuels)\n\n  function ConfigSecondaryFuels () {\n    _classCallCheck(this, ConfigSecondaryFuels)\n\n    return _super10.call(this, [// .header('Secondary fuels are specified by entering')\n      'none', // 'there are no secondary fuels', true);\n      'catalog', // 'a fuel model catalog key')\n      'behave', // 'standard BehavePlus fuel parameters')\n      'chaparral', // 'chaparral dynamic fuel parameters')\n      'palmettoGallberry', // 'palmetto-gallberry dynamic fuel parameters')\n      'westernAspen']) // 'western aspen dynamic fuel models')\n  }\n\n  return ConfigSecondaryFuels\n}(Config)) // bp6 #3 - Surface > Input  > Moisture > Fuel Moisture:\n// [ind, cat, mixed, scen]\n\nconst ConfigMoistureContents = /* #__PURE__ */(function (_Config10) {\n  _inherits(ConfigMoistureContents, _Config10)\n\n  const _super11 = _createSuper(ConfigMoistureContents)\n\n  function ConfigMoistureContents () {\n    _classCallCheck(this, ConfigMoistureContents)\n\n    return _super11.call(this, [// .header('Fuel moistures are specified by entering')\n      'individual', // 'the 3 dead and 2 live fuel moistures', true)\n      'liveCategory', // 'the 3 dead moistures and a singe live category moisture')\n      'category']) // 'the dead and live category moistures only')\n    // 'catalog' // 'a fuel moisture catalog key');\n  }\n\n  return ConfigMoistureContents\n}(Config)) // bp6 #4 Surface > Input  > Wind Speed > Entered at:\n// [mid, 20-wafInp, 20-wafEst, 10-wafInp, 10-wafEst]\n// Bpx slipts Bp6 config #4 into 2 configs, fuel.waf and wind.speed\n\nconst ConfigWindSpeedAdjustmentFactor = /* #__PURE__ */(function (_Config11) {\n  _inherits(ConfigWindSpeedAdjustmentFactor, _Config11)\n\n  const _super12 = _createSuper(ConfigWindSpeedAdjustmentFactor)\n\n  function ConfigWindSpeedAdjustmentFactor () {\n    _classCallCheck(this, ConfigWindSpeedAdjustmentFactor)\n\n    return _super12.call(this, [// .header('Midflame wind speed adjustment factor is')\n      'input', // 'entered as input', true)\n      'estimated']) // 'estimated from canopy and fuel parameters');\n  }\n\n  return ConfigWindSpeedAdjustmentFactor\n}(Config)) // bp6 #7 Surface > Input  > Slope > Slope is [percent, degrees]\n// bp6 #8 Surface > Input  > Slope > Slope is [input, map]\n// BPX combined Bp6 configs #7 and #8\n\nconst ConfigSlopeSteepness = /* #__PURE__ */(function (_Config12) {\n  _inherits(ConfigSlopeSteepness, _Config12)\n\n  const _super13 = _createSuper(ConfigSlopeSteepness)\n\n  function ConfigSlopeSteepness () {\n    _classCallCheck(this, ConfigSlopeSteepness)\n\n    return _super13.call(this, [// .header('Slope steepness is')\n      'ratio', // 'entered as ratio of vertical rise to horizontal reach', true)\n      'degrees', // 'entered as degrees of angle above the horizontal plane')\n      'map']) // 'estimated from map measurements');\n  }\n\n  return ConfigSlopeSteepness\n}(Config)) // bp6 #5 Surface > Input  > Wind Speed > Wind is:\n// [always upslope, specified]\n\nconst ConfigWindDirection = /* #__PURE__ */(function (_Config13) {\n  _inherits(ConfigWindDirection, _Config13)\n\n  const _super14 = _createSuper(ConfigWindDirection)\n\n  function ConfigWindDirection () {\n    _classCallCheck(this, ConfigWindDirection)\n\n    return _super14.call(this, [// .header('Wind direction is')\n      'sourceFromNorth', // 'the direction FROM which the wind is blowing (degrees from NORTH)')\n      'headingFromUpslope', // 'the direcion TOWARDS which the wind is blowing (degrees from UPSLOPE)', true)\n      'upslope']) // 'assumed to be blowing upslope');\n  }\n\n  return ConfigWindDirection\n}(Config)) // bp6 #4 Surface > Input  > Wind Speed > Entered at:\n// [mid, 20-wafInp, 20-wafEst, 10-wafInp, 10-wafEst]\n// Bpx slipts Bp6 config #4 into 2 configs, fuel.waf and wind.speed\n\nconst ConfigWindSpeed = /* #__PURE__ */(function (_Config14) {\n  _inherits(ConfigWindSpeed, _Config14)\n\n  const _super15 = _createSuper(ConfigWindSpeed)\n\n  function ConfigWindSpeed () {\n    _classCallCheck(this, ConfigWindSpeed)\n\n    return _super15.call(this, [// .header('Wind speed is entered for')\n      'at10m', // '10-m height')\n      'at20ft', // '20-ft height', true)\n      'atMidflame']) // 'midflame height');\n  }\n\n  return ConfigWindSpeed\n}(Config))\nconst ConfigFirelineIntensity = /* #__PURE__ */(function (_Config15) {\n  _inherits(ConfigFirelineIntensity, _Config15)\n\n  const _super16 = _createSuper(ConfigFirelineIntensity)\n\n  function ConfigFirelineIntensity () {\n    _classCallCheck(this, ConfigFirelineIntensity)\n\n    return _super16.call(this, [// .header('The fireline intensity is')\n      'firelineIntensity', // 'entered as input', true)\n      'flameLength']) // 'estimated from the flame length input');\n  }\n\n  return ConfigFirelineIntensity\n}(Config))\nconst ConfigFireLengthToWidthRatio = /* #__PURE__ */(function (_Config16) {\n  _inherits(ConfigFireLengthToWidthRatio, _Config16)\n\n  const _super17 = _createSuper(ConfigFireLengthToWidthRatio)\n\n  function ConfigFireLengthToWidthRatio () {\n    _classCallCheck(this, ConfigFireLengthToWidthRatio)\n\n    return _super17.call(this, [// .header('The fire ellipse length-to-width ratio is')\n      'lengthToWidthRatio', // 'entered as input', true)\n      'effectiveWindSpeed']) // 'estimated from the effective wind speed input');\n  }\n\n  return ConfigFireLengthToWidthRatio\n}(Config)) // bp6 #6 Surface > Input  > Wind Speed > Impose max wind speed limit?\n\nconst ConfigEffectiveWindSpeedLimit = /* #__PURE__ */(function (_Config17) {\n  _inherits(ConfigEffectiveWindSpeedLimit, _Config17)\n\n  const _super18 = _createSuper(ConfigEffectiveWindSpeedLimit)\n\n  function ConfigEffectiveWindSpeedLimit () {\n    _classCallCheck(this, ConfigEffectiveWindSpeedLimit)\n\n    return _super18.call(this, [// .header('The effective wind speed limit is')\n      'applied', // 'applied', true)\n      'ignored']) // 'ignored');\n  }\n\n  return ConfigEffectiveWindSpeedLimit\n}(Config)) // New to BPX\n\nconst ConfigFireWeightingMethod = /* #__PURE__ */(function (_Config18) {\n  _inherits(ConfigFireWeightingMethod, _Config18)\n\n  const _super19 = _createSuper(ConfigFireWeightingMethod)\n\n  function ConfigFireWeightingMethod () {\n    _classCallCheck(this, ConfigFireWeightingMethod)\n\n    return _super19.call(this, [// .header('Maximum fire spread rate of 2 surface fuel types is based on')\n      'arithmetic', // 'arithmetic mean spread rate')\n      'expected', // 'expected value spread rate')\n      'harmonic']) // 'harmonic mean spread rate', true);\n  }\n\n  return ConfigFireWeightingMethod\n}(Config)) // bp6 #10 Surface > Input  > Directions > Wind & Fire Dir: [wrt upslope, wrt north]\n\nconst ConfigFireVector = /* #__PURE__ */(function (_Config19) {\n  _inherits(ConfigFireVector, _Config19)\n\n  const _super20 = _createSuper(ConfigFireVector)\n\n  function ConfigFireVector () {\n    _classCallCheck(this, ConfigFireVector)\n\n    return _super20.call(this, [// .header('Fire vector direction inputs are')\n      'fromHead', // 'degrees clockwise from direction of maximum spread', true)\n      'fromUpslope', // 'degrees clockwise from upslope')\n      'fromNorth']) // 'degrees clockwise from north');\n  }\n\n  return ConfigFireVector\n}(Config)) // bp6 #9 Surface > Input  > Directions > Spread is [head, back, flank, psi, beta]\n// BPX implements all spread direction options at any time instead of selecting just one\n// bp6 #12 - Crown > Input  > Use [roth, s&r]\n// BPX - May not be necessary: S&R is applied only if passive ouputs requested\n// export const CrownFireMethod_UNUSED = [\n//   // .header('Crown fire is estimated via')\n//   'rothermel', // 'Rothermel')\n//   'scottReinhardt' // 'Scott and Reinhardt (wind must blow upslope)', true);\n// ]\n// bp6 #13 - Crown > Input  > FLI [fl, fli]\n// BPX- Required only in STANDALONE mode\n// const CrownFireFli_UNUSED = [\n//   // .header('The Crown Module is')\n//   'surface', // 'linked to the Surface Module', true)\n//   'flameLength', // 'run stand-alone using flame length input')\n//   'firelineIntensity' // 'run stand-alone using fireline intensity input');\n// ]\n// bp6 # 14 - Contain > Input  > resources [single, multiple]\n// const ContainResources_UNUSED = [\n//   // .header('Contain module allows')\n//   'singleResource', // 'a single firefighting resource')\n//   'multipleResources' // 'multiple firefighting resources', true);\n// ]\n\n/**\n * Declares the specialized BehavePlus Option Variants used by nodes and equations.\n *\n * Note that classes derived from Crucible.Variant.Option() require an array of options argument.\n */\n\nconst ChaparralTypeOption = /* #__PURE__ */(function (_Option) {\n  _inherits(ChaparralTypeOption, _Option)\n\n  const _super = _createSuper(ChaparralTypeOption)\n\n  function ChaparralTypeOption () {\n    _classCallCheck(this, ChaparralTypeOption)\n\n    return _super.call(this, Types)\n  }\n\n  return ChaparralTypeOption\n}(Option))\nconst CrownFireInitiationTypeOption = /* #__PURE__ */(function (_Option2) {\n  _inherits(CrownFireInitiationTypeOption, _Option2)\n\n  const _super2 = _createSuper(CrownFireInitiationTypeOption)\n\n  function CrownFireInitiationTypeOption () {\n    _classCallCheck(this, CrownFireInitiationTypeOption)\n\n    return _super2.call(this, InitiationTypes)\n  }\n\n  return CrownFireInitiationTypeOption\n}(Option))\nconst FuelModelDomainOption = /* #__PURE__ */(function (_Option3) {\n  _inherits(FuelModelDomainOption, _Option3)\n\n  const _super3 = _createSuper(FuelModelDomainOption)\n\n  function FuelModelDomainOption () {\n    _classCallCheck(this, FuelModelDomainOption)\n\n    return _super3.call(this, Domains)\n  }\n\n  return FuelModelDomainOption\n}(Option))\nconst FuelModelKeyOption = /* #__PURE__ */(function (_Option4) {\n  _inherits(FuelModelKeyOption, _Option4)\n\n  const _super4 = _createSuper(FuelModelKeyOption)\n\n  function FuelModelKeyOption () {\n    let _this\n\n    _classCallCheck(this, FuelModelKeyOption)\n\n    _this = _super4.call(this, keys())\n    _this._specs._defaultValue = '10'\n    return _this\n  }\n\n  return FuelModelKeyOption\n}(Option))\nconst IgnitionFuelTypeOption = /* #__PURE__ */(function (_Option5) {\n  _inherits(IgnitionFuelTypeOption, _Option5)\n\n  const _super5 = _createSuper(IgnitionFuelTypeOption)\n\n  function IgnitionFuelTypeOption () {\n    _classCallCheck(this, IgnitionFuelTypeOption)\n\n    return _super5.call(this, LightningFuels)\n  }\n\n  return IgnitionFuelTypeOption\n}(Option))\nconst IgnitionLightningChargeOption = /* #__PURE__ */(function (_Option6) {\n  _inherits(IgnitionLightningChargeOption, _Option6)\n\n  const _super6 = _createSuper(IgnitionLightningChargeOption)\n\n  function IgnitionLightningChargeOption () {\n    _classCallCheck(this, IgnitionLightningChargeOption)\n\n    return _super6.call(this, LightningCharges)\n  }\n\n  return IgnitionLightningChargeOption\n}(Option))\nconst SpottingSourceLocationOption = /* #__PURE__ */(function (_Option7) {\n  _inherits(SpottingSourceLocationOption, _Option7)\n\n  const _super7 = _createSuper(SpottingSourceLocationOption)\n\n  function SpottingSourceLocationOption () {\n    _classCallCheck(this, SpottingSourceLocationOption)\n\n    return _super7.call(this, locations())\n  }\n\n  return SpottingSourceLocationOption\n}(Option))\nconst TorchingTreeSpeciesOption = /* #__PURE__ */(function (_Option8) {\n  _inherits(TorchingTreeSpeciesOption, _Option8)\n\n  const _super8 = _createSuper(TorchingTreeSpeciesOption)\n\n  function TorchingTreeSpeciesOption () {\n    _classCallCheck(this, TorchingTreeSpeciesOption)\n\n    return _super8.call(this, TorchingTreeSpecies)\n  }\n\n  return TorchingTreeSpeciesOption\n}(Option))\nconst TreeSpeciesFofem6Option = /* #__PURE__ */(function (_Option9) {\n  _inherits(TreeSpeciesFofem6Option, _Option9)\n\n  const _super9 = _createSuper(TreeSpeciesFofem6Option)\n\n  function TreeSpeciesFofem6Option () {\n    _classCallCheck(this, TreeSpeciesFofem6Option)\n\n    return _super9.call(this, fofem6Codes())\n  }\n\n  return TreeSpeciesFofem6Option\n}(Option))\nconst WesternAspenTypeOption = /* #__PURE__ */(function (_Option10) {\n  _inherits(WesternAspenTypeOption, _Option10)\n\n  const _super10 = _createSuper(WesternAspenTypeOption)\n\n  function WesternAspenTypeOption () {\n    _classCallCheck(this, WesternAspenTypeOption)\n\n    return _super10.call(this, Types$1)\n  }\n\n  return WesternAspenTypeOption\n}(Option))\n\nconst CompassAzimuth = /* #__PURE__ */(function (_Quantity) {\n  _inherits(CompassAzimuth, _Quantity)\n\n  const _super = _createSuper(CompassAzimuth)\n\n  function CompassAzimuth () {\n    _classCallCheck(this, CompassAzimuth)\n\n    return _super.call(this, ['deg'], 0, 360)\n  }\n\n  return CompassAzimuth\n}(Quantity))\nconst Factor = /* #__PURE__ */(function (_Float) {\n  _inherits(Factor, _Float)\n\n  const _super2 = _createSuper(Factor)\n\n  function Factor () {\n    _classCallCheck(this, Factor)\n\n    return _super2.apply(this, arguments)\n  }\n\n  return Factor\n}(Float))\nconst Fraction = /* #__PURE__ */(function (_Quantity2) {\n  _inherits(Fraction, _Quantity2)\n\n  const _super3 = _createSuper(Fraction)\n\n  function Fraction () {\n    _classCallCheck(this, Fraction)\n\n    return _super3.call(this, ['ratio', 'percent', '%'], 0, 1)\n  }\n\n  return Fraction\n}(Quantity))\nconst NonNegativeFactor = /* #__PURE__ */(function (_Float2) {\n  _inherits(NonNegativeFactor, _Float2)\n\n  const _super4 = _createSuper(NonNegativeFactor)\n\n  function NonNegativeFactor () {\n    _classCallCheck(this, NonNegativeFactor)\n\n    return _super4.call(this, 0, 0, 0)\n  }\n\n  return NonNegativeFactor\n}(Float)) // Part 2 - Specialized BehavePlus Variants\n\nconst AirTemperature = /* #__PURE__ */(function (_Quantity3) {\n  _inherits(AirTemperature, _Quantity3)\n\n  const _super5 = _createSuper(AirTemperature)\n\n  function AirTemperature () {\n    _classCallCheck(this, AirTemperature)\n\n    return _super5.call(this, ['F', 'C'])\n  }\n\n  return AirTemperature\n}(Quantity))\nconst CrownFillFraction = /* #__PURE__ */(function (_Fraction) {\n  _inherits(CrownFillFraction, _Fraction)\n\n  const _super6 = _createSuper(CrownFillFraction)\n\n  function CrownFillFraction () {\n    _classCallCheck(this, CrownFillFraction)\n\n    return _super6.apply(this, arguments)\n  }\n\n  return CrownFillFraction\n}(Fraction))\nconst CrownFireActiveRatio = /* #__PURE__ */(function (_NonNegativeFactor) {\n  _inherits(CrownFireActiveRatio, _NonNegativeFactor)\n\n  const _super7 = _createSuper(CrownFireActiveRatio)\n\n  function CrownFireActiveRatio () {\n    _classCallCheck(this, CrownFireActiveRatio)\n\n    return _super7.apply(this, arguments)\n  }\n\n  return CrownFireActiveRatio\n}(NonNegativeFactor))\nconst CrownFireBurnedFraction = /* #__PURE__ */(function (_Fraction2) {\n  _inherits(CrownFireBurnedFraction, _Fraction2)\n\n  const _super8 = _createSuper(CrownFireBurnedFraction)\n\n  function CrownFireBurnedFraction () {\n    _classCallCheck(this, CrownFireBurnedFraction)\n\n    return _super8.apply(this, arguments)\n  }\n\n  return CrownFireBurnedFraction\n}(Fraction))\nconst CrownRatioFraction = /* #__PURE__ */(function (_Fraction3) {\n  _inherits(CrownRatioFraction, _Fraction3)\n\n  const _super9 = _createSuper(CrownRatioFraction)\n\n  function CrownRatioFraction () {\n    _classCallCheck(this, CrownRatioFraction)\n\n    return _super9.apply(this, arguments)\n  }\n\n  return CrownRatioFraction\n}(Fraction))\nconst CrownTransitionRatio = /* #__PURE__ */(function (_NonNegativeFactor2) {\n  _inherits(CrownTransitionRatio, _NonNegativeFactor2)\n\n  const _super10 = _createSuper(CrownTransitionRatio)\n\n  function CrownTransitionRatio () {\n    _classCallCheck(this, CrownTransitionRatio)\n\n    return _super10.apply(this, arguments)\n  }\n\n  return CrownTransitionRatio\n}(NonNegativeFactor))\nconst Documentation = /* #__PURE__ */(function (_Text) {\n  _inherits(Documentation, _Text)\n\n  const _super11 = _createSuper(Documentation)\n\n  function Documentation () {\n    _classCallCheck(this, Documentation)\n\n    return _super11.call(this, '', 0, 80)\n  }\n\n  return Documentation\n}(Text))\nconst FireArea = /* #__PURE__ */(function (_Quantity4) {\n  _inherits(FireArea, _Quantity4)\n\n  const _super12 = _createSuper(FireArea)\n\n  function FireArea () {\n    _classCallCheck(this, FireArea)\n\n    return _super12.call(this, ['ft2', 'ac', 'mi2', 'm2', 'ha', 'km2'])\n  }\n\n  return FireArea\n}(Quantity))\nconst FireDampingCoefficient = /* #__PURE__ */(function (_Fraction4) {\n  _inherits(FireDampingCoefficient, _Fraction4)\n\n  const _super13 = _createSuper(FireDampingCoefficient)\n\n  function FireDampingCoefficient () {\n    _classCallCheck(this, FireDampingCoefficient)\n\n    return _super13.apply(this, arguments)\n  }\n\n  return FireDampingCoefficient\n}(Fraction))\nconst FireElapsedTime = /* #__PURE__ */(function (_Quantity5) {\n  _inherits(FireElapsedTime, _Quantity5)\n\n  const _super14 = _createSuper(FireElapsedTime)\n\n  function FireElapsedTime () {\n    _classCallCheck(this, FireElapsedTime)\n\n    return _super14.call(this, ['min', 'h', 'd'])\n  }\n\n  return FireElapsedTime\n}(Quantity))\nconst FireFirelineIntensity = /* #__PURE__ */(function (_Quantity6) {\n  _inherits(FireFirelineIntensity, _Quantity6)\n\n  const _super15 = _createSuper(FireFirelineIntensity)\n\n  function FireFirelineIntensity () {\n    _classCallCheck(this, FireFirelineIntensity)\n\n    return _super15.call(this, ['btu/ft/s', 'J/m/s', 'W/m'])\n  }\n\n  return FireFirelineIntensity\n}(Quantity))\nconst FireFlameDuration = /* #__PURE__ */(function (_Quantity7) {\n  _inherits(FireFlameDuration, _Quantity7)\n\n  const _super16 = _createSuper(FireFlameDuration)\n\n  function FireFlameDuration () {\n    _classCallCheck(this, FireFlameDuration)\n\n    return _super16.call(this, ['min', 's', 'h'])\n  }\n\n  return FireFlameDuration\n}(Quantity))\nconst FireFlameLength = /* #__PURE__ */(function (_Quantity8) {\n  _inherits(FireFlameLength, _Quantity8)\n\n  const _super17 = _createSuper(FireFlameLength)\n\n  function FireFlameLength () {\n    _classCallCheck(this, FireFlameLength)\n\n    return _super17.call(this, ['ft', 'm'])\n  }\n\n  return FireFlameLength\n}(Quantity))\nconst FireHeatPerUnitArea = /* #__PURE__ */(function (_Quantity9) {\n  _inherits(FireHeatPerUnitArea, _Quantity9)\n\n  const _super18 = _createSuper(FireHeatPerUnitArea)\n\n  function FireHeatPerUnitArea () {\n    _classCallCheck(this, FireHeatPerUnitArea)\n\n    return _super18.call(this, ['btu/ft2', 'J/m2'])\n  }\n\n  return FireHeatPerUnitArea\n}(Quantity))\nconst FireLengthToWidthRatio = /* #__PURE__ */(function (_Factor) {\n  _inherits(FireLengthToWidthRatio, _Factor)\n\n  const _super19 = _createSuper(FireLengthToWidthRatio)\n\n  function FireLengthToWidthRatio () {\n    _classCallCheck(this, FireLengthToWidthRatio)\n\n    return _super19.call(this, 1, 1)\n  }\n\n  return FireLengthToWidthRatio\n}(Factor))\nconst FirePower = /* #__PURE__ */(function (_Quantity10) {\n  _inherits(FirePower, _Quantity10)\n\n  const _super20 = _createSuper(FirePower)\n\n  function FirePower () {\n    _classCallCheck(this, FirePower)\n\n    return _super20.call(this, ['btu/min', 'btu/s', 'J/s', 'J/min', 'W'])\n  }\n\n  return FirePower\n}(Quantity))\nconst FirePowerRatio = /* #__PURE__ */(function (_NonNegativeFactor3) {\n  _inherits(FirePowerRatio, _NonNegativeFactor3)\n\n  const _super21 = _createSuper(FirePowerRatio)\n\n  function FirePowerRatio () {\n    _classCallCheck(this, FirePowerRatio)\n\n    return _super21.apply(this, arguments)\n  }\n\n  return FirePowerRatio\n}(NonNegativeFactor))\nconst FirePropagatingFluxRatio = /* #__PURE__ */(function (_Fraction5) {\n  _inherits(FirePropagatingFluxRatio, _Fraction5)\n\n  const _super22 = _createSuper(FirePropagatingFluxRatio)\n\n  function FirePropagatingFluxRatio () {\n    _classCallCheck(this, FirePropagatingFluxRatio)\n\n    return _super22.apply(this, arguments)\n  }\n\n  return FirePropagatingFluxRatio\n}(Fraction))\nconst FireReactionIntensity = /* #__PURE__ */(function (_Quantity11) {\n  _inherits(FireReactionIntensity, _Quantity11)\n\n  const _super23 = _createSuper(FireReactionIntensity)\n\n  function FireReactionIntensity () {\n    _classCallCheck(this, FireReactionIntensity)\n\n    return _super23.call(this, ['btu/ft2/min', 'J/m2/min'])\n  }\n\n  return FireReactionIntensity\n}(Quantity))\nconst FireReactionVelocity = /* #__PURE__ */(function (_Quantity12) {\n  _inherits(FireReactionVelocity, _Quantity12)\n\n  const _super24 = _createSuper(FireReactionVelocity)\n\n  function FireReactionVelocity () {\n    _classCallCheck(this, FireReactionVelocity)\n\n    return _super24.call(this, ['1/min', '1/s'])\n  }\n\n  return FireReactionVelocity\n}(Quantity))\nconst FireResidenceTime = /* #__PURE__ */(function (_Quantity13) {\n  _inherits(FireResidenceTime, _Quantity13)\n\n  const _super25 = _createSuper(FireResidenceTime)\n\n  function FireResidenceTime () {\n    _classCallCheck(this, FireResidenceTime)\n\n    return _super25.call(this, ['min', 's', 'h'])\n  }\n\n  return FireResidenceTime\n}(Quantity))\nconst FireScorchHeight = /* #__PURE__ */(function (_Quantity14) {\n  _inherits(FireScorchHeight, _Quantity14)\n\n  const _super26 = _createSuper(FireScorchHeight)\n\n  function FireScorchHeight () {\n    _classCallCheck(this, FireScorchHeight)\n\n    return _super26.call(this, ['ft', 'm'])\n  }\n\n  return FireScorchHeight\n}(Quantity))\nconst FireSpotDistance = /* #__PURE__ */(function (_Quantity15) {\n  _inherits(FireSpotDistance, _Quantity15)\n\n  const _super27 = _createSuper(FireSpotDistance)\n\n  function FireSpotDistance () {\n    _classCallCheck(this, FireSpotDistance)\n\n    return _super27.call(this, ['ft', 'm', 'ch', 'mi', 'km'])\n  }\n\n  return FireSpotDistance\n}(Quantity))\nconst FireSpreadDistance = /* #__PURE__ */(function (_Quantity16) {\n  _inherits(FireSpreadDistance, _Quantity16)\n\n  const _super28 = _createSuper(FireSpreadDistance)\n\n  function FireSpreadDistance () {\n    _classCallCheck(this, FireSpreadDistance)\n\n    return _super28.call(this, ['ft', 'm', 'ch', 'mi', 'km'])\n  }\n\n  return FireSpreadDistance\n}(Quantity))\nconst FireSpreadRate = /* #__PURE__ */(function (_Quantity17) {\n  _inherits(FireSpreadRate, _Quantity17)\n\n  const _super29 = _createSuper(FireSpreadRate)\n\n  function FireSpreadRate () {\n    _classCallCheck(this, FireSpreadRate)\n\n    return _super29.call(this, ['ft/min', 'm/min', 'ch/h', 'mi/h', 'km/h'])\n  }\n\n  return FireSpreadRate\n}(Quantity))\nconst FuelAge = /* #__PURE__ */(function (_Quantity18) {\n  _inherits(FuelAge, _Quantity18)\n\n  const _super30 = _createSuper(FuelAge)\n\n  function FuelAge () {\n    _classCallCheck(this, FuelAge)\n\n    return _super30.call(this, ['y'])\n  }\n\n  return FuelAge\n}(Quantity))\nconst FuelBasalArea = /* #__PURE__ */(function (_Quantity19) {\n  _inherits(FuelBasalArea, _Quantity19)\n\n  const _super31 = _createSuper(FuelBasalArea)\n\n  function FuelBasalArea () {\n    _classCallCheck(this, FuelBasalArea)\n\n    return _super31.call(this, ['ft2', 'm2'])\n  }\n\n  return FuelBasalArea\n}(Quantity))\nconst FuelBedBulkDensity = /* #__PURE__ */(function (_Quantity20) {\n  _inherits(FuelBedBulkDensity, _Quantity20)\n\n  const _super32 = _createSuper(FuelBedBulkDensity)\n\n  function FuelBedBulkDensity () {\n    _classCallCheck(this, FuelBedBulkDensity)\n\n    return _super32.call(this, ['lb/ft3', 'kg/m3'])\n  }\n\n  return FuelBedBulkDensity\n}(Quantity))\nconst FuelBedDepth = /* #__PURE__ */(function (_Quantity21) {\n  _inherits(FuelBedDepth, _Quantity21)\n\n  const _super33 = _createSuper(FuelBedDepth)\n\n  function FuelBedDepth () {\n    _classCallCheck(this, FuelBedDepth)\n\n    return _super33.call(this, ['ft', 'in', 'm', 'cm'], 0.01)\n  }\n\n  return FuelBedDepth\n}(Quantity))\nconst FuelBedHeatOfPreignition = /* #__PURE__ */(function (_Quantity22) {\n  _inherits(FuelBedHeatOfPreignition, _Quantity22)\n\n  const _super34 = _createSuper(FuelBedHeatOfPreignition)\n\n  function FuelBedHeatOfPreignition () {\n    _classCallCheck(this, FuelBedHeatOfPreignition)\n\n    return _super34.call(this, ['btu/lb', 'J/kg'])\n  }\n\n  return FuelBedHeatOfPreignition\n}(Quantity))\nconst FuelBedPackingRatio = /* #__PURE__ */(function (_NonNegativeFactor4) {\n  _inherits(FuelBedPackingRatio, _NonNegativeFactor4)\n\n  const _super35 = _createSuper(FuelBedPackingRatio)\n\n  function FuelBedPackingRatio () {\n    _classCallCheck(this, FuelBedPackingRatio)\n\n    return _super35.apply(this, arguments)\n  }\n\n  return FuelBedPackingRatio\n}(NonNegativeFactor))\nconst FuelCoverFraction = /* #__PURE__ */(function (_Fraction6) {\n  _inherits(FuelCoverFraction, _Fraction6)\n\n  const _super36 = _createSuper(FuelCoverFraction)\n\n  function FuelCoverFraction () {\n    _classCallCheck(this, FuelCoverFraction)\n\n    return _super36.apply(this, arguments)\n  }\n\n  return FuelCoverFraction\n}(Fraction))\nconst FuelDeadFraction = /* #__PURE__ */(function (_Fraction7) {\n  _inherits(FuelDeadFraction, _Fraction7)\n\n  const _super39 = _createSuper(FuelDeadFraction)\n\n  function FuelDeadFraction () {\n    _classCallCheck(this, FuelDeadFraction)\n\n    return _super39.apply(this, arguments)\n  }\n\n  return FuelDeadFraction\n}(Fraction))\nconst FuelEffectiveHeatingNumber = /* #__PURE__ */(function (_Fraction8) {\n  _inherits(FuelEffectiveHeatingNumber, _Fraction8)\n\n  const _super40 = _createSuper(FuelEffectiveHeatingNumber)\n\n  function FuelEffectiveHeatingNumber () {\n    _classCallCheck(this, FuelEffectiveHeatingNumber)\n\n    return _super40.apply(this, arguments)\n  }\n\n  return FuelEffectiveHeatingNumber\n}(Fraction))\nconst FuelEffectiveMineralContent = /* #__PURE__ */(function (_Fraction9) {\n  _inherits(FuelEffectiveMineralContent, _Fraction9)\n\n  const _super41 = _createSuper(FuelEffectiveMineralContent)\n\n  function FuelEffectiveMineralContent () {\n    _classCallCheck(this, FuelEffectiveMineralContent)\n\n    return _super41.apply(this, arguments)\n  }\n\n  return FuelEffectiveMineralContent\n}(Fraction))\nconst FuelHeatOfCombustion = /* #__PURE__ */(function (_Quantity25) {\n  _inherits(FuelHeatOfCombustion, _Quantity25)\n\n  const _super42 = _createSuper(FuelHeatOfCombustion)\n\n  function FuelHeatOfCombustion () {\n    _classCallCheck(this, FuelHeatOfCombustion)\n\n    return _super42.call(this, ['btu/lb', 'J/kg'], 8000, 12000)\n  }\n\n  return FuelHeatOfCombustion\n}(Quantity))\nconst FuelHeatOfPreignition = /* #__PURE__ */(function (_Quantity26) {\n  _inherits(FuelHeatOfPreignition, _Quantity26)\n\n  const _super43 = _createSuper(FuelHeatOfPreignition)\n\n  function FuelHeatOfPreignition () {\n    _classCallCheck(this, FuelHeatOfPreignition)\n\n    return _super43.call(this, ['btu/lb', 'J/kg'])\n  }\n\n  return FuelHeatOfPreignition\n}(Quantity))\nconst FuelHeatSink = /* #__PURE__ */(function (_Quantity27) {\n  _inherits(FuelHeatSink, _Quantity27)\n\n  const _super44 = _createSuper(FuelHeatSink)\n\n  function FuelHeatSink () {\n    _classCallCheck(this, FuelHeatSink)\n\n    return _super44.call(this, ['btu/ft3', 'J/m3'])\n  }\n\n  return FuelHeatSink\n}(Quantity))\nconst FuelMoistureContent = /* #__PURE__ */(function (_Float3) {\n  _inherits(FuelMoistureContent, _Float3)\n\n  const _super46 = _createSuper(FuelMoistureContent)\n\n  function FuelMoistureContent () {\n    _classCallCheck(this, FuelMoistureContent)\n\n    return _super46.call(this, 1, 0.01, 5)\n  }\n\n  return FuelMoistureContent\n}(Float))\nconst FuelOvendryLoad = /* #__PURE__ */(function (_Quantity28) {\n  _inherits(FuelOvendryLoad, _Quantity28)\n\n  const _super47 = _createSuper(FuelOvendryLoad)\n\n  function FuelOvendryLoad () {\n    _classCallCheck(this, FuelOvendryLoad)\n\n    return _super47.call(this, ['lb/ft2', 'ton/ac', 'kg/m2', 'T/ha'], 0, 10)\n  }\n\n  return FuelOvendryLoad\n}(Quantity))\nconst FuelParticleFiberDensity = /* #__PURE__ */(function (_Quantity29) {\n  _inherits(FuelParticleFiberDensity, _Quantity29)\n\n  const _super48 = _createSuper(FuelParticleFiberDensity)\n\n  function FuelParticleFiberDensity () {\n    _classCallCheck(this, FuelParticleFiberDensity)\n\n    return _super48.call(this, ['lb/ft3', 'kg/m3'])\n  }\n\n  return FuelParticleFiberDensity\n}(Quantity))\nconst FuelSizeClassIndex = /* #__PURE__ */(function (_Index) {\n  _inherits(FuelSizeClassIndex, _Index)\n\n  const _super49 = _createSuper(FuelSizeClassIndex)\n\n  function FuelSizeClassIndex () {\n    _classCallCheck(this, FuelSizeClassIndex)\n\n    return _super49.call(this, 6)\n  }\n\n  return FuelSizeClassIndex\n}(Index))\nconst FuelSurfaceArea = /* #__PURE__ */(function (_Quantity30) {\n  _inherits(FuelSurfaceArea, _Quantity30)\n\n  const _super50 = _createSuper(FuelSurfaceArea)\n\n  function FuelSurfaceArea () {\n    _classCallCheck(this, FuelSurfaceArea)\n\n    return _super50.call(this, ['ft2', 'm2'])\n  }\n\n  return FuelSurfaceArea\n}(Quantity))\nconst FuelSurfaceAreaToVolumeRatio = /* #__PURE__ */(function (_Quantity31) {\n  _inherits(FuelSurfaceAreaToVolumeRatio, _Quantity31)\n\n  const _super51 = _createSuper(FuelSurfaceAreaToVolumeRatio)\n\n  function FuelSurfaceAreaToVolumeRatio () {\n    let _this\n\n    _classCallCheck(this, FuelSurfaceAreaToVolumeRatio)\n\n    _this = _super51.call(this, ['ft2/ft3', 'm2/m3', 'cm2/cm3'], 1)\n    _this._specs._minimumValue = 1\n    return _this\n  }\n\n  return FuelSurfaceAreaToVolumeRatio\n}(Quantity))\nconst FuelTotalMineralContent = /* #__PURE__ */(function (_Fraction10) {\n  _inherits(FuelTotalMineralContent, _Fraction10)\n\n  const _super52 = _createSuper(FuelTotalMineralContent)\n\n  function FuelTotalMineralContent () {\n    _classCallCheck(this, FuelTotalMineralContent)\n\n    return _super52.apply(this, arguments)\n  }\n\n  return FuelTotalMineralContent\n}(Fraction))\nconst FuelVolume = /* #__PURE__ */(function (_Quantity32) {\n  _inherits(FuelVolume, _Quantity32)\n\n  const _super53 = _createSuper(FuelVolume)\n\n  function FuelVolume () {\n    _classCallCheck(this, FuelVolume)\n\n    return _super53.call(this, ['ft3', 'm3'])\n  }\n\n  return FuelVolume\n}(Quantity))\nconst IgnitionFuelDepth = /* #__PURE__ */(function (_Quantity33) {\n  _inherits(IgnitionFuelDepth, _Quantity33)\n\n  const _super54 = _createSuper(IgnitionFuelDepth)\n\n  function IgnitionFuelDepth () {\n    _classCallCheck(this, IgnitionFuelDepth)\n\n    return _super54.call(this, ['in', 'cm'])\n  }\n\n  return IgnitionFuelDepth\n}(Quantity))\nconst IgnitionProbability = /* #__PURE__ */(function (_Fraction11) {\n  _inherits(IgnitionProbability, _Fraction11)\n\n  const _super55 = _createSuper(IgnitionProbability)\n\n  function IgnitionProbability () {\n    _classCallCheck(this, IgnitionProbability)\n\n    return _super55.apply(this, arguments)\n  }\n\n  return IgnitionProbability\n}(Fraction))\nconst MapArea = /* #__PURE__ */(function (_Quantity34) {\n  _inherits(MapArea, _Quantity34)\n\n  const _super56 = _createSuper(MapArea)\n\n  function MapArea () {\n    _classCallCheck(this, MapArea)\n\n    return _super56.call(this, ['in2', 'cm2', 'mm2'])\n  }\n\n  return MapArea\n}(Quantity))\nconst MapContoursCount = /* #__PURE__ */(function (_Count) {\n  _inherits(MapContoursCount, _Count)\n\n  const _super57 = _createSuper(MapContoursCount)\n\n  function MapContoursCount () {\n    _classCallCheck(this, MapContoursCount)\n\n    return _super57.call(this, 0)\n  }\n\n  return MapContoursCount\n}(Count))\nconst MapDistance = /* #__PURE__ */(function (_Quantity35) {\n  _inherits(MapDistance, _Quantity35)\n\n  const _super58 = _createSuper(MapDistance)\n\n  function MapDistance () {\n    _classCallCheck(this, MapDistance)\n\n    return _super58.call(this, ['in', 'ft', 'cm', 'mm'])\n  }\n\n  return MapDistance\n}(Quantity))\nconst MapFactor = /* #__PURE__ */(function (_Float4) {\n  _inherits(MapFactor, _Float4)\n\n  const _super59 = _createSuper(MapFactor)\n\n  function MapFactor () {\n    _classCallCheck(this, MapFactor)\n\n    return _super59.call(this, 1 / 24000, 1 / 2000000, 1)\n  }\n\n  return MapFactor\n}(Float))\nconst MapScale = /* #__PURE__ */(function (_Float5) {\n  _inherits(MapScale, _Float5)\n\n  const _super60 = _createSuper(MapScale)\n\n  function MapScale () {\n    _classCallCheck(this, MapScale)\n\n    return _super60.call(this, 24000, 1, 2000000)\n  }\n\n  return MapScale\n}(Float))\nconst MortalityFraction = /* #__PURE__ */(function (_Fraction12) {\n  _inherits(MortalityFraction, _Fraction12)\n\n  const _super61 = _createSuper(MortalityFraction)\n\n  function MortalityFraction () {\n    _classCallCheck(this, MortalityFraction)\n\n    return _super61.apply(this, arguments)\n  }\n\n  return MortalityFraction\n}(Fraction))\nconst SlopeSteepness = /* #__PURE__ */(function (_Slope) {\n  _inherits(SlopeSteepness, _Slope)\n\n  const _super62 = _createSuper(SlopeSteepness)\n\n  function SlopeSteepness () {\n    _classCallCheck(this, SlopeSteepness)\n\n    return _super62.apply(this, arguments)\n  }\n\n  return SlopeSteepness\n}(Slope))\nconst SpottingFirebrandObject = /* #__PURE__ */(function (_Blob) {\n  _inherits(SpottingFirebrandObject, _Blob)\n\n  const _super63 = _createSuper(SpottingFirebrandObject)\n\n  // Crown fire spotting distance\n  function SpottingFirebrandObject () {\n    _classCallCheck(this, SpottingFirebrandObject)\n\n    return _super63.call(this, {\n      zdrop: 0,\n      xdrop: 0,\n      xdrift: 0,\n      xspot: 0,\n      layer: 0\n    })\n  }\n\n  return SpottingFirebrandObject\n}(Blob))\nconst TreeBarkThickness = /* #__PURE__ */(function (_Quantity36) {\n  _inherits(TreeBarkThickness, _Quantity36)\n\n  const _super64 = _createSuper(TreeBarkThickness)\n\n  function TreeBarkThickness () {\n    _classCallCheck(this, TreeBarkThickness)\n\n    return _super64.call(this, ['in', 'cm', 'mm'])\n  }\n\n  return TreeBarkThickness\n}(Quantity))\nconst TreeCount = /* #__PURE__ */(function (_Count2) {\n  _inherits(TreeCount, _Count2)\n\n  const _super65 = _createSuper(TreeCount)\n\n  function TreeCount () {\n    _classCallCheck(this, TreeCount)\n\n    return _super65.call(this, 0)\n  }\n\n  return TreeCount\n}(Count))\nconst TreeDbh = /* #__PURE__ */(function (_Quantity37) {\n  _inherits(TreeDbh, _Quantity37)\n\n  const _super66 = _createSuper(TreeDbh)\n\n  function TreeDbh () {\n    _classCallCheck(this, TreeDbh)\n\n    return _super66.call(this, ['in', 'ft', 'cm', 'm'])\n  }\n\n  return TreeDbh\n}(Quantity))\nconst TreeHeight = /* #__PURE__ */(function (_Quantity38) {\n  _inherits(TreeHeight, _Quantity38)\n\n  const _super67 = _createSuper(TreeHeight)\n\n  function TreeHeight () {\n    _classCallCheck(this, TreeHeight)\n\n    return _super67.call(this, ['ft', 'm'])\n  }\n\n  return TreeHeight\n}(Quantity))\nconst WeightingFactor = /* #__PURE__ */(function (_Fraction13) {\n  _inherits(WeightingFactor, _Fraction13)\n\n  const _super68 = _createSuper(WeightingFactor)\n\n  function WeightingFactor () {\n    _classCallCheck(this, WeightingFactor)\n\n    return _super68.apply(this, arguments)\n  }\n\n  return WeightingFactor\n}(Fraction))\nconst WindSpeed = /* #__PURE__ */(function (_Quantity39) {\n  _inherits(WindSpeed, _Quantity39)\n\n  const _super69 = _createSuper(WindSpeed)\n\n  function WindSpeed () {\n    _classCallCheck(this, WindSpeed)\n\n    return _super69.call(this, ['ft/min', 'mi/h', 'm/s', 'm/min', 'km/h'])\n  }\n\n  return WindSpeed\n}(Quantity))\nconst WindSpeedAdjustmentFactor = /* #__PURE__ */(function (_Fraction14) {\n  _inherits(WindSpeedAdjustmentFactor, _Fraction14)\n\n  const _super70 = _createSuper(WindSpeedAdjustmentFactor)\n\n  function WindSpeedAdjustmentFactor () {\n    _classCallCheck(this, WindSpeedAdjustmentFactor)\n\n    return _super70.apply(this, arguments)\n  }\n\n  return WindSpeedAdjustmentFactor\n}(Fraction))\n\n/* eslint-disable comma-spacing, indent, comma-dangle, quotes, no-unused-vars */\nconst sfe = 'surface.fire.ellipse'\nconst sfea = 'surface.fire.ellipse.axis'\nconst sfeb = 'surface.fire.ellipse.back'\nconst sfef = 'surface.fire.ellipse.flank'\nconst sfeh = 'surface.fire.ellipse.head'\nconst sfehdg = 'surface.fire.ellipse.heading'\nconst sfep = 'surface.fire.ellipse.psi'\nconst sfe5 = 'surface.fire.ellipse.beta5'\nconst sfe6 = 'surface.fire.ellipse.beta'\nconst sfem = 'surface.fire.ellipse.map'\nconst sfes = 'surface.fire.ellipse.size'\nconst sfev = 'surface.fire.ellipse.vector'\nconst spfb = 'surface.primary.fuel.bed'\nconst spfbd = 'surface.primary.fuel.bed.dead'\nconst spfbdpc = 'surface.primary.fuel.bed.dead.particle.class'\nconst spfbl = 'surface.primary.fuel.bed.live'\nconst spfblpc = 'surface.primary.fuel.bed.live.particle.class'\nconst spff = 'surface.primary.fuel.fire'\nconst spffs = 'surface.primary.fuel.fire.spread'\nconst spffss = 'surface.primary.fuel.fire.spread.step'\nconst spfm = 'surface.primary.fuel.model'\nconst spfmb = 'surface.primary.fuel.model.behave'\nconst spfmbd = 'surface.primary.fuel.model.behave.derived'\nconst spfmbp = 'surface.primary.fuel.model.behave.parms'\nconst spfmc = 'surface.primary.fuel.model.chaparral'\nconst spfmcd = 'surface.primary.fuel.model.chaparral.derived'\nconst spfmcp = 'surface.primary.fuel.model.chaparral.parms'\nconst spfmp = 'surface.primary.fuel.model.palmettoGallberry'\nconst spfmpd = 'surface.primary.fuel.model.palmettoGallberry.derived'\nconst spfmpp = 'surface.primary.fuel.model.palmettoGallberry.parms'\nconst spfmw = 'surface.primary.fuel.model.westernAspen'\nconst spfmwd = 'surface.primary.fuel.model.westernAspen.derived'\nconst spfmwp = 'surface.primary.fuel.model.westernAspen.parms'\nconst ssfb = 'surface.secondary.fuel.bed'\nconst ssfbd = 'surface.secondary.fuel.bed.dead'\nconst ssfbdpc = 'surface.secondary.fuel.bed.dead.particle.class'\nconst ssfbl = 'surface.secondary.fuel.bed.live'\nconst ssfblpc = 'surface.secondary.fuel.bed.live.particle.class'\nconst ssff = 'surface.secondary.fuel.fire'\nconst ssffs = 'surface.secondary.fuel.fire.spread'\nconst ssffss = 'surface.secondary.fuel.fire.spread.step'\nconst ssfm = 'surface.secondary.fuel.model'\nconst ssfmb = 'surface.secondary.fuel.model.behave'\nconst ssfmbd = 'surface.secondary.fuel.model.behave.derived'\nconst ssfmbp = 'surface.secondary.fuel.model.behave.parms'\nconst ssfmc = 'surface.secondary.fuel.model.chaparral'\nconst ssfmcd = 'surface.secondary.fuel.model.chaparral.derived'\nconst ssfmcp = 'surface.secondary.fuel.model.chaparral.parms'\nconst ssfmp = 'surface.secondary.fuel.model.palmettoGallberry'\nconst ssfmpd = 'surface.secondary.fuel.model.palmettoGallberry.derived'\nconst ssfmpp = 'surface.secondary.fuel.model.palmettoGallberry.parms'\nconst ssfmw = 'surface.secondary.fuel.model.westernAspen'\nconst ssfmwd = 'surface.secondary.fuel.model.westernAspen.derived'\nconst ssfmwp = 'surface.secondary.fuel.model.westernAspen.parms'\nconst swf = 'surface.weighted.fire'\nconst beta = 'packingRatio'\nconst ccfb = 'crown.canopy.fuel.bed'\nconst ccfbd = 'crown.canopy.fuel.bed.dead'\nconst ccfbdpc = 'crown.canopy.fuel.bed.dead.particle.class'\nconst ccfbl = 'crown.canopy.fuel.bed.live'\nconst ccfblpc = 'crown.canopy.fuel.bed.live.particle.class'\nconst ccff = 'crown.canopy.fuel.fire'\nconst ccffs = 'crown.canopy.fuel.fire.spread'\nconst ccffss = 'crown.canopy.fuel.fire.spread.step'\nconst cfa = 'crown.fire.active'\nconst cfam = 'crown.fire.active.map'\nconst cfas = 'crown.fire.active.size'\nconst cff = 'crown.fire.final'\nconst cffm = 'crown.fire.final.map'\nconst cffs = 'crown.fire.final.size'\nconst cfi = 'crown.fire.initiation'\nconst cfs = 'crown.fire.surface'\nconst cfg = 'configure'\nconst chf = 'cured.herb.fraction'\nconst cls = 'crownLengthScorched'\nconst cvs = 'crownVolumeScorched'\nconst dfl = 'deadFineLoad'\nconst dsl = 'deadSmallLoad'\nconst dml = 'deadMediumLoad'\nconst dll = 'deadLargeLoad'\nconst dfol = 'deadFoliageLoad'\nconst dlit = 'deadLitterLoad'\nconst dr = 'docs.run'\nconst ef = 'effectiveFuel'\nconst emc = 'effective.mineralContent'\nconst etam = 'moistureDamping'\nconst etas = 'mineralDamping'\nconst ew = 'effectiveWindSpeed'\nconst ext = 'extinction'\nconst fd = 'fiberDensity'\nconst fl = 'flameLength'\nconst fli = 'firelineIntensity'\nconst ft = 'spotDistance.flatTerrain'\nconst ftd = 'spotDistance.flatTerrainWithDrift'\nconst ig = 'ignition'\nconst mt = 'spotDistance.mountainTerrain'\nconst fbc = 'firebrand.criticalCoverHeight'\nconst fbd = 'firebrand.drift'\nconst fbh = 'firebrand.height'\nconst gamma = 'propagatingFluxRatio'\nconst hc = 'heatOfCombustion'\nconst hn = 'heatingNumber'\nconst hp = 'heatOfPreignition'\nconst hpa = 'heatPerUnitArea'\nconst hno = 'heading.fromNorth'\nconst hup = 'heading.fromUpslope'\nconst ils = 'ignition.lightningStrike'\nconst lfl = 'liveFineLoad'\nconst lsl = 'liveSmallLoad'\nconst lml = 'liveMediumLoad'\nconst lll = 'liveLargeLoad'\nconst lfol = 'liveFoliageLoad'\nconst lwr = 'lengthToWidthRatio'\nconst maxDir = 'maximumDirection'\nconst mc = 'moistureContent'\nconst md = 'mapDistance'\nconst nol = 'net.ovendryLoad'\nconst obs = 'observed'\nconst ol = 'ovendryLoad'\nconst phi = 'windSlopeSpreadRateCoefficient'\nconst phis = 'slope.phi'\nconst phiw = 'wind.phi'\nconst phiew = 'phiEffectiveWind'\nconst pr = 'probability'\nconst ros = 'spreadRate'\nconst rxi = 'reactionIntensity'\nconst rxv = 'reactionVelocity'\nconst sa = 'surfaceArea'\nconst savr = 'surfaceAreaToVolumeRatio'\nconst sc = 'sizeClass'\nconst sd = 'spreadDistance'\nconst sh = 'scorchHeight'\nconst spb = 'spotting.burningPile'\nconst spc = 'spotting.crownFire'\nconst sps = 'spotting.surfaceFire'\nconst spt = 'spotting.torchingTrees'\nconst taur$1 = 'flameResidenceTime'\nconst tm = 'treeMortality'\nconst tmc = 'total.mineralContent'\nconst vol = 'volume'\nconst waf = 'windSpeedAdjustmentFactor'\nconst wb = 'wind.factor.b'\nconst wc = 'wind.factor.c'\nconst we = 'wind.factor.e'\nconst wf = 'weightingFactor'\nconst wi = 'wind.factor.i'\nconst wk = 'wind.factor.k'\nconst wl = 'waterLoad'\nconst wsm = 'wind.speed.atMidflame'\nconst x = 'site'\nconst xc = 'site.canopy'\nconst xf = 'site.fire'\nconst xfo = 'site.fire.observed'\nconst xm = 'site.moisture'\nconst xs = 'site.slope'\nconst xt = 'site.temperature'\nconst xtrvd = 'site.terrain.ridgeValleyDistance'\nconst xtrve = 'site.terrain.ridgeValleyElevation'\nconst xtsrc = 'site.terrain.spotSourceLocation'\nconst xwd = 'site.wind.direction'\nconst xws = 'site.wind.speed'\nconst sm = 'site.map' // Array of literals used by Node updater config conditions and method parameters\n\nconst literal = [8000, // 0\n'lengthToWidthRatio', // 1\n'flameLength', // 2\n'firelineIntensity', // 3\n'headingFromUpslope', // 4\n'upslope', // 5\n'sourceFromNorth', // 6\n'effectiveWindSpeed', // 7\n1, // 8\n'category', // 9\n'liveCategory', // 10\n'degrees', // 11\n'map', // 12\n0, // 13\n'at10m', // 14\n'at20ft', // 15\n'atMidflame', // 16\n32, // 17\n46, // 18\n30, // 19\n8300, // 20\n640, // 21\n350, // 22\n0.01, // 23\n0.015, // 24\n0.0555, // 25\n0.055, // 26\n0.03, // 27\n'dead', // 28\n109, // 29\n127, // 30\n140, // 31\n5, // 32\n61, // 33\n2000, // 34\n27, // 35\n10500, // 36\n2800, // 37\n'live', // 38\n9550, // 39\n2200, // 40\n0.035, // 41\n0.3, // 42\n0.4, // 43\n0.25, // 44\n'input', // 45\n'applied', // 46\n'catalog', // 47\n'behave', // 48\n'chaparral', // 49\n'palmettoGallberry', // 50\n'westernAspen', // 51\n'none', // 52\n'estimated', // 53\n'chamise', // 54\n'aspenShrub', // 55\n'expected', // 56\n'harmonic', // 57\n'linkedToSurfaceFire', // 58\n'fromHead', // 59\n'fromUpslope', // 60\n'fromNorth', // 61\n'linkedToCrownFire', // 62\n'standAlone', // 63\n0.138, // 64\n0.092, // 65\n0.23, // 66\n1500 // 67\n] // Map of Dag method references\n\nconst dagMethod = new Map([['bind', bind], ['config', config], ['dangler', dangler], ['fixed', fixed], ['input', input], ['link', link], ['module', module]]) // Array of non-Dag Node updater method references\n\nconst method = [module, // 0\nconfig, // 1\ninput, // 2\nfirebrand, // 3\nlightningStrike, // 4\ncrownFill, // 5\ncrownLength, // 6\ncrownRatio, // 7\nheatPerUnitArea, // 8\nfixed, // 9\nsheltersFuelFromWind, // 10\nfuelLoad, // 11\nwindSpeedAdjustmentFactor, // 12\nappliedDownWindCoverHeight, // 13\nbarkThickness, // 14\neffectiveWindSpeedFromLwr, // 15\nfirelineIntensityFromFlameLength, // 16\nflameLength, // 17\ndiff, // 18\nsum$1, // 19\nlengthToWidthRatio$1, // 20\ndivide, // 21\nmultiply, // 22\nslopeRatioMap, // 23\nslopeDegreesMap, // 24\nbind, // 25\nopposite, // 26\nslopeDegrees, // 27\nslopeRatio, // 28\nfuelTemperature, // 29\nspeedAt10m, // 30\nspeedAt20ft, // 31\nspeedAt20ftFromMidflame, // 32\nspeedAtMidflame, // 33\nselectByDomain, // 34\neffectiveHeatingNumber, // 35\neffectiveFuelLoad, // 36\nheatOfPreignition, // 37\nnetOvendryLoad, // 38\nsizeClass, // 39\nsizeClassWeightingFactor, // 40\nsurfaceArea, // 41\nsurfaceAreaWeightingFactor, // 42\nvolume, // 43\neffectiveFuelWaterLoad, // 44\nsum, // 45\nmineralDamping, // 46\nmoistureDamping, // 47\nsumOfProducts, // 48\nextinctionMoistureContentFactor, // 49\nreactionIntensityDry, // 50\nsizeClassWeightingFactorArray, // 51\nextinctionMoistureContent, // 52\nheatSink, // 53\nnoWindNoSlopeSpreadRate, // 54\nopenWindSpeedAdjustmentFactor, // 55\npackingRatio, // 56\noptimumPackingRatio, // 57\npropagatingFluxRatio, // 58\nreactionVelocityExponent, // 59\nreactionVelocityMaximum, // 60\nreactionVelocityOptimum, // 61\nsavr15, // 62\nmaximumDirectionSlopeSpreadRate, // 63\nmaximumDirectionWindSpreadRate, // 64\nmaximumDirectionXComponent, // 65\nmaximumDirectionYComponent, // 66\nmaximumDirectionSpreadRate, // 67\ngreaterThan, // 68\neffectiveWindSpeedLimit, // 69\nphiEwFromEws, // 70\nmaximumSpreadRate, // 71\nslopeK, // 72\nphiSlope, // 73\neffectiveWindSpeed, // 74\nphiEffectiveWind, // 75\nphiEffectiveWindInferred, // 76\nspreadRateWithCrossSlopeWind, // 77\nMath.min, // 78\nspreadRateWithRosLimitApplied, // 79\nwindSpeedAdjustmentFactor$1, // 80\nwindB, // 81\nwindC, // 82\nwindE, // 83\nwindK, // 84\nwindI, // 85\nphiWind, // 86\nfirelineIntensity, // 87\ntaur, // 88\nspreadDirectionFromUpslope, // 89\nheatPerUnitArea$1, // 90\nscorchHeight, // 91\ndomain, // 92\ncuredHerbFraction, // 93\nbehaveDepth, // 94\nbehaveDeadMext, // 95\nbehaveTotalHerbLoad, // 96\nbehaveDead1Load, // 97\nbehaveDead10Load, // 98\nbehaveDead100Load, // 99\nbehaveLiveStemLoad, // 100\nbehaveDead1Savr, // 101\nbehaveLiveHerbSavr, // 102\nbehaveLiveStemSavr, // 103\nbehaveDeadHeat, // 104\nbehaveLiveHeat, // 105\ndeadHerbLoad, // 106\nliveHerbLoad, // 107\nchaparralFuelType, // 108\nchaparralDeadFraction, // 109\nchaparralDepth, // 110\nchaparralTotalLoad, // 111\nage, // 112\ndeadFractionAverageMortality, // 113\ndeadFractionSevereMortality, // 114\nfuelDepth, // 115\ntotalLoad, // 116\ndeadLoad, // 117\ndeadClass1Load, // 118\ndeadClass2Load, // 119\ndeadClass3Load, // 120\ndeadClass4Load, // 121\nliveLoad, // 122\nliveClass1Load, // 123\nliveClass2Load, // 124\nliveClass3Load, // 125\nliveClass4Load, // 126\nliveClass5Load, // 127\npalmettoGallberryAge, // 128\npalmettoGallberryBasalArea, // 129\npalmettoGallberryCover, // 130\npalmettoGallberryHeight, // 131\nfuelDepth$1, // 132\ndeadFineLoad, // 133\ndeadSmallLoad, // 134\ndeadFoliageLoad, // 135\ndeadLitterLoad, // 136\nliveFineLoad, // 137\nliveSmallLoad, // 138\nliveFoliageLoad, // 139\nwesternAspenFuelType, // 140\nwesternAspenCuringLevel, // 141\ndepth, // 142\ndeadFineLoad$1, // 143\ndeadSmallLoad$1, // 144\ndeadFineSavr, // 145\nliveHerbLoad$1, // 146\nliveStemLoad, // 147\nliveStemSavr, // 148\nMath.max, // 149\nor, // 150\narithmeticMeanSpreadRate, // 151\nexpectedValueSpreadRateMOCK, // 152\nharmonicMeanSpreadRate, // 153\neccentricity, // 154\nmajorSpreadRate, // 155\nminorSpreadRate, // 156\nfSpreadRate, // 157\ngSpreadRate, // 158\nhSpreadRate, // 159\narea$1, // 160\nspreadDistance, // 161\nperimeter$1, // 162\nmapArea, // 163\nfliAtAzimuth, // 164\nbackingSpreadRate, // 165\nmortalityRate, // 166\nflankingSpreadRate, // 167\npsiSpreadRate, // 168\nbetaSpreadRate, // 169\nthetaFromBeta, // 170\npsiFromTheta, // 171\ncriticalCoverHeight, // 172\nburningPileFirebrandHeight, // 173\ndistanceFlatTerrain, // 174\ndistanceFlatTerrainWithDrift, // 175\ndistanceMountainTerrain, // 176\nzdrop, // 177\nxdrift, // 178\nxdrop, // 179\nxspot, // 180\nfirelineIntensityThomas, // 181\nflatDistance, // 182\nsurfaceFireFirebrandHeight, // 183\nsurfaceFireFirebrandDrift, // 184\ntorchingTreesFirebrandHeight, // 185\ntorchingTreesSteadyFlameHeight, // 186\ntorchingTreesSteadyFlameDuration, // 187\ncrownLengthScorched, // 188\ncrownVolumeScorched, // 189\narea, // 190\nperimeter, // 191\nlengthToWidthRatio, // 192\nrActive, // 193\nfliActive, // 194\nflameLengthThomas, // 195\nhpuaActive, // 196\npowerOfTheFire, // 197\npowerOfTheWind, // 198\nisPlumeDominated, // 199\nisWindDriven, // 200\nrSa, // 201\ncrownFractionBurned, // 202\nrFinal, // 203\nfliFinal, // 204\nfliInit, // 205\nrInit, // 206\nrPrimeActive, // 207\ntransitionRatio, // 208\ncanTransition, // 209\nactiveRatio, // 210\ntype, // 211\nisActive, // 212\nisCrown, // 213\nisPassive, // 214\nisConditional, // 215\nisSurface, // 216\noActive, // 217\ncrowningIndex // 218\n] // Array of Node Variant class (constructor) references\n\nconst variantClass = [ConfigModuleActive, // 0\nConfigLinkSurfaceFire, // 1\nConfigLinkCrownFire, // 2\nConfigLinkFireEllipse, // 3\nConfigLinkScorchHeight, // 4\nConfigPrimaryFuels, // 5\nConfigSecondaryFuels, // 6\nConfigMoistureContents, // 7\nConfigWindSpeedAdjustmentFactor, // 8\nConfigCuredHerbFraction, // 9\nConfigChaparralTotalLoad, // 10\nConfigSlopeSteepness, // 11\nConfigWindDirection, // 12\nConfigWindSpeed, // 13\nConfigFirelineIntensity, // 14\nConfigFireLengthToWidthRatio, // 15\nConfigEffectiveWindSpeedLimit, // 16\nConfigFireWeightingMethod, // 17\nConfigFireVector, // 18\nDocumentation, // 19\nIgnitionProbability, // 20\nIgnitionLightningChargeOption, // 21\nIgnitionFuelDepth, // 22\nIgnitionFuelTypeOption, // 23\nFuelCoverFraction, // 24\nTreeHeight, // 25\nCrownFillFraction, // 26\nCrownRatioFraction, // 27\nFireHeatPerUnitArea, // 28\nFuelBedBulkDensity, // 29\nFuelMoistureContent, // 30\nFuelHeatOfCombustion, // 31\nBool, // 32\nFuelOvendryLoad, // 33\nWindSpeedAdjustmentFactor, // 34\nTreeBarkThickness, // 35\nTreeDbh, // 36\nTreeSpeciesFofem6Option, // 37\nWindSpeed, // 38\nFireFirelineIntensity, // 39\nFireFlameLength, // 40\nCompassAzimuth, // 41\nFireLengthToWidthRatio, // 42\nFireSpreadRate, // 43\nFireScorchHeight, // 44\nFireElapsedTime, // 45\nMapScale, // 46\nMapContoursCount, // 47\nFireSpreadDistance, // 48\nMapFactor, // 49\nSlopeSteepness, // 50\nAirTemperature, // 51\nFuelParticleFiberDensity, // 52\nFuelSurfaceAreaToVolumeRatio, // 53\nFuelEffectiveMineralContent, // 54\nFuelTotalMineralContent, // 55\nFuelEffectiveHeatingNumber, // 56\nFuelHeatOfPreignition, // 57\nFuelSizeClassIndex, // 58\nWeightingFactor, // 59\nFuelSurfaceArea, // 60\nFuelVolume, // 61\nFireDampingCoefficient, // 62\nFactor, // 63\nFuelBedDepth, // 64\nFireReactionIntensity, // 65\nFuelBedHeatOfPreignition, // 66\nFuelHeatSink, // 67\nFuelBedPackingRatio, // 68\nFirePropagatingFluxRatio, // 69\nFireReactionVelocity, // 70\nFireResidenceTime, // 71\nFuelModelDomainOption, // 72\nFuelModelKeyOption, // 73\nFuelDeadFraction, // 74\nChaparralTypeOption, // 75\nFuelAge, // 76\nMortalityFraction, // 77\nFuelBasalArea, // 78\nWesternAspenTypeOption, // 79\nFireArea, // 80\nMapArea, // 81\nMapDistance, // 82\nSpottingSourceLocationOption, // 83\nFireSpotDistance, // 84\nSpottingFirebrandObject, // 85\nTorchingTreeSpeciesOption, // 86\nTreeCount, // 87\nFireFlameDuration, // 88\nFirePower, // 89\nFirePowerRatio, // 90\nCrownFireBurnedFraction, // 91\nCrownTransitionRatio, // 92\nCrownFireActiveRatio, // 93\nCrownFireInitiationTypeOption // 94\n] // Map of Node keys => indices\n\nconst map = new Map([[\"module.surfaceFire\", 0], [\"module.surfaceSpot\", 1], [\"module.crownFire\", 2], [\"module.crownSpot\", 3], [\"module.fireEllipse\", 4], [\"module.fireContain\", 5], [\"module.\".concat(sh), 6], [\"module.\".concat(tm), 7], [\"module.spotting\", 8], [\"module.\".concat(ig, \"Probability\"), 9], [\"link.crownFire\", 10], [\"link.crownSpot\", 11], [\"link.fireContain\", 12], [\"link.fireEllipse\", 13], [\"link.\".concat(sh), 14], [\"link.surfaceSpot\", 15], [\"link.\".concat(tm), 16], [\"\".concat(cfg, \".fuel.primary\"), 17], [\"\".concat(cfg, \".fuel.secondary\"), 18], [\"\".concat(cfg, \".fuel.moisture\"), 19], [\"\".concat(cfg, \".fuel.\").concat(waf), 20], [\"\".concat(cfg, \".fuel.curedHerbFraction\"), 21], [\"\".concat(cfg, \".fuel.chaparralTotalLoad\"), 22], [\"\".concat(cfg, \".slope.steepness\"), 23], [\"\".concat(cfg, \".wind.direction\"), 24], [\"\".concat(cfg, \".wind.speed\"), 25], [\"\".concat(cfg, \".fire.\").concat(fli), 26], [\"\".concat(cfg, \".fire.\").concat(lwr), 27], [\"\".concat(cfg, \".fire.\").concat(ew, \"Limit\"), 28], [\"\".concat(cfg, \".fire.weightingMethod\"), 29], [\"\".concat(cfg, \".fire.vector\"), 30], [\"\".concat(dr, \".mainTitle\"), 31], [\"\".concat(dr, \".subTitle\"), 32], [\"\".concat(dr, \".description\"), 33], [\"\".concat(dr, \".userName\"), 34], [\"\".concat(ig, \".firebrand.\").concat(pr), 35], [\"\".concat(ils, \".charge\"), 36], [\"\".concat(ils, \".fuel.depth\"), 37], [\"\".concat(ils, \".fuel.type\"), 38], [\"\".concat(ils, \".\").concat(pr), 39], [\"\".concat(xc, \".cover\"), 40], [\"\".concat(xc, \".crown.baseHeight\"), 41], [\"\".concat(xc, \".crown.fill\"), 42], [\"\".concat(xc, \".crown.length\"), 43], [\"\".concat(xc, \".crown.ratio\"), 44], [\"\".concat(xc, \".crown.totalHeight\"), 45], [\"\".concat(xc, \".fire.\").concat(hpa), 46], [\"\".concat(xc, \".fuel.bulkDensity\"), 47], [\"\".concat(xc, \".fuel.foliar.\").concat(mc), 48], [\"\".concat(xc, \".fuel.\").concat(hc), 49], [\"\".concat(xc, \".fuel.isSheltered\"), 50], [\"\".concat(xc, \".fuel.\").concat(ol), 51], [\"\".concat(xc, \".fuel.shading\"), 52], [\"\".concat(xc, \".sheltered.\").concat(waf), 53], [\"\".concat(xc, \".downwind.height\"), 54], [\"\".concat(xc, \".downwind.isOpen\"), 55], [\"\".concat(xc, \".downwind.appliedHeight\"), 56], [\"\".concat(xc, \".tree.barkThickness\"), 57], [\"\".concat(xc, \".tree.dbh\"), 58], [\"\".concat(xc, \".tree.species.fofem6.code\"), 59], [\"\".concat(xfo, \".\").concat(ew), 60], [\"\".concat(xfo, \".\").concat(fli), 61], [\"\".concat(xfo, \".\").concat(fl), 62], [\"\".concat(xfo, \".\").concat(hup), 63], [\"\".concat(xfo, \".\").concat(hno), 64], [\"\".concat(xfo, \".\").concat(hpa), 65], [\"\".concat(xfo, \".\").concat(lwr), 66], [\"\".concat(xfo, \".\").concat(ros), 67], [\"\".concat(xfo, \".\").concat(sh), 68], [\"\".concat(xf, \".crown.\").concat(fl), 69], [\"\".concat(xf, \".time.sinceIgnition\"), 70], [\"\".concat(xf, \".vector.fromHead\"), 71], [\"\".concat(xf, \".vector.fromNorth\"), 72], [\"\".concat(xf, \".vector.fromUpslope\"), 73], [\"\".concat(sm, \".scale\"), 74], [\"\".concat(sm, \".contours\"), 75], [\"\".concat(sm, \".distance\"), 76], [\"\".concat(sm, \".factor\"), 77], [\"\".concat(sm, \".interval\"), 78], [\"\".concat(sm, \".reach\"), 79], [\"\".concat(sm, \".rise\"), 80], [\"\".concat(sm, \".slope.ratio\"), 81], [\"\".concat(sm, \".slope.degrees\"), 82], [\"\".concat(xm, \".dead.tl1h\"), 83], [\"\".concat(xm, \".dead.tl10h\"), 84], [\"\".concat(xm, \".dead.tl100h\"), 85], [\"\".concat(xm, \".dead.category\"), 86], [\"\".concat(xm, \".live.herb\"), 87], [\"\".concat(xm, \".live.stem\"), 88], [\"\".concat(xm, \".live.category\"), 89], [\"\".concat(xs, \".direction.aspect\"), 90], [\"\".concat(xs, \".direction.upslope\"), 91], [\"\".concat(xs, \".steepness.degrees\"), 92], [\"\".concat(xs, \".steepness.ratio\"), 93], [\"\".concat(xt, \".air\"), 94], [\"\".concat(xt, \".fuel\"), 95], [\"\".concat(xwd, \".\").concat(hup), 96], [\"\".concat(xwd, \".source.fromUpslope\"), 97], [\"\".concat(xwd, \".source.fromNorth\"), 98], [\"\".concat(xwd, \".\").concat(hno), 99], [\"\".concat(xws, \".at10m\"), 100], [\"\".concat(xws, \".at20ft\"), 101], [\"\".concat(x, \".\").concat(wsm), 102], [\"\".concat(x, \".\").concat(waf), 103], [\"\".concat(spfbdpc, \"1.\").concat(fd), 104], [\"\".concat(spfbdpc, \"1.\").concat(hc), 105], [\"\".concat(spfbdpc, \"1.\").concat(ol), 106], [\"\".concat(spfbdpc, \"1.\").concat(mc), 107], [\"\".concat(spfbdpc, \"1.\").concat(savr), 108], [\"\".concat(spfbdpc, \"1.\").concat(emc), 109], [\"\".concat(spfbdpc, \"1.\").concat(tmc), 110], [\"\".concat(spfbdpc, \"1.\").concat(ef, \".\").concat(hn), 111], [\"\".concat(spfbdpc, \"1.\").concat(ef, \".\").concat(ol), 112], [\"\".concat(spfbdpc, \"1.\").concat(hp), 113], [\"\".concat(spfbdpc, \"1.\").concat(nol), 114], [\"\".concat(spfbdpc, \"1.\").concat(sc), 115], [\"\".concat(spfbdpc, \"1.\").concat(sc, \".\").concat(wf), 116], [\"\".concat(spfbdpc, \"1.\").concat(sa), 117], [\"\".concat(spfbdpc, \"1.\").concat(sa, \".\").concat(wf), 118], [\"\".concat(spfbdpc, \"1.\").concat(vol), 119], [\"\".concat(spfbdpc, \"1.\").concat(ef, \".\").concat(wl), 120], [\"\".concat(spfbdpc, \"2.\").concat(fd), 121], [\"\".concat(spfbdpc, \"2.\").concat(hc), 122], [\"\".concat(spfbdpc, \"2.\").concat(ol), 123], [\"\".concat(spfbdpc, \"2.\").concat(mc), 124], [\"\".concat(spfbdpc, \"2.\").concat(savr), 125], [\"\".concat(spfbdpc, \"2.\").concat(emc), 126], [\"\".concat(spfbdpc, \"2.\").concat(tmc), 127], [\"\".concat(spfbdpc, \"2.\").concat(ef, \".\").concat(hn), 128], [\"\".concat(spfbdpc, \"2.\").concat(ef, \".\").concat(ol), 129], [\"\".concat(spfbdpc, \"2.\").concat(hp), 130], [\"\".concat(spfbdpc, \"2.\").concat(nol), 131], [\"\".concat(spfbdpc, \"2.\").concat(sc), 132], [\"\".concat(spfbdpc, \"2.\").concat(sc, \".\").concat(wf), 133], [\"\".concat(spfbdpc, \"2.\").concat(sa), 134], [\"\".concat(spfbdpc, \"2.\").concat(sa, \".\").concat(wf), 135], [\"\".concat(spfbdpc, \"2.\").concat(vol), 136], [\"\".concat(spfbdpc, \"2.\").concat(ef, \".\").concat(wl), 137], [\"\".concat(spfbdpc, \"3.\").concat(fd), 138], [\"\".concat(spfbdpc, \"3.\").concat(hc), 139], [\"\".concat(spfbdpc, \"3.\").concat(ol), 140], [\"\".concat(spfbdpc, \"3.\").concat(mc), 141], [\"\".concat(spfbdpc, \"3.\").concat(savr), 142], [\"\".concat(spfbdpc, \"3.\").concat(emc), 143], [\"\".concat(spfbdpc, \"3.\").concat(tmc), 144], [\"\".concat(spfbdpc, \"3.\").concat(ef, \".\").concat(hn), 145], [\"\".concat(spfbdpc, \"3.\").concat(ef, \".\").concat(ol), 146], [\"\".concat(spfbdpc, \"3.\").concat(hp), 147], [\"\".concat(spfbdpc, \"3.\").concat(nol), 148], [\"\".concat(spfbdpc, \"3.\").concat(sc), 149], [\"\".concat(spfbdpc, \"3.\").concat(sc, \".\").concat(wf), 150], [\"\".concat(spfbdpc, \"3.\").concat(sa), 151], [\"\".concat(spfbdpc, \"3.\").concat(sa, \".\").concat(wf), 152], [\"\".concat(spfbdpc, \"3.\").concat(vol), 153], [\"\".concat(spfbdpc, \"3.\").concat(ef, \".\").concat(wl), 154], [\"\".concat(spfbdpc, \"4.\").concat(fd), 155], [\"\".concat(spfbdpc, \"4.\").concat(hc), 156], [\"\".concat(spfbdpc, \"4.\").concat(ol), 157], [\"\".concat(spfbdpc, \"4.\").concat(mc), 158], [\"\".concat(spfbdpc, \"4.\").concat(savr), 159], [\"\".concat(spfbdpc, \"4.\").concat(emc), 160], [\"\".concat(spfbdpc, \"4.\").concat(tmc), 161], [\"\".concat(spfbdpc, \"4.\").concat(ef, \".\").concat(hn), 162], [\"\".concat(spfbdpc, \"4.\").concat(ef, \".\").concat(ol), 163], [\"\".concat(spfbdpc, \"4.\").concat(hp), 164], [\"\".concat(spfbdpc, \"4.\").concat(nol), 165], [\"\".concat(spfbdpc, \"4.\").concat(sc), 166], [\"\".concat(spfbdpc, \"4.\").concat(sc, \".\").concat(wf), 167], [\"\".concat(spfbdpc, \"4.\").concat(sa), 168], [\"\".concat(spfbdpc, \"4.\").concat(sa, \".\").concat(wf), 169], [\"\".concat(spfbdpc, \"4.\").concat(vol), 170], [\"\".concat(spfbdpc, \"4.\").concat(ef, \".\").concat(wl), 171], [\"\".concat(spfbdpc, \"5.\").concat(fd), 172], [\"\".concat(spfbdpc, \"5.\").concat(hc), 173], [\"\".concat(spfbdpc, \"5.\").concat(ol), 174], [\"\".concat(spfbdpc, \"5.\").concat(mc), 175], [\"\".concat(spfbdpc, \"5.\").concat(savr), 176], [\"\".concat(spfbdpc, \"5.\").concat(emc), 177], [\"\".concat(spfbdpc, \"5.\").concat(tmc), 178], [\"\".concat(spfbdpc, \"5.\").concat(ef, \".\").concat(hn), 179], [\"\".concat(spfbdpc, \"5.\").concat(ef, \".\").concat(ol), 180], [\"\".concat(spfbdpc, \"5.\").concat(hp), 181], [\"\".concat(spfbdpc, \"5.\").concat(nol), 182], [\"\".concat(spfbdpc, \"5.\").concat(sc), 183], [\"\".concat(spfbdpc, \"5.\").concat(sc, \".\").concat(wf), 184], [\"\".concat(spfbdpc, \"5.\").concat(sa), 185], [\"\".concat(spfbdpc, \"5.\").concat(sa, \".\").concat(wf), 186], [\"\".concat(spfbdpc, \"5.\").concat(vol), 187], [\"\".concat(spfbdpc, \"5.\").concat(ef, \".\").concat(wl), 188], [\"\".concat(spfblpc, \"1.\").concat(fd), 189], [\"\".concat(spfblpc, \"1.\").concat(hc), 190], [\"\".concat(spfblpc, \"1.\").concat(ol), 191], [\"\".concat(spfblpc, \"1.\").concat(mc), 192], [\"\".concat(spfblpc, \"1.\").concat(savr), 193], [\"\".concat(spfblpc, \"1.\").concat(emc), 194], [\"\".concat(spfblpc, \"1.\").concat(tmc), 195], [\"\".concat(spfblpc, \"1.\").concat(ef, \".\").concat(hn), 196], [\"\".concat(spfblpc, \"1.\").concat(ef, \".\").concat(ol), 197], [\"\".concat(spfblpc, \"1.\").concat(hp), 198], [\"\".concat(spfblpc, \"1.\").concat(nol), 199], [\"\".concat(spfblpc, \"1.\").concat(sc), 200], [\"\".concat(spfblpc, \"1.\").concat(sc, \".\").concat(wf), 201], [\"\".concat(spfblpc, \"1.\").concat(sa), 202], [\"\".concat(spfblpc, \"1.\").concat(sa, \".\").concat(wf), 203], [\"\".concat(spfblpc, \"1.\").concat(vol), 204], [\"\".concat(spfblpc, \"2.\").concat(fd), 205], [\"\".concat(spfblpc, \"2.\").concat(hc), 206], [\"\".concat(spfblpc, \"2.\").concat(ol), 207], [\"\".concat(spfblpc, \"2.\").concat(mc), 208], [\"\".concat(spfblpc, \"2.\").concat(savr), 209], [\"\".concat(spfblpc, \"2.\").concat(emc), 210], [\"\".concat(spfblpc, \"2.\").concat(tmc), 211], [\"\".concat(spfblpc, \"2.\").concat(ef, \".\").concat(hn), 212], [\"\".concat(spfblpc, \"2.\").concat(ef, \".\").concat(ol), 213], [\"\".concat(spfblpc, \"2.\").concat(hp), 214], [\"\".concat(spfblpc, \"2.\").concat(nol), 215], [\"\".concat(spfblpc, \"2.\").concat(sc), 216], [\"\".concat(spfblpc, \"2.\").concat(sc, \".\").concat(wf), 217], [\"\".concat(spfblpc, \"2.\").concat(sa), 218], [\"\".concat(spfblpc, \"2.\").concat(sa, \".\").concat(wf), 219], [\"\".concat(spfblpc, \"2.\").concat(vol), 220], [\"\".concat(spfblpc, \"3.\").concat(fd), 221], [\"\".concat(spfblpc, \"3.\").concat(hc), 222], [\"\".concat(spfblpc, \"3.\").concat(ol), 223], [\"\".concat(spfblpc, \"3.\").concat(mc), 224], [\"\".concat(spfblpc, \"3.\").concat(savr), 225], [\"\".concat(spfblpc, \"3.\").concat(emc), 226], [\"\".concat(spfblpc, \"3.\").concat(tmc), 227], [\"\".concat(spfblpc, \"3.\").concat(ef, \".\").concat(hn), 228], [\"\".concat(spfblpc, \"3.\").concat(ef, \".\").concat(ol), 229], [\"\".concat(spfblpc, \"3.\").concat(hp), 230], [\"\".concat(spfblpc, \"3.\").concat(nol), 231], [\"\".concat(spfblpc, \"3.\").concat(sc), 232], [\"\".concat(spfblpc, \"3.\").concat(sc, \".\").concat(wf), 233], [\"\".concat(spfblpc, \"3.\").concat(sa), 234], [\"\".concat(spfblpc, \"3.\").concat(sa, \".\").concat(wf), 235], [\"\".concat(spfblpc, \"3.\").concat(vol), 236], [\"\".concat(spfblpc, \"4.\").concat(fd), 237], [\"\".concat(spfblpc, \"4.\").concat(hc), 238], [\"\".concat(spfblpc, \"4.\").concat(ol), 239], [\"\".concat(spfblpc, \"4.\").concat(mc), 240], [\"\".concat(spfblpc, \"4.\").concat(savr), 241], [\"\".concat(spfblpc, \"4.\").concat(emc), 242], [\"\".concat(spfblpc, \"4.\").concat(tmc), 243], [\"\".concat(spfblpc, \"4.\").concat(ef, \".\").concat(hn), 244], [\"\".concat(spfblpc, \"4.\").concat(ef, \".\").concat(ol), 245], [\"\".concat(spfblpc, \"4.\").concat(hp), 246], [\"\".concat(spfblpc, \"4.\").concat(nol), 247], [\"\".concat(spfblpc, \"4.\").concat(sc), 248], [\"\".concat(spfblpc, \"4.\").concat(sc, \".\").concat(wf), 249], [\"\".concat(spfblpc, \"4.\").concat(sa), 250], [\"\".concat(spfblpc, \"4.\").concat(sa, \".\").concat(wf), 251], [\"\".concat(spfblpc, \"4.\").concat(vol), 252], [\"\".concat(spfblpc, \"5.\").concat(fd), 253], [\"\".concat(spfblpc, \"5.\").concat(hc), 254], [\"\".concat(spfblpc, \"5.\").concat(ol), 255], [\"\".concat(spfblpc, \"5.\").concat(mc), 256], [\"\".concat(spfblpc, \"5.\").concat(savr), 257], [\"\".concat(spfblpc, \"5.\").concat(emc), 258], [\"\".concat(spfblpc, \"5.\").concat(tmc), 259], [\"\".concat(spfblpc, \"5.\").concat(ef, \".\").concat(hn), 260], [\"\".concat(spfblpc, \"5.\").concat(ef, \".\").concat(ol), 261], [\"\".concat(spfblpc, \"5.\").concat(hp), 262], [\"\".concat(spfblpc, \"5.\").concat(nol), 263], [\"\".concat(spfblpc, \"5.\").concat(sc), 264], [\"\".concat(spfblpc, \"5.\").concat(sc, \".\").concat(wf), 265], [\"\".concat(spfblpc, \"5.\").concat(sa), 266], [\"\".concat(spfblpc, \"5.\").concat(sa, \".\").concat(wf), 267], [\"\".concat(spfblpc, \"5.\").concat(vol), 268], [\"\".concat(spfbd, \".\").concat(sa), 269], [\"\".concat(spfbd, \".\").concat(sa, \".\").concat(wf), 270], [\"\".concat(spfbd, \".\").concat(etas), 271], [\"\".concat(spfbd, \".\").concat(etam), 272], [\"\".concat(spfbd, \".\").concat(hc), 273], [\"\".concat(spfbd, \".\").concat(ol), 274], [\"\".concat(spfbd, \".\").concat(ef, \".\").concat(ol), 275], [\"\".concat(spfbd, \".\").concat(ext, \".\").concat(mc), 276], [\"\".concat(spfbd, \".\").concat(ext, \".\").concat(mc, \"Factor\"), 277], [\"\".concat(spfbd, \".\").concat(mc), 278], [\"\".concat(spfbd, \".\").concat(vol), 279], [\"\".concat(spfbd, \".\").concat(hp), 280], [\"\".concat(spfbd, \".\").concat(rxi), 281], [\"\".concat(spfbd, \".\").concat(rxi, \"Dry\"), 282], [\"\".concat(spfbd, \".\").concat(savr), 283], [\"\".concat(spfbd, \".\").concat(emc), 284], [\"\".concat(spfbd, \".\").concat(sc, \".\").concat(wf), 285], [\"\".concat(spfbd, \".\").concat(nol), 286], [\"\".concat(spfbd, \".\").concat(ef, \".\").concat(wl), 287], [\"\".concat(spfbd, \".\").concat(ef, \".\").concat(mc), 288], [\"\".concat(spfbl, \".\").concat(sa), 289], [\"\".concat(spfbl, \".\").concat(sa, \".\").concat(wf), 290], [\"\".concat(spfbl, \".\").concat(etas), 291], [\"\".concat(spfbl, \".\").concat(etam), 292], [\"\".concat(spfbl, \".\").concat(hc), 293], [\"\".concat(spfbl, \".\").concat(ol), 294], [\"\".concat(spfbl, \".\").concat(ef, \".\").concat(ol), 295], [\"\".concat(spfbl, \".\").concat(ext, \".\").concat(mc), 296], [\"\".concat(spfbl, \".\").concat(ext, \".\").concat(mc, \"Factor\"), 297], [\"\".concat(spfbl, \".\").concat(mc), 298], [\"\".concat(spfbl, \".\").concat(vol), 299], [\"\".concat(spfbl, \".\").concat(hp), 300], [\"\".concat(spfbl, \".\").concat(rxi), 301], [\"\".concat(spfbl, \".\").concat(rxi, \"Dry\"), 302], [\"\".concat(spfbl, \".\").concat(savr), 303], [\"\".concat(spfbl, \".\").concat(emc), 304], [\"\".concat(spfbl, \".\").concat(sc, \".\").concat(wf), 305], [\"\".concat(spfbl, \".\").concat(nol), 306], [\"\".concat(spfb, \".depth\"), 307], [\"\".concat(spfb, \".bulkDensity\"), 308], [\"\".concat(spfb, \".\").concat(hp), 309], [\"\".concat(spfb, \".heatSink\"), 310], [\"\".concat(spfb, \".noWindNoSlope.\").concat(ros), 311], [\"\".concat(spfb, \".\").concat(ol), 312], [\"\".concat(spfb, \".open.\").concat(waf), 313], [\"\".concat(spfb, \".\").concat(beta), 314], [\"\".concat(spfb, \".\").concat(beta, \".optimum\"), 315], [\"\".concat(spfb, \".\").concat(beta, \".ratio\"), 316], [\"\".concat(spfb, \".\").concat(gamma), 317], [\"\".concat(spfb, \".\").concat(rxi), 318], [\"\".concat(spfb, \".\").concat(rxv, \"Exponent\"), 319], [\"\".concat(spfb, \".\").concat(rxv, \"Maximum\"), 320], [\"\".concat(spfb, \".\").concat(rxv, \"Optimum\"), 321], [\"\".concat(spfb, \".\").concat(savr), 322], [\"\".concat(spfb, \".savr15\"), 323], [\"\".concat(spfb, \".\").concat(sa), 324], [\"\".concat(spff, \".\").concat(maxDir, \".slope.\").concat(ros), 325], [\"\".concat(spff, \".\").concat(maxDir, \".wind.\").concat(ros), 326], [\"\".concat(spff, \".wind.\").concat(hup), 327], [\"\".concat(spff, \".\").concat(maxDir, \".xComponent\"), 328], [\"\".concat(spff, \".\").concat(maxDir, \".yComponent\"), 329], [\"\".concat(spff, \".\").concat(maxDir, \".\").concat(ros), 330], [\"\".concat(spff, \".limit.\").concat(ew, \".exceeded\"), 331], [\"\".concat(spff, \".limit.\").concat(ros, \".exceeded\"), 332], [\"\".concat(spff, \".limit.\").concat(ew), 333], [\"\".concat(spff, \".limit.\").concat(phi), 334], [\"\".concat(spff, \".limit.\").concat(ros), 335], [\"\".concat(spff, \".slope.ratio\"), 336], [\"\".concat(spff, \".slope.k\"), 337], [\"\".concat(spff, \".\").concat(phis), 338], [\"\".concat(spffss, \"1.\").concat(ew), 339], [\"\".concat(spffss, \"1.\").concat(phiew), 340], [\"\".concat(spffss, \"1.\").concat(ros), 341], [\"\".concat(spffss, \"2.\").concat(ew), 342], [\"\".concat(spffss, \"2.\").concat(phiew), 343], [\"\".concat(spffss, \"2.\").concat(ros), 344], [\"\".concat(spffss, \"3a.\").concat(ew), 345], [\"\".concat(spffss, \"3a.\").concat(phiew), 346], [\"\".concat(spffss, \"3a.\").concat(ros), 347], [\"\".concat(spffss, \"3b.\").concat(ew), 348], [\"\".concat(spffss, \"3b.\").concat(phiew), 349], [\"\".concat(spffss, \"3b.\").concat(ros), 350], [\"\".concat(spffss, \"4.\").concat(ew), 351], [\"\".concat(spffss, \"4.\").concat(phiew), 352], [\"\".concat(spffss, \"4.\").concat(ros), 353], [\"\".concat(spff, \".\").concat(waf), 354], [\"\".concat(spff, \".\").concat(wsm), 355], [\"\".concat(spff, \".\").concat(wb), 356], [\"\".concat(spff, \".\").concat(wc), 357], [\"\".concat(spff, \".\").concat(we), 358], [\"\".concat(spff, \".\").concat(wk), 359], [\"\".concat(spff, \".\").concat(wi), 360], [\"\".concat(spff, \".\").concat(phiw), 361], [\"\".concat(spff, \".\").concat(ew), 362], [\"\".concat(spff, \".\").concat(fli), 363], [\"\".concat(spff, \".\").concat(fl), 364], [\"\".concat(spff, \".\").concat(taur$1), 365], [\"\".concat(spff, \".\").concat(hup), 366], [\"\".concat(spff, \".\").concat(hno), 367], [\"\".concat(spff, \".\").concat(hpa), 368], [\"\".concat(spff, \".\").concat(lwr), 369], [\"\".concat(spff, \".\").concat(phiew), 370], [\"\".concat(spff, \".\").concat(rxi), 371], [\"\".concat(spff, \".\").concat(sh), 372], [\"\".concat(spffs, \"Rate\"), 373], [\"\".concat(spff, \".noWindNoSlope.\").concat(ros), 374], [\"\".concat(spfm, \".domain\"), 375], [\"\".concat(spfm, \".catalogKey\"), 376], [\"\".concat(spfmb, \".domain\"), 377], [\"\".concat(spfmbp, \".\").concat(chf), 378], [\"\".concat(spfmbp, \".depth\"), 379], [\"\".concat(spfmbp, \".dead.\").concat(ext, \".\").concat(mc), 380], [\"\".concat(spfmbp, \".total.herb.\").concat(ol), 381], [\"\".concat(spfmbp, \".dead.tl1h.\").concat(ol), 382], [\"\".concat(spfmbp, \".dead.tl10h.\").concat(ol), 383], [\"\".concat(spfmbp, \".dead.tl100h.\").concat(ol), 384], [\"\".concat(spfmbp, \".live.stem.\").concat(ol), 385], [\"\".concat(spfmbp, \".dead.tl1h.\").concat(savr), 386], [\"\".concat(spfmbp, \".live.herb.\").concat(savr), 387], [\"\".concat(spfmbp, \".live.stem.\").concat(savr), 388], [\"\".concat(spfmbp, \".dead.\").concat(hc), 389], [\"\".concat(spfmbp, \".live.\").concat(hc), 390], [\"\".concat(spfmbd, \".dead.herb.\").concat(ol), 391], [\"\".concat(spfmbd, \".live.herb.\").concat(ol), 392], [\"\".concat(spfmc, \".domain\"), 393], [\"\".concat(spfmcp, \".chaparralType\"), 394], [\"\".concat(spfmcp, \".\").concat(obs, \".deadFuelFraction\"), 395], [\"\".concat(spfmcp, \".\").concat(obs, \".depth\"), 396], [\"\".concat(spfmcp, \".\").concat(obs, \".totalLoad\"), 397], [\"\".concat(spfmcp, \".applied.totalLoad\"), 398], [\"\".concat(spfmcd, \".age\"), 399], [\"\".concat(spfmcd, \".averageMortality\"), 400], [\"\".concat(spfmcd, \".severeMortality\"), 401], [\"\".concat(spfmcd, \".depth\"), 402], [\"\".concat(spfmcd, \".totalLoad\"), 403], [\"\".concat(spfmcd, \".deadLoad\"), 404], [\"\".concat(spfmcd, \".\").concat(dfl), 405], [\"\".concat(spfmcd, \".\").concat(dsl), 406], [\"\".concat(spfmcd, \".\").concat(dml), 407], [\"\".concat(spfmcd, \".\").concat(dll), 408], [\"\".concat(spfmcd, \".liveLoad\"), 409], [\"\".concat(spfmcd, \".\").concat(lfl), 410], [\"\".concat(spfmcd, \".\").concat(lsl), 411], [\"\".concat(spfmcd, \".\").concat(lml), 412], [\"\".concat(spfmcd, \".\").concat(lll), 413], [\"\".concat(spfmcd, \".liveLeafLoad\"), 414], [\"\".concat(spfmp, \".domain\"), 415], [\"\".concat(spfmpp, \".age\"), 416], [\"\".concat(spfmpp, \".basalArea\"), 417], [\"\".concat(spfmpp, \".cover\"), 418], [\"\".concat(spfmpp, \".height\"), 419], [\"\".concat(spfmpd, \".depth\"), 420], [\"\".concat(spfmpd, \".\").concat(dfl), 421], [\"\".concat(spfmpd, \".\").concat(dsl), 422], [\"\".concat(spfmpd, \".\").concat(dfol), 423], [\"\".concat(spfmpd, \".\").concat(dlit), 424], [\"\".concat(spfmpd, \".\").concat(lfl), 425], [\"\".concat(spfmpd, \".\").concat(lsl), 426], [\"\".concat(spfmpd, \".\").concat(lfol), 427], [\"\".concat(spfmw, \".domain\"), 428], [\"\".concat(spfmwp, \".aspenType\"), 429], [\"\".concat(spfmwp, \".curingLevel\"), 430], [\"\".concat(spfmwd, \".depth\"), 431], [\"\".concat(spfmwd, \".dead.fine.\").concat(ol), 432], [\"\".concat(spfmwd, \".dead.small.\").concat(ol), 433], [\"\".concat(spfmwd, \".dead.fine.\").concat(savr), 434], [\"\".concat(spfmwd, \".live.herb.\").concat(ol), 435], [\"\".concat(spfmwd, \".live.stem.\").concat(ol), 436], [\"\".concat(spfmwd, \".live.stem.\").concat(savr), 437], [\"\".concat(ssfbdpc, \"1.\").concat(fd), 438], [\"\".concat(ssfbdpc, \"1.\").concat(hc), 439], [\"\".concat(ssfbdpc, \"1.\").concat(ol), 440], [\"\".concat(ssfbdpc, \"1.\").concat(mc), 441], [\"\".concat(ssfbdpc, \"1.\").concat(savr), 442], [\"\".concat(ssfbdpc, \"1.\").concat(emc), 443], [\"\".concat(ssfbdpc, \"1.\").concat(tmc), 444], [\"\".concat(ssfbdpc, \"1.\").concat(ef, \".\").concat(hn), 445], [\"\".concat(ssfbdpc, \"1.\").concat(ef, \".\").concat(ol), 446], [\"\".concat(ssfbdpc, \"1.\").concat(hp), 447], [\"\".concat(ssfbdpc, \"1.\").concat(nol), 448], [\"\".concat(ssfbdpc, \"1.\").concat(sc), 449], [\"\".concat(ssfbdpc, \"1.\").concat(sc, \".\").concat(wf), 450], [\"\".concat(ssfbdpc, \"1.\").concat(sa), 451], [\"\".concat(ssfbdpc, \"1.\").concat(sa, \".\").concat(wf), 452], [\"\".concat(ssfbdpc, \"1.\").concat(vol), 453], [\"\".concat(ssfbdpc, \"1.\").concat(ef, \".\").concat(wl), 454], [\"\".concat(ssfbdpc, \"2.\").concat(fd), 455], [\"\".concat(ssfbdpc, \"2.\").concat(hc), 456], [\"\".concat(ssfbdpc, \"2.\").concat(ol), 457], [\"\".concat(ssfbdpc, \"2.\").concat(mc), 458], [\"\".concat(ssfbdpc, \"2.\").concat(savr), 459], [\"\".concat(ssfbdpc, \"2.\").concat(emc), 460], [\"\".concat(ssfbdpc, \"2.\").concat(tmc), 461], [\"\".concat(ssfbdpc, \"2.\").concat(ef, \".\").concat(hn), 462], [\"\".concat(ssfbdpc, \"2.\").concat(ef, \".\").concat(ol), 463], [\"\".concat(ssfbdpc, \"2.\").concat(hp), 464], [\"\".concat(ssfbdpc, \"2.\").concat(nol), 465], [\"\".concat(ssfbdpc, \"2.\").concat(sc), 466], [\"\".concat(ssfbdpc, \"2.\").concat(sc, \".\").concat(wf), 467], [\"\".concat(ssfbdpc, \"2.\").concat(sa), 468], [\"\".concat(ssfbdpc, \"2.\").concat(sa, \".\").concat(wf), 469], [\"\".concat(ssfbdpc, \"2.\").concat(vol), 470], [\"\".concat(ssfbdpc, \"2.\").concat(ef, \".\").concat(wl), 471], [\"\".concat(ssfbdpc, \"3.\").concat(fd), 472], [\"\".concat(ssfbdpc, \"3.\").concat(hc), 473], [\"\".concat(ssfbdpc, \"3.\").concat(ol), 474], [\"\".concat(ssfbdpc, \"3.\").concat(mc), 475], [\"\".concat(ssfbdpc, \"3.\").concat(savr), 476], [\"\".concat(ssfbdpc, \"3.\").concat(emc), 477], [\"\".concat(ssfbdpc, \"3.\").concat(tmc), 478], [\"\".concat(ssfbdpc, \"3.\").concat(ef, \".\").concat(hn), 479], [\"\".concat(ssfbdpc, \"3.\").concat(ef, \".\").concat(ol), 480], [\"\".concat(ssfbdpc, \"3.\").concat(hp), 481], [\"\".concat(ssfbdpc, \"3.\").concat(nol), 482], [\"\".concat(ssfbdpc, \"3.\").concat(sc), 483], [\"\".concat(ssfbdpc, \"3.\").concat(sc, \".\").concat(wf), 484], [\"\".concat(ssfbdpc, \"3.\").concat(sa), 485], [\"\".concat(ssfbdpc, \"3.\").concat(sa, \".\").concat(wf), 486], [\"\".concat(ssfbdpc, \"3.\").concat(vol), 487], [\"\".concat(ssfbdpc, \"3.\").concat(ef, \".\").concat(wl), 488], [\"\".concat(ssfbdpc, \"4.\").concat(fd), 489], [\"\".concat(ssfbdpc, \"4.\").concat(hc), 490], [\"\".concat(ssfbdpc, \"4.\").concat(ol), 491], [\"\".concat(ssfbdpc, \"4.\").concat(mc), 492], [\"\".concat(ssfbdpc, \"4.\").concat(savr), 493], [\"\".concat(ssfbdpc, \"4.\").concat(emc), 494], [\"\".concat(ssfbdpc, \"4.\").concat(tmc), 495], [\"\".concat(ssfbdpc, \"4.\").concat(ef, \".\").concat(hn), 496], [\"\".concat(ssfbdpc, \"4.\").concat(ef, \".\").concat(ol), 497], [\"\".concat(ssfbdpc, \"4.\").concat(hp), 498], [\"\".concat(ssfbdpc, \"4.\").concat(nol), 499], [\"\".concat(ssfbdpc, \"4.\").concat(sc), 500], [\"\".concat(ssfbdpc, \"4.\").concat(sc, \".\").concat(wf), 501], [\"\".concat(ssfbdpc, \"4.\").concat(sa), 502], [\"\".concat(ssfbdpc, \"4.\").concat(sa, \".\").concat(wf), 503], [\"\".concat(ssfbdpc, \"4.\").concat(vol), 504], [\"\".concat(ssfbdpc, \"4.\").concat(ef, \".\").concat(wl), 505], [\"\".concat(ssfbdpc, \"5.\").concat(fd), 506], [\"\".concat(ssfbdpc, \"5.\").concat(hc), 507], [\"\".concat(ssfbdpc, \"5.\").concat(ol), 508], [\"\".concat(ssfbdpc, \"5.\").concat(mc), 509], [\"\".concat(ssfbdpc, \"5.\").concat(savr), 510], [\"\".concat(ssfbdpc, \"5.\").concat(emc), 511], [\"\".concat(ssfbdpc, \"5.\").concat(tmc), 512], [\"\".concat(ssfbdpc, \"5.\").concat(ef, \".\").concat(hn), 513], [\"\".concat(ssfbdpc, \"5.\").concat(ef, \".\").concat(ol), 514], [\"\".concat(ssfbdpc, \"5.\").concat(hp), 515], [\"\".concat(ssfbdpc, \"5.\").concat(nol), 516], [\"\".concat(ssfbdpc, \"5.\").concat(sc), 517], [\"\".concat(ssfbdpc, \"5.\").concat(sc, \".\").concat(wf), 518], [\"\".concat(ssfbdpc, \"5.\").concat(sa), 519], [\"\".concat(ssfbdpc, \"5.\").concat(sa, \".\").concat(wf), 520], [\"\".concat(ssfbdpc, \"5.\").concat(vol), 521], [\"\".concat(ssfbdpc, \"5.\").concat(ef, \".\").concat(wl), 522], [\"\".concat(ssfblpc, \"1.\").concat(fd), 523], [\"\".concat(ssfblpc, \"1.\").concat(hc), 524], [\"\".concat(ssfblpc, \"1.\").concat(ol), 525], [\"\".concat(ssfblpc, \"1.\").concat(mc), 526], [\"\".concat(ssfblpc, \"1.\").concat(savr), 527], [\"\".concat(ssfblpc, \"1.\").concat(emc), 528], [\"\".concat(ssfblpc, \"1.\").concat(tmc), 529], [\"\".concat(ssfblpc, \"1.\").concat(ef, \".\").concat(hn), 530], [\"\".concat(ssfblpc, \"1.\").concat(ef, \".\").concat(ol), 531], [\"\".concat(ssfblpc, \"1.\").concat(hp), 532], [\"\".concat(ssfblpc, \"1.\").concat(nol), 533], [\"\".concat(ssfblpc, \"1.\").concat(sc), 534], [\"\".concat(ssfblpc, \"1.\").concat(sc, \".\").concat(wf), 535], [\"\".concat(ssfblpc, \"1.\").concat(sa), 536], [\"\".concat(ssfblpc, \"1.\").concat(sa, \".\").concat(wf), 537], [\"\".concat(ssfblpc, \"1.\").concat(vol), 538], [\"\".concat(ssfblpc, \"2.\").concat(fd), 539], [\"\".concat(ssfblpc, \"2.\").concat(hc), 540], [\"\".concat(ssfblpc, \"2.\").concat(ol), 541], [\"\".concat(ssfblpc, \"2.\").concat(mc), 542], [\"\".concat(ssfblpc, \"2.\").concat(savr), 543], [\"\".concat(ssfblpc, \"2.\").concat(emc), 544], [\"\".concat(ssfblpc, \"2.\").concat(tmc), 545], [\"\".concat(ssfblpc, \"2.\").concat(ef, \".\").concat(hn), 546], [\"\".concat(ssfblpc, \"2.\").concat(ef, \".\").concat(ol), 547], [\"\".concat(ssfblpc, \"2.\").concat(hp), 548], [\"\".concat(ssfblpc, \"2.\").concat(nol), 549], [\"\".concat(ssfblpc, \"2.\").concat(sc), 550], [\"\".concat(ssfblpc, \"2.\").concat(sc, \".\").concat(wf), 551], [\"\".concat(ssfblpc, \"2.\").concat(sa), 552], [\"\".concat(ssfblpc, \"2.\").concat(sa, \".\").concat(wf), 553], [\"\".concat(ssfblpc, \"2.\").concat(vol), 554], [\"\".concat(ssfblpc, \"3.\").concat(fd), 555], [\"\".concat(ssfblpc, \"3.\").concat(hc), 556], [\"\".concat(ssfblpc, \"3.\").concat(ol), 557], [\"\".concat(ssfblpc, \"3.\").concat(mc), 558], [\"\".concat(ssfblpc, \"3.\").concat(savr), 559], [\"\".concat(ssfblpc, \"3.\").concat(emc), 560], [\"\".concat(ssfblpc, \"3.\").concat(tmc), 561], [\"\".concat(ssfblpc, \"3.\").concat(ef, \".\").concat(hn), 562], [\"\".concat(ssfblpc, \"3.\").concat(ef, \".\").concat(ol), 563], [\"\".concat(ssfblpc, \"3.\").concat(hp), 564], [\"\".concat(ssfblpc, \"3.\").concat(nol), 565], [\"\".concat(ssfblpc, \"3.\").concat(sc), 566], [\"\".concat(ssfblpc, \"3.\").concat(sc, \".\").concat(wf), 567], [\"\".concat(ssfblpc, \"3.\").concat(sa), 568], [\"\".concat(ssfblpc, \"3.\").concat(sa, \".\").concat(wf), 569], [\"\".concat(ssfblpc, \"3.\").concat(vol), 570], [\"\".concat(ssfblpc, \"4.\").concat(fd), 571], [\"\".concat(ssfblpc, \"4.\").concat(hc), 572], [\"\".concat(ssfblpc, \"4.\").concat(ol), 573], [\"\".concat(ssfblpc, \"4.\").concat(mc), 574], [\"\".concat(ssfblpc, \"4.\").concat(savr), 575], [\"\".concat(ssfblpc, \"4.\").concat(emc), 576], [\"\".concat(ssfblpc, \"4.\").concat(tmc), 577], [\"\".concat(ssfblpc, \"4.\").concat(ef, \".\").concat(hn), 578], [\"\".concat(ssfblpc, \"4.\").concat(ef, \".\").concat(ol), 579], [\"\".concat(ssfblpc, \"4.\").concat(hp), 580], [\"\".concat(ssfblpc, \"4.\").concat(nol), 581], [\"\".concat(ssfblpc, \"4.\").concat(sc), 582], [\"\".concat(ssfblpc, \"4.\").concat(sc, \".\").concat(wf), 583], [\"\".concat(ssfblpc, \"4.\").concat(sa), 584], [\"\".concat(ssfblpc, \"4.\").concat(sa, \".\").concat(wf), 585], [\"\".concat(ssfblpc, \"4.\").concat(vol), 586], [\"\".concat(ssfblpc, \"5.\").concat(fd), 587], [\"\".concat(ssfblpc, \"5.\").concat(hc), 588], [\"\".concat(ssfblpc, \"5.\").concat(ol), 589], [\"\".concat(ssfblpc, \"5.\").concat(mc), 590], [\"\".concat(ssfblpc, \"5.\").concat(savr), 591], [\"\".concat(ssfblpc, \"5.\").concat(emc), 592], [\"\".concat(ssfblpc, \"5.\").concat(tmc), 593], [\"\".concat(ssfblpc, \"5.\").concat(ef, \".\").concat(hn), 594], [\"\".concat(ssfblpc, \"5.\").concat(ef, \".\").concat(ol), 595], [\"\".concat(ssfblpc, \"5.\").concat(hp), 596], [\"\".concat(ssfblpc, \"5.\").concat(nol), 597], [\"\".concat(ssfblpc, \"5.\").concat(sc), 598], [\"\".concat(ssfblpc, \"5.\").concat(sc, \".\").concat(wf), 599], [\"\".concat(ssfblpc, \"5.\").concat(sa), 600], [\"\".concat(ssfblpc, \"5.\").concat(sa, \".\").concat(wf), 601], [\"\".concat(ssfblpc, \"5.\").concat(vol), 602], [\"\".concat(ssfbd, \".\").concat(sa), 603], [\"\".concat(ssfbd, \".\").concat(sa, \".\").concat(wf), 604], [\"\".concat(ssfbd, \".\").concat(etas), 605], [\"\".concat(ssfbd, \".\").concat(etam), 606], [\"\".concat(ssfbd, \".\").concat(hc), 607], [\"\".concat(ssfbd, \".\").concat(ol), 608], [\"\".concat(ssfbd, \".\").concat(ef, \".\").concat(ol), 609], [\"\".concat(ssfbd, \".\").concat(ext, \".\").concat(mc), 610], [\"\".concat(ssfbd, \".\").concat(ext, \".\").concat(mc, \"Factor\"), 611], [\"\".concat(ssfbd, \".\").concat(mc), 612], [\"\".concat(ssfbd, \".\").concat(vol), 613], [\"\".concat(ssfbd, \".\").concat(hp), 614], [\"\".concat(ssfbd, \".\").concat(rxi), 615], [\"\".concat(ssfbd, \".\").concat(rxi, \"Dry\"), 616], [\"\".concat(ssfbd, \".\").concat(savr), 617], [\"\".concat(ssfbd, \".\").concat(emc), 618], [\"\".concat(ssfbd, \".\").concat(sc, \".\").concat(wf), 619], [\"\".concat(ssfbd, \".\").concat(nol), 620], [\"\".concat(ssfbd, \".\").concat(ef, \".\").concat(wl), 621], [\"\".concat(ssfbd, \".\").concat(ef, \".\").concat(mc), 622], [\"\".concat(ssfbl, \".\").concat(sa), 623], [\"\".concat(ssfbl, \".\").concat(sa, \".\").concat(wf), 624], [\"\".concat(ssfbl, \".\").concat(etas), 625], [\"\".concat(ssfbl, \".\").concat(etam), 626], [\"\".concat(ssfbl, \".\").concat(hc), 627], [\"\".concat(ssfbl, \".\").concat(ol), 628], [\"\".concat(ssfbl, \".\").concat(ef, \".\").concat(ol), 629], [\"\".concat(ssfbl, \".\").concat(ext, \".\").concat(mc), 630], [\"\".concat(ssfbl, \".\").concat(ext, \".\").concat(mc, \"Factor\"), 631], [\"\".concat(ssfbl, \".\").concat(mc), 632], [\"\".concat(ssfbl, \".\").concat(vol), 633], [\"\".concat(ssfbl, \".\").concat(hp), 634], [\"\".concat(ssfbl, \".\").concat(rxi), 635], [\"\".concat(ssfbl, \".\").concat(rxi, \"Dry\"), 636], [\"\".concat(ssfbl, \".\").concat(savr), 637], [\"\".concat(ssfbl, \".\").concat(emc), 638], [\"\".concat(ssfbl, \".\").concat(sc, \".\").concat(wf), 639], [\"\".concat(ssfbl, \".\").concat(nol), 640], [\"\".concat(ssfb, \".depth\"), 641], [\"\".concat(ssfb, \".bulkDensity\"), 642], [\"\".concat(ssfb, \".\").concat(hp), 643], [\"\".concat(ssfb, \".heatSink\"), 644], [\"\".concat(ssfb, \".noWindNoSlope.\").concat(ros), 645], [\"\".concat(ssfb, \".\").concat(ol), 646], [\"\".concat(ssfb, \".open.\").concat(waf), 647], [\"\".concat(ssfb, \".\").concat(beta), 648], [\"\".concat(ssfb, \".\").concat(beta, \".optimum\"), 649], [\"\".concat(ssfb, \".\").concat(beta, \".ratio\"), 650], [\"\".concat(ssfb, \".\").concat(gamma), 651], [\"\".concat(ssfb, \".\").concat(rxi), 652], [\"\".concat(ssfb, \".\").concat(rxv, \"Exponent\"), 653], [\"\".concat(ssfb, \".\").concat(rxv, \"Maximum\"), 654], [\"\".concat(ssfb, \".\").concat(rxv, \"Optimum\"), 655], [\"\".concat(ssfb, \".\").concat(savr), 656], [\"\".concat(ssfb, \".savr15\"), 657], [\"\".concat(ssfb, \".\").concat(sa), 658], [\"\".concat(ssff, \".\").concat(maxDir, \".slope.\").concat(ros), 659], [\"\".concat(ssff, \".\").concat(maxDir, \".wind.\").concat(ros), 660], [\"\".concat(ssff, \".wind.\").concat(hup), 661], [\"\".concat(ssff, \".\").concat(maxDir, \".xComponent\"), 662], [\"\".concat(ssff, \".\").concat(maxDir, \".yComponent\"), 663], [\"\".concat(ssff, \".\").concat(maxDir, \".\").concat(ros), 664], [\"\".concat(ssff, \".limit.\").concat(ew, \".exceeded\"), 665], [\"\".concat(ssff, \".limit.\").concat(ros, \".exceeded\"), 666], [\"\".concat(ssff, \".limit.\").concat(ew), 667], [\"\".concat(ssff, \".limit.\").concat(phi), 668], [\"\".concat(ssff, \".limit.\").concat(ros), 669], [\"\".concat(ssff, \".slope.ratio\"), 670], [\"\".concat(ssff, \".slope.k\"), 671], [\"\".concat(ssff, \".\").concat(phis), 672], [\"\".concat(ssffss, \"1.\").concat(ew), 673], [\"\".concat(ssffss, \"1.\").concat(phiew), 674], [\"\".concat(ssffss, \"1.\").concat(ros), 675], [\"\".concat(ssffss, \"2.\").concat(ew), 676], [\"\".concat(ssffss, \"2.\").concat(phiew), 677], [\"\".concat(ssffss, \"2.\").concat(ros), 678], [\"\".concat(ssffss, \"3a.\").concat(ew), 679], [\"\".concat(ssffss, \"3a.\").concat(phiew), 680], [\"\".concat(ssffss, \"3a.\").concat(ros), 681], [\"\".concat(ssffss, \"3b.\").concat(ew), 682], [\"\".concat(ssffss, \"3b.\").concat(phiew), 683], [\"\".concat(ssffss, \"3b.\").concat(ros), 684], [\"\".concat(ssffss, \"4.\").concat(ew), 685], [\"\".concat(ssffss, \"4.\").concat(phiew), 686], [\"\".concat(ssffss, \"4.\").concat(ros), 687], [\"\".concat(ssff, \".\").concat(waf), 688], [\"\".concat(ssff, \".\").concat(wsm), 689], [\"\".concat(ssff, \".\").concat(wb), 690], [\"\".concat(ssff, \".\").concat(wc), 691], [\"\".concat(ssff, \".\").concat(we), 692], [\"\".concat(ssff, \".\").concat(wk), 693], [\"\".concat(ssff, \".\").concat(wi), 694], [\"\".concat(ssff, \".\").concat(phiw), 695], [\"\".concat(ssff, \".\").concat(ew), 696], [\"\".concat(ssff, \".\").concat(fli), 697], [\"\".concat(ssff, \".\").concat(fl), 698], [\"\".concat(ssff, \".\").concat(taur$1), 699], [\"\".concat(ssff, \".\").concat(hup), 700], [\"\".concat(ssff, \".\").concat(hno), 701], [\"\".concat(ssff, \".\").concat(hpa), 702], [\"\".concat(ssff, \".\").concat(lwr), 703], [\"\".concat(ssff, \".\").concat(phiew), 704], [\"\".concat(ssff, \".\").concat(rxi), 705], [\"\".concat(ssff, \".\").concat(sh), 706], [\"\".concat(ssffs, \"Rate\"), 707], [\"\".concat(ssff, \".noWindNoSlope.\").concat(ros), 708], [\"\".concat(ssfm, \".domain\"), 709], [\"\".concat(ssfm, \".catalogKey\"), 710], [\"\".concat(ssfmb, \".domain\"), 711], [\"\".concat(ssfmbp, \".\").concat(chf), 712], [\"\".concat(ssfmbp, \".depth\"), 713], [\"\".concat(ssfmbp, \".dead.\").concat(ext, \".\").concat(mc), 714], [\"\".concat(ssfmbp, \".total.herb.\").concat(ol), 715], [\"\".concat(ssfmbp, \".dead.tl1h.\").concat(ol), 716], [\"\".concat(ssfmbp, \".dead.tl10h.\").concat(ol), 717], [\"\".concat(ssfmbp, \".dead.tl100h.\").concat(ol), 718], [\"\".concat(ssfmbp, \".live.stem.\").concat(ol), 719], [\"\".concat(ssfmbp, \".dead.tl1h.\").concat(savr), 720], [\"\".concat(ssfmbp, \".live.herb.\").concat(savr), 721], [\"\".concat(ssfmbp, \".live.stem.\").concat(savr), 722], [\"\".concat(ssfmbp, \".dead.\").concat(hc), 723], [\"\".concat(ssfmbp, \".live.\").concat(hc), 724], [\"\".concat(ssfmbd, \".dead.herb.\").concat(ol), 725], [\"\".concat(ssfmbd, \".live.herb.\").concat(ol), 726], [\"\".concat(ssfmc, \".domain\"), 727], [\"\".concat(ssfmcp, \".chaparralType\"), 728], [\"\".concat(ssfmcp, \".\").concat(obs, \".deadFuelFraction\"), 729], [\"\".concat(ssfmcp, \".\").concat(obs, \".depth\"), 730], [\"\".concat(ssfmcp, \".\").concat(obs, \".totalLoad\"), 731], [\"\".concat(ssfmcp, \".applied.totalLoad\"), 732], [\"\".concat(ssfmcd, \".age\"), 733], [\"\".concat(ssfmcd, \".averageMortality\"), 734], [\"\".concat(ssfmcd, \".severeMortality\"), 735], [\"\".concat(ssfmcd, \".depth\"), 736], [\"\".concat(ssfmcd, \".totalLoad\"), 737], [\"\".concat(ssfmcd, \".deadLoad\"), 738], [\"\".concat(ssfmcd, \".\").concat(dfl), 739], [\"\".concat(ssfmcd, \".\").concat(dsl), 740], [\"\".concat(ssfmcd, \".\").concat(dml), 741], [\"\".concat(ssfmcd, \".\").concat(dll), 742], [\"\".concat(ssfmcd, \".liveLoad\"), 743], [\"\".concat(ssfmcd, \".\").concat(lfl), 744], [\"\".concat(ssfmcd, \".\").concat(lsl), 745], [\"\".concat(ssfmcd, \".\").concat(lml), 746], [\"\".concat(ssfmcd, \".\").concat(lll), 747], [\"\".concat(ssfmcd, \".liveLeafLoad\"), 748], [\"\".concat(ssfmp, \".domain\"), 749], [\"\".concat(ssfmpp, \".age\"), 750], [\"\".concat(ssfmpp, \".basalArea\"), 751], [\"\".concat(ssfmpp, \".cover\"), 752], [\"\".concat(ssfmpp, \".height\"), 753], [\"\".concat(ssfmpd, \".depth\"), 754], [\"\".concat(ssfmpd, \".\").concat(dfl), 755], [\"\".concat(ssfmpd, \".\").concat(dsl), 756], [\"\".concat(ssfmpd, \".\").concat(dfol), 757], [\"\".concat(ssfmpd, \".\").concat(dlit), 758], [\"\".concat(ssfmpd, \".\").concat(lfl), 759], [\"\".concat(ssfmpd, \".\").concat(lsl), 760], [\"\".concat(ssfmpd, \".\").concat(lfol), 761], [\"\".concat(ssfmw, \".domain\"), 762], [\"\".concat(ssfmwp, \".aspenType\"), 763], [\"\".concat(ssfmwp, \".curingLevel\"), 764], [\"\".concat(ssfmwd, \".depth\"), 765], [\"\".concat(ssfmwd, \".dead.fine.\").concat(ol), 766], [\"\".concat(ssfmwd, \".dead.small.\").concat(ol), 767], [\"\".concat(ssfmwd, \".dead.fine.\").concat(savr), 768], [\"\".concat(ssfmwd, \".live.herb.\").concat(ol), 769], [\"\".concat(ssfmwd, \".live.stem.\").concat(ol), 770], [\"\".concat(ssfmwd, \".live.stem.\").concat(savr), 771], [\"\".concat(swf, \".primaryCover\"), 772], [\"\".concat(swf, \".\").concat(ew), 773], [\"\".concat(swf, \".\").concat(hup), 774], [\"\".concat(swf, \".\").concat(hno), 775], [\"\".concat(swf, \".\").concat(lwr), 776], [\"\".concat(swf, \".\").concat(wsm), 777], [\"\".concat(swf, \".\").concat(waf), 778], [\"\".concat(swf, \".\").concat(fli), 779], [\"\".concat(swf, \".\").concat(fl), 780], [\"\".concat(swf, \".\").concat(hpa), 781], [\"\".concat(swf, \".\").concat(rxi), 782], [\"\".concat(swf, \".\").concat(sh), 783], [\"\".concat(swf, \".limit.\").concat(ew, \".exceeded\"), 784], [\"\".concat(swf, \".limit.\").concat(ew), 785], [\"\".concat(swf, \".\").concat(ros), 786], [\"\".concat(swf, \".arithmeticMean.\").concat(ros), 787], [\"\".concat(swf, \".expectedValue.\").concat(ros), 788], [\"\".concat(swf, \".harmonicMean.\").concat(ros), 789], [\"\".concat(sfea, \".eccentricity\"), 790], [\"\".concat(sfea, \".\").concat(ew), 791], [\"\".concat(sfea, \".\").concat(lwr), 792], [\"\".concat(sfea, \".major.\").concat(ros), 793], [\"\".concat(sfea, \".minor.\").concat(ros), 794], [\"\".concat(sfea, \".f.\").concat(ros), 795], [\"\".concat(sfea, \".g.\").concat(ros), 796], [\"\".concat(sfea, \".h.\").concat(ros), 797], [\"\".concat(sfev, \".fromHead\"), 798], [\"\".concat(sfev, \".fromNorth\"), 799], [\"\".concat(sfev, \".fromUpslope\"), 800], [\"\".concat(sfes, \".area\"), 801], [\"\".concat(sfes, \".length\"), 802], [\"\".concat(sfes, \".perimeter\"), 803], [\"\".concat(sfes, \".width\"), 804], [\"\".concat(sfem, \".area\"), 805], [\"\".concat(sfem, \".length\"), 806], [\"\".concat(sfem, \".perimeter\"), 807], [\"\".concat(sfem, \".width\"), 808], [\"\".concat(sfeb, \".\").concat(sd), 809], [\"\".concat(sfeb, \".\").concat(fli), 810], [\"\".concat(sfeb, \".\").concat(fl), 811], [\"\".concat(sfeb, \".\").concat(md), 812], [\"\".concat(sfeb, \".\").concat(ros), 813], [\"\".concat(sfeb, \".\").concat(sh), 814], [\"\".concat(sfeb, \".\").concat(tm), 815], [\"\".concat(sfef, \".\").concat(sd), 816], [\"\".concat(sfef, \".\").concat(fli), 817], [\"\".concat(sfef, \".\").concat(fl), 818], [\"\".concat(sfef, \".\").concat(md), 819], [\"\".concat(sfef, \".\").concat(ros), 820], [\"\".concat(sfef, \".\").concat(sh), 821], [\"\".concat(sfef, \".\").concat(tm), 822], [\"\".concat(sfeh, \".\").concat(sd), 823], [\"\".concat(sfeh, \".\").concat(fli), 824], [\"\".concat(sfeh, \".\").concat(fl), 825], [\"\".concat(sfeh, \".\").concat(md), 826], [\"\".concat(sfeh, \".\").concat(ros), 827], [\"\".concat(sfeh, \".\").concat(sh), 828], [\"\".concat(sfeh, \".\").concat(tm), 829], [\"\".concat(sfep, \".\").concat(sd), 830], [\"\".concat(sfep, \".\").concat(fli), 831], [\"\".concat(sfep, \".\").concat(fl), 832], [\"\".concat(sfep, \".\").concat(md), 833], [\"\".concat(sfep, \".\").concat(ros), 834], [\"\".concat(sfep, \".\").concat(sh), 835], [\"\".concat(sfep, \".\").concat(tm), 836], [\"\".concat(sfe5, \".\").concat(sd), 837], [\"\".concat(sfe5, \".\").concat(fli), 838], [\"\".concat(sfe5, \".\").concat(fl), 839], [\"\".concat(sfe5, \".\").concat(md), 840], [\"\".concat(sfe5, \".\").concat(ros), 841], [\"\".concat(sfe5, \".\").concat(sh), 842], [\"\".concat(sfe5, \".\").concat(tm), 843], [\"\".concat(sfe6, \".\").concat(sd), 844], [\"\".concat(sfe6, \".\").concat(fli), 845], [\"\".concat(sfe6, \".\").concat(fl), 846], [\"\".concat(sfe6, \".\").concat(md), 847], [\"\".concat(sfe6, \".\").concat(ros), 848], [\"\".concat(sfe6, \".\").concat(sh), 849], [\"\".concat(sfe6, \".\").concat(tm), 850], [\"\".concat(sfe6, \".theta\"), 851], [\"\".concat(sfe6, \".psi\"), 852], [\"\".concat(sfe6, \".psiSpreadRate\"), 853], [\"\".concat(sfehdg, \".fromUpslope\"), 854], [\"\".concat(sfehdg, \".fromNorth\"), 855], [\"\".concat(sfe, \".\").concat(wsm), 856], [\"\".concat(xtsrc), 857], [\"\".concat(xtrvd), 858], [\"\".concat(xtrve), 859], [\"\".concat(spb, \".\").concat(fbc), 860], [\"\".concat(spb, \".\").concat(fbh), 861], [\"\".concat(spb, \".\").concat(fbd), 862], [\"\".concat(spb, \".\").concat(ft), 863], [\"\".concat(spb, \".\").concat(ftd), 864], [\"\".concat(spb, \".\").concat(mt), 865], [\"\".concat(spb, \".flameHeight\"), 866], [\"\".concat(spc, \".\").concat(fbc), 867], [\"\".concat(spc, \".\").concat(fbh), 868], [\"\".concat(spc, \".\").concat(fbd), 869], [\"\".concat(spc, \".\").concat(ft), 870], [\"\".concat(spc, \".\").concat(ftd), 871], [\"\".concat(spc, \".\").concat(mt), 872], [\"\".concat(spc, \".\").concat(fli), 873], [\"\".concat(spc, \".firebrandObject\"), 874], [\"\".concat(sps, \".\").concat(fbc), 875], [\"\".concat(sps, \".\").concat(fli), 876], [\"\".concat(sps, \".\").concat(fbh), 877], [\"\".concat(sps, \".\").concat(fbd), 878], [\"\".concat(sps, \".\").concat(ft), 879], [\"\".concat(sps, \".\").concat(ftd), 880], [\"\".concat(sps, \".\").concat(mt), 881], [\"\".concat(spt, \".\").concat(fbc), 882], [\"\".concat(spt, \".\").concat(fbh), 883], [\"\".concat(spt, \".\").concat(fbd), 884], [\"\".concat(spt, \".\").concat(ft), 885], [\"\".concat(spt, \".\").concat(ftd), 886], [\"\".concat(spt, \".\").concat(mt), 887], [\"\".concat(spt, \".species\"), 888], [\"\".concat(spt, \".height\"), 889], [\"\".concat(spt, \".dbh\"), 890], [\"\".concat(spt, \".count\"), 891], [\"\".concat(spt, \".flameHeight\"), 892], [\"\".concat(spt, \".flameDuration\"), 893], [\"scorch.height\", 894], [\"mortality.\".concat(sh), 895], [\"mortality.rate\", 896], [\"mortality.\".concat(cls), 897], [\"mortality.\".concat(cvs), 898], [\"\".concat(ccfbdpc, \"1.\").concat(fd), 899], [\"\".concat(ccfbdpc, \"1.\").concat(hc), 900], [\"\".concat(ccfbdpc, \"1.\").concat(ol), 901], [\"\".concat(ccfbdpc, \"1.\").concat(mc), 902], [\"\".concat(ccfbdpc, \"1.\").concat(savr), 903], [\"\".concat(ccfbdpc, \"1.\").concat(emc), 904], [\"\".concat(ccfbdpc, \"1.\").concat(tmc), 905], [\"\".concat(ccfbdpc, \"2.\").concat(fd), 906], [\"\".concat(ccfbdpc, \"2.\").concat(hc), 907], [\"\".concat(ccfbdpc, \"2.\").concat(ol), 908], [\"\".concat(ccfbdpc, \"2.\").concat(mc), 909], [\"\".concat(ccfbdpc, \"2.\").concat(savr), 910], [\"\".concat(ccfbdpc, \"2.\").concat(emc), 911], [\"\".concat(ccfbdpc, \"2.\").concat(tmc), 912], [\"\".concat(ccfbdpc, \"3.\").concat(fd), 913], [\"\".concat(ccfbdpc, \"3.\").concat(hc), 914], [\"\".concat(ccfbdpc, \"3.\").concat(ol), 915], [\"\".concat(ccfbdpc, \"3.\").concat(mc), 916], [\"\".concat(ccfbdpc, \"3.\").concat(savr), 917], [\"\".concat(ccfbdpc, \"3.\").concat(emc), 918], [\"\".concat(ccfbdpc, \"3.\").concat(tmc), 919], [\"\".concat(ccfbdpc, \"4.\").concat(fd), 920], [\"\".concat(ccfbdpc, \"4.\").concat(hc), 921], [\"\".concat(ccfbdpc, \"4.\").concat(ol), 922], [\"\".concat(ccfbdpc, \"4.\").concat(mc), 923], [\"\".concat(ccfbdpc, \"4.\").concat(savr), 924], [\"\".concat(ccfbdpc, \"4.\").concat(emc), 925], [\"\".concat(ccfbdpc, \"4.\").concat(tmc), 926], [\"\".concat(ccfbdpc, \"5.\").concat(fd), 927], [\"\".concat(ccfbdpc, \"5.\").concat(hc), 928], [\"\".concat(ccfbdpc, \"5.\").concat(ol), 929], [\"\".concat(ccfbdpc, \"5.\").concat(mc), 930], [\"\".concat(ccfbdpc, \"5.\").concat(savr), 931], [\"\".concat(ccfbdpc, \"5.\").concat(emc), 932], [\"\".concat(ccfbdpc, \"5.\").concat(tmc), 933], [\"\".concat(ccfblpc, \"1.\").concat(fd), 934], [\"\".concat(ccfblpc, \"1.\").concat(hc), 935], [\"\".concat(ccfblpc, \"1.\").concat(ol), 936], [\"\".concat(ccfblpc, \"1.\").concat(mc), 937], [\"\".concat(ccfblpc, \"1.\").concat(savr), 938], [\"\".concat(ccfblpc, \"1.\").concat(emc), 939], [\"\".concat(ccfblpc, \"1.\").concat(tmc), 940], [\"\".concat(ccfblpc, \"2.\").concat(fd), 941], [\"\".concat(ccfblpc, \"2.\").concat(hc), 942], [\"\".concat(ccfblpc, \"2.\").concat(ol), 943], [\"\".concat(ccfblpc, \"2.\").concat(mc), 944], [\"\".concat(ccfblpc, \"2.\").concat(savr), 945], [\"\".concat(ccfblpc, \"2.\").concat(emc), 946], [\"\".concat(ccfblpc, \"2.\").concat(tmc), 947], [\"\".concat(ccfblpc, \"3.\").concat(fd), 948], [\"\".concat(ccfblpc, \"3.\").concat(hc), 949], [\"\".concat(ccfblpc, \"3.\").concat(ol), 950], [\"\".concat(ccfblpc, \"3.\").concat(mc), 951], [\"\".concat(ccfblpc, \"3.\").concat(savr), 952], [\"\".concat(ccfblpc, \"3.\").concat(emc), 953], [\"\".concat(ccfblpc, \"3.\").concat(tmc), 954], [\"\".concat(ccfblpc, \"4.\").concat(fd), 955], [\"\".concat(ccfblpc, \"4.\").concat(hc), 956], [\"\".concat(ccfblpc, \"4.\").concat(ol), 957], [\"\".concat(ccfblpc, \"4.\").concat(mc), 958], [\"\".concat(ccfblpc, \"4.\").concat(savr), 959], [\"\".concat(ccfblpc, \"4.\").concat(emc), 960], [\"\".concat(ccfblpc, \"4.\").concat(tmc), 961], [\"\".concat(ccfblpc, \"5.\").concat(fd), 962], [\"\".concat(ccfblpc, \"5.\").concat(hc), 963], [\"\".concat(ccfblpc, \"5.\").concat(ol), 964], [\"\".concat(ccfblpc, \"5.\").concat(mc), 965], [\"\".concat(ccfblpc, \"5.\").concat(savr), 966], [\"\".concat(ccfblpc, \"5.\").concat(emc), 967], [\"\".concat(ccfblpc, \"5.\").concat(tmc), 968], [\"\".concat(ccfbdpc, \"1.\").concat(ef, \".\").concat(hn), 969], [\"\".concat(ccfbdpc, \"1.\").concat(ef, \".\").concat(ol), 970], [\"\".concat(ccfbdpc, \"1.\").concat(hp), 971], [\"\".concat(ccfbdpc, \"1.\").concat(nol), 972], [\"\".concat(ccfbdpc, \"1.\").concat(sc), 973], [\"\".concat(ccfbdpc, \"1.\").concat(sc, \".\").concat(wf), 974], [\"\".concat(ccfbdpc, \"1.\").concat(sa), 975], [\"\".concat(ccfbdpc, \"1.\").concat(sa, \".\").concat(wf), 976], [\"\".concat(ccfbdpc, \"1.\").concat(vol), 977], [\"\".concat(ccfbdpc, \"1.\").concat(ef, \".\").concat(wl), 978], [\"\".concat(ccfbdpc, \"2.\").concat(ef, \".\").concat(hn), 979], [\"\".concat(ccfbdpc, \"2.\").concat(ef, \".\").concat(ol), 980], [\"\".concat(ccfbdpc, \"2.\").concat(hp), 981], [\"\".concat(ccfbdpc, \"2.\").concat(nol), 982], [\"\".concat(ccfbdpc, \"2.\").concat(sc), 983], [\"\".concat(ccfbdpc, \"2.\").concat(sc, \".\").concat(wf), 984], [\"\".concat(ccfbdpc, \"2.\").concat(sa), 985], [\"\".concat(ccfbdpc, \"2.\").concat(sa, \".\").concat(wf), 986], [\"\".concat(ccfbdpc, \"2.\").concat(vol), 987], [\"\".concat(ccfbdpc, \"2.\").concat(ef, \".\").concat(wl), 988], [\"\".concat(ccfbdpc, \"3.\").concat(ef, \".\").concat(hn), 989], [\"\".concat(ccfbdpc, \"3.\").concat(ef, \".\").concat(ol), 990], [\"\".concat(ccfbdpc, \"3.\").concat(hp), 991], [\"\".concat(ccfbdpc, \"3.\").concat(nol), 992], [\"\".concat(ccfbdpc, \"3.\").concat(sc), 993], [\"\".concat(ccfbdpc, \"3.\").concat(sc, \".\").concat(wf), 994], [\"\".concat(ccfbdpc, \"3.\").concat(sa), 995], [\"\".concat(ccfbdpc, \"3.\").concat(sa, \".\").concat(wf), 996], [\"\".concat(ccfbdpc, \"3.\").concat(vol), 997], [\"\".concat(ccfbdpc, \"3.\").concat(ef, \".\").concat(wl), 998], [\"\".concat(ccfbdpc, \"4.\").concat(ef, \".\").concat(hn), 999], [\"\".concat(ccfbdpc, \"4.\").concat(ef, \".\").concat(ol), 1000], [\"\".concat(ccfbdpc, \"4.\").concat(hp), 1001], [\"\".concat(ccfbdpc, \"4.\").concat(nol), 1002], [\"\".concat(ccfbdpc, \"4.\").concat(sc), 1003], [\"\".concat(ccfbdpc, \"4.\").concat(sc, \".\").concat(wf), 1004], [\"\".concat(ccfbdpc, \"4.\").concat(sa), 1005], [\"\".concat(ccfbdpc, \"4.\").concat(sa, \".\").concat(wf), 1006], [\"\".concat(ccfbdpc, \"4.\").concat(vol), 1007], [\"\".concat(ccfbdpc, \"4.\").concat(ef, \".\").concat(wl), 1008], [\"\".concat(ccfbdpc, \"5.\").concat(ef, \".\").concat(hn), 1009], [\"\".concat(ccfbdpc, \"5.\").concat(ef, \".\").concat(ol), 1010], [\"\".concat(ccfbdpc, \"5.\").concat(hp), 1011], [\"\".concat(ccfbdpc, \"5.\").concat(nol), 1012], [\"\".concat(ccfbdpc, \"5.\").concat(sc), 1013], [\"\".concat(ccfbdpc, \"5.\").concat(sc, \".\").concat(wf), 1014], [\"\".concat(ccfbdpc, \"5.\").concat(sa), 1015], [\"\".concat(ccfbdpc, \"5.\").concat(sa, \".\").concat(wf), 1016], [\"\".concat(ccfbdpc, \"5.\").concat(vol), 1017], [\"\".concat(ccfbdpc, \"5.\").concat(ef, \".\").concat(wl), 1018], [\"\".concat(ccfblpc, \"1.\").concat(ef, \".\").concat(hn), 1019], [\"\".concat(ccfblpc, \"1.\").concat(ef, \".\").concat(ol), 1020], [\"\".concat(ccfblpc, \"1.\").concat(hp), 1021], [\"\".concat(ccfblpc, \"1.\").concat(nol), 1022], [\"\".concat(ccfblpc, \"1.\").concat(sc), 1023], [\"\".concat(ccfblpc, \"1.\").concat(sc, \".\").concat(wf), 1024], [\"\".concat(ccfblpc, \"1.\").concat(sa), 1025], [\"\".concat(ccfblpc, \"1.\").concat(sa, \".\").concat(wf), 1026], [\"\".concat(ccfblpc, \"1.\").concat(vol), 1027], [\"\".concat(ccfblpc, \"2.\").concat(ef, \".\").concat(hn), 1028], [\"\".concat(ccfblpc, \"2.\").concat(ef, \".\").concat(ol), 1029], [\"\".concat(ccfblpc, \"2.\").concat(hp), 1030], [\"\".concat(ccfblpc, \"2.\").concat(nol), 1031], [\"\".concat(ccfblpc, \"2.\").concat(sc), 1032], [\"\".concat(ccfblpc, \"2.\").concat(sc, \".\").concat(wf), 1033], [\"\".concat(ccfblpc, \"2.\").concat(sa), 1034], [\"\".concat(ccfblpc, \"2.\").concat(sa, \".\").concat(wf), 1035], [\"\".concat(ccfblpc, \"2.\").concat(vol), 1036], [\"\".concat(ccfblpc, \"3.\").concat(ef, \".\").concat(hn), 1037], [\"\".concat(ccfblpc, \"3.\").concat(ef, \".\").concat(ol), 1038], [\"\".concat(ccfblpc, \"3.\").concat(hp), 1039], [\"\".concat(ccfblpc, \"3.\").concat(nol), 1040], [\"\".concat(ccfblpc, \"3.\").concat(sc), 1041], [\"\".concat(ccfblpc, \"3.\").concat(sc, \".\").concat(wf), 1042], [\"\".concat(ccfblpc, \"3.\").concat(sa), 1043], [\"\".concat(ccfblpc, \"3.\").concat(sa, \".\").concat(wf), 1044], [\"\".concat(ccfblpc, \"3.\").concat(vol), 1045], [\"\".concat(ccfblpc, \"4.\").concat(ef, \".\").concat(hn), 1046], [\"\".concat(ccfblpc, \"4.\").concat(ef, \".\").concat(ol), 1047], [\"\".concat(ccfblpc, \"4.\").concat(hp), 1048], [\"\".concat(ccfblpc, \"4.\").concat(nol), 1049], [\"\".concat(ccfblpc, \"4.\").concat(sc), 1050], [\"\".concat(ccfblpc, \"4.\").concat(sc, \".\").concat(wf), 1051], [\"\".concat(ccfblpc, \"4.\").concat(sa), 1052], [\"\".concat(ccfblpc, \"4.\").concat(sa, \".\").concat(wf), 1053], [\"\".concat(ccfblpc, \"4.\").concat(vol), 1054], [\"\".concat(ccfblpc, \"5.\").concat(ef, \".\").concat(hn), 1055], [\"\".concat(ccfblpc, \"5.\").concat(ef, \".\").concat(ol), 1056], [\"\".concat(ccfblpc, \"5.\").concat(hp), 1057], [\"\".concat(ccfblpc, \"5.\").concat(nol), 1058], [\"\".concat(ccfblpc, \"5.\").concat(sc), 1059], [\"\".concat(ccfblpc, \"5.\").concat(sc, \".\").concat(wf), 1060], [\"\".concat(ccfblpc, \"5.\").concat(sa), 1061], [\"\".concat(ccfblpc, \"5.\").concat(sa, \".\").concat(wf), 1062], [\"\".concat(ccfblpc, \"5.\").concat(vol), 1063], [\"\".concat(ccfbd, \".\").concat(sa), 1064], [\"\".concat(ccfbd, \".\").concat(sa, \".\").concat(wf), 1065], [\"\".concat(ccfbd, \".\").concat(etas), 1066], [\"\".concat(ccfbd, \".\").concat(etam), 1067], [\"\".concat(ccfbd, \".\").concat(hc), 1068], [\"\".concat(ccfbd, \".\").concat(ol), 1069], [\"\".concat(ccfbd, \".\").concat(ef, \".\").concat(ol), 1070], [\"\".concat(ccfbd, \".\").concat(ext, \".\").concat(mc), 1071], [\"\".concat(ccfbd, \".\").concat(ext, \".\").concat(mc, \"Factor\"), 1072], [\"\".concat(ccfbd, \".\").concat(mc), 1073], [\"\".concat(ccfbd, \".\").concat(vol), 1074], [\"\".concat(ccfbd, \".\").concat(hp), 1075], [\"\".concat(ccfbd, \".\").concat(rxi), 1076], [\"\".concat(ccfbd, \".\").concat(rxi, \"Dry\"), 1077], [\"\".concat(ccfbd, \".\").concat(savr), 1078], [\"\".concat(ccfbd, \".\").concat(emc), 1079], [\"\".concat(ccfbd, \".\").concat(sc, \".\").concat(wf), 1080], [\"\".concat(ccfbd, \".\").concat(nol), 1081], [\"\".concat(ccfbd, \".\").concat(ef, \".\").concat(wl), 1082], [\"\".concat(ccfbd, \".\").concat(ef, \".\").concat(mc), 1083], [\"\".concat(ccfbl, \".\").concat(sa), 1084], [\"\".concat(ccfbl, \".\").concat(sa, \".\").concat(wf), 1085], [\"\".concat(ccfbl, \".\").concat(etas), 1086], [\"\".concat(ccfbl, \".\").concat(etam), 1087], [\"\".concat(ccfbl, \".\").concat(hc), 1088], [\"\".concat(ccfbl, \".\").concat(ol), 1089], [\"\".concat(ccfbl, \".\").concat(ef, \".\").concat(ol), 1090], [\"\".concat(ccfbl, \".\").concat(ext, \".\").concat(mc), 1091], [\"\".concat(ccfbl, \".\").concat(ext, \".\").concat(mc, \"Factor\"), 1092], [\"\".concat(ccfbl, \".\").concat(mc), 1093], [\"\".concat(ccfbl, \".\").concat(vol), 1094], [\"\".concat(ccfbl, \".\").concat(hp), 1095], [\"\".concat(ccfbl, \".\").concat(rxi), 1096], [\"\".concat(ccfbl, \".\").concat(rxi, \"Dry\"), 1097], [\"\".concat(ccfbl, \".\").concat(savr), 1098], [\"\".concat(ccfbl, \".\").concat(emc), 1099], [\"\".concat(ccfbl, \".\").concat(sc, \".\").concat(wf), 1100], [\"\".concat(ccfbl, \".\").concat(nol), 1101], [\"\".concat(ccfb, \".depth\"), 1102], [\"\".concat(ccfb, \".bulkDensity\"), 1103], [\"\".concat(ccfb, \".\").concat(hp), 1104], [\"\".concat(ccfb, \".heatSink\"), 1105], [\"\".concat(ccfb, \".noWindNoSlope.\").concat(ros), 1106], [\"\".concat(ccfb, \".\").concat(ol), 1107], [\"\".concat(ccfb, \".open.\").concat(waf), 1108], [\"\".concat(ccfb, \".\").concat(beta), 1109], [\"\".concat(ccfb, \".\").concat(beta, \".optimum\"), 1110], [\"\".concat(ccfb, \".\").concat(beta, \".ratio\"), 1111], [\"\".concat(ccfb, \".\").concat(gamma), 1112], [\"\".concat(ccfb, \".\").concat(rxi), 1113], [\"\".concat(ccfb, \".\").concat(rxv, \"Exponent\"), 1114], [\"\".concat(ccfb, \".\").concat(rxv, \"Maximum\"), 1115], [\"\".concat(ccfb, \".\").concat(rxv, \"Optimum\"), 1116], [\"\".concat(ccfb, \".\").concat(savr), 1117], [\"\".concat(ccfb, \".savr15\"), 1118], [\"\".concat(ccfb, \".\").concat(sa), 1119], [\"\".concat(ccff, \".\").concat(maxDir, \".slope.\").concat(ros), 1120], [\"\".concat(ccff, \".\").concat(maxDir, \".wind.\").concat(ros), 1121], [\"\".concat(ccff, \".wind.\").concat(hup), 1122], [\"\".concat(ccff, \".\").concat(maxDir, \".xComponent\"), 1123], [\"\".concat(ccff, \".\").concat(maxDir, \".yComponent\"), 1124], [\"\".concat(ccff, \".\").concat(maxDir, \".\").concat(ros), 1125], [\"\".concat(ccff, \".limit.\").concat(ew, \".exceeded\"), 1126], [\"\".concat(ccff, \".limit.\").concat(ros, \".exceeded\"), 1127], [\"\".concat(ccff, \".limit.\").concat(ew), 1128], [\"\".concat(ccff, \".limit.\").concat(phi), 1129], [\"\".concat(ccff, \".limit.\").concat(ros), 1130], [\"\".concat(ccff, \".slope.ratio\"), 1131], [\"\".concat(ccff, \".slope.k\"), 1132], [\"\".concat(ccff, \".\").concat(phis), 1133], [\"\".concat(ccffss, \"1.\").concat(ew), 1134], [\"\".concat(ccffss, \"1.\").concat(phiew), 1135], [\"\".concat(ccffss, \"1.\").concat(ros), 1136], [\"\".concat(ccffss, \"2.\").concat(ew), 1137], [\"\".concat(ccffss, \"2.\").concat(phiew), 1138], [\"\".concat(ccffss, \"2.\").concat(ros), 1139], [\"\".concat(ccffss, \"3a.\").concat(ew), 1140], [\"\".concat(ccffss, \"3a.\").concat(phiew), 1141], [\"\".concat(ccffss, \"3a.\").concat(ros), 1142], [\"\".concat(ccffss, \"3b.\").concat(ew), 1143], [\"\".concat(ccffss, \"3b.\").concat(phiew), 1144], [\"\".concat(ccffss, \"3b.\").concat(ros), 1145], [\"\".concat(ccffss, \"4.\").concat(ew), 1146], [\"\".concat(ccffss, \"4.\").concat(phiew), 1147], [\"\".concat(ccffss, \"4.\").concat(ros), 1148], [\"\".concat(ccff, \".\").concat(waf), 1149], [\"\".concat(ccff, \".\").concat(wsm), 1150], [\"\".concat(ccff, \".\").concat(wb), 1151], [\"\".concat(ccff, \".\").concat(wc), 1152], [\"\".concat(ccff, \".\").concat(we), 1153], [\"\".concat(ccff, \".\").concat(wk), 1154], [\"\".concat(ccff, \".\").concat(wi), 1155], [\"\".concat(ccff, \".\").concat(phiw), 1156], [\"\".concat(ccff, \".\").concat(ew), 1157], [\"\".concat(ccff, \".\").concat(fli), 1158], [\"\".concat(ccff, \".\").concat(fl), 1159], [\"\".concat(ccff, \".\").concat(taur$1), 1160], [\"\".concat(ccff, \".\").concat(hup), 1161], [\"\".concat(ccff, \".\").concat(hno), 1162], [\"\".concat(ccff, \".\").concat(hpa), 1163], [\"\".concat(ccff, \".\").concat(lwr), 1164], [\"\".concat(ccff, \".\").concat(phiew), 1165], [\"\".concat(ccff, \".\").concat(rxi), 1166], [\"\".concat(ccff, \".\").concat(sh), 1167], [\"\".concat(ccffs, \"Rate\"), 1168], [\"\".concat(ccff, \".noWindNoSlope.\").concat(ros), 1169], [\"\".concat(cfas, \".area\"), 1170], [\"\".concat(cfas, \".length\"), 1171], [\"\".concat(cfas, \".perimeter\"), 1172], [\"\".concat(cfas, \".width\"), 1173], [\"\".concat(cfam, \".area\"), 1174], [\"\".concat(cfam, \".length\"), 1175], [\"\".concat(cfam, \".perimeter\"), 1176], [\"\".concat(cfam, \".width\"), 1177], [\"\".concat(cfa, \".\").concat(lwr), 1178], [\"\".concat(cfa, \".\").concat(ros), 1179], [\"\".concat(cfa, \".\").concat(fli), 1180], [\"\".concat(cfa, \".\").concat(fl), 1181], [\"\".concat(cfa, \".\").concat(hpa), 1182], [\"\".concat(cfa, \".powerOfTheFire\"), 1183], [\"\".concat(cfa, \".powerOfTheWind\"), 1184], [\"\".concat(cfa, \".powerRatio\"), 1185], [\"\".concat(cfa, \".isPlumeDominated\"), 1186], [\"\".concat(cfa, \".isWindDriven\"), 1187], [\"\".concat(cffs, \".area\"), 1188], [\"\".concat(cffs, \".length\"), 1189], [\"\".concat(cffs, \".perimeter\"), 1190], [\"\".concat(cffs, \".width\"), 1191], [\"\".concat(cffm, \".area\"), 1192], [\"\".concat(cffm, \".length\"), 1193], [\"\".concat(cffm, \".perimeter\"), 1194], [\"\".concat(cffm, \".width\"), 1195], [\"\".concat(cff, \".rSa\"), 1196], [\"\".concat(cff, \".crownFractionBurned\"), 1197], [\"\".concat(cff, \".\").concat(ros), 1198], [\"\".concat(cff, \".\").concat(fli), 1199], [\"\".concat(cff, \".\").concat(fl), 1200], [\"\".concat(cfi, \".\").concat(fli), 1201], [\"\".concat(cfi, \".\").concat(fl), 1202], [\"\".concat(cfi, \".\").concat(ros), 1203], [\"\".concat(cfi, \".rPrime\"), 1204], [\"\".concat(cfi, \".transitionRatio\"), 1205], [\"\".concat(cfi, \".canTransition\"), 1206], [\"\".concat(cfi, \".activeRatio\"), 1207], [\"\".concat(cfi, \".type\"), 1208], [\"\".concat(cfi, \".isActiveCrownFire\"), 1209], [\"\".concat(cfi, \".isCrownFire\"), 1210], [\"\".concat(cfi, \".isPassiveCrownFire\"), 1211], [\"\".concat(cfi, \".isConditionalCrownFire\"), 1212], [\"\".concat(cfi, \".isSurfaceFire\"), 1213], [\"\".concat(cfi, \".oActive\"), 1214], [\"\".concat(cfi, \".crowningIndex\"), 1215], [\"\".concat(cfs, \".\").concat(fli), 1216], [\"\".concat(cfs, \".\").concat(fl), 1217], [\"\".concat(cfs, \".\").concat(hpa), 1218]]) // Array of Node keys\n\nconst key = Array.from(map.keys()) // Array of Node updater [[<condition>], [<method>, ...parms]]\n\nconst updater = [[[[], [0]]], // 0\n[[[], [0]]], // 1\n[[[], [0]]], // 2\n[[[], [0]]], // 3\n[[[], [0]]], // 4\n[[[], [0]]], // 5\n[[[], [0]]], // 6\n[[[], [0]]], // 7\n[[[], [0]]], // 8\n[[[], [0]]], // 9\n[[[], [1]]], // 10\n[[[], [1]]], // 11\n[[[], [1]]], // 12\n[[[], [1]]], // 13\n[[[], [1]]], // 14\n[[[], [1]]], // 15\n[[[], [1]]], // 16\n[[[], [1]]], // 17\n[[[], [1]]], // 18\n[[[], [1]]], // 19\n[[[], [1]]], // 20\n[[[], [1]]], // 21\n[[[], [1]]], // 22\n[[[], [1]]], // 23\n[[[], [1]]], // 24\n[[[], [1]]], // 25\n[[[], [1]]], // 26\n[[[], [1]]], // 27\n[[[], [1]]], // 28\n[[[], [1]]], // 29\n[[[], [1]]], // 30\n[[[], [2]]], // 31\n[[[], [2]]], // 32\n[[[], [2]]], // 33\n[[[], [2]]], // 34\n[[[], [3, [0, 95], [0, 83]]]], // 35\n[[[], [2]]], // 36\n[[[], [2]]], // 37\n[[[], [2]]], // 38\n[[[], [4, [0, 38], [0, 37], [0, 85], [0, 36]]]], // 39\n[[[], [2]]], // 40\n[[[], [2]]], // 41\n[[[], [5, [0, 40], [0, 44]]]], // 42\n[[[], [6, [0, 41], [0, 45]]]], // 43\n[[[], [7, [0, 43], [0, 45]]]], // 44\n[[[], [2]]], // 45\n[[[], [8, [0, 51], [0, 49]]]], // 46\n[[[], [2]]], // 47\n[[[], [2]]], // 48\n[[[], [9, [1, 0]]]], // 49\n[[[], [10, [0, 40], [0, 45], [0, 42]]]], // 50\n[[[], [11, [0, 47], [0, 43]]]], // 51\n[[[], [2]]], // 52\n[[[], [12, [0, 40], [0, 45], [0, 42]]]], // 53\n[[[], [2]]], // 54\n[[[], [2]]], // 55\n[[[], [13, [0, 54], [0, 55]]]], // 56\n[[[], [14, [0, 59], [0, 58]]]], // 57\n[[[], [2]]], // 58\n[[[], [2]]], // 59\n[[[27, 1], [15, [0, 66]]], [[], [2]]], // 60\n[[[26, 2], [16, [0, 62]]], [[], [2]]], // 61\n[[[26, 3], [17, [0, 61]]], [[], [2]]], // 62\n[[[24, 4], [2]], [[24, 5], [2]], [[], [18, [0, 64], [0, 91]]]], // 63\n[[[24, 6], [2]], [[], [19, [0, 91], [0, 63]]]], // 64\n[[[], [2]]], // 65\n[[[27, 7], [20, [0, 60]]], [[], [2]]], // 66\n[[[], [2]]], // 67\n[[[], [2]]], // 68\n[[[], [2]]], // 69\n[[[], [2]]], // 70\n[[[], [2]]], // 71\n[[[], [2]]], // 72\n[[[], [2]]], // 73\n[[[], [2]]], // 74\n[[[], [2]]], // 75\n[[[], [2]]], // 76\n[[[], [21, [1, 8], [0, 74]]]], // 77\n[[[], [2]]], // 78\n[[[], [22, [0, 74], [0, 76]]]], // 79\n[[[], [22, [0, 78], [0, 75]]]], // 80\n[[[], [23, [0, 74], [0, 78], [0, 75], [0, 76]]]], // 81\n[[[], [24, [0, 74], [0, 78], [0, 75], [0, 76]]]], // 82\n[[[19, 9], [25, [0, 86]]], [[], [2]]], // 83\n[[[19, 9], [25, [0, 86]]], [[], [2]]], // 84\n[[[19, 9], [25, [0, 86]]], [[], [2]]], // 85\n[[[], [2]]], // 86\n[[[19, 9], [25, [0, 89]]], [[19, 10], [25, [0, 89]]], [[], [2]]], // 87\n[[[19, 9], [25, [0, 89]]], [[19, 10], [25, [0, 89]]], [[], [2]]], // 88\n[[[], [2]]], // 89\n[[[], [2]]], // 90\n[[[], [26, [0, 90]]]], // 91\n[[[23, 11], [2]], [[23, 12], [25, [0, 82]]], [[], [27, [0, 93]]]], // 92\n[[[23, 11], [28, [0, 92]]], [[23, 12], [25, [0, 81]]], [[], [2]]], // 93\n[[[], [2]]], // 94\n[[[], [29, [0, 94], [0, 52]]]], // 95\n[[[24, 4], [2]], [[24, 6], [18, [0, 99], [0, 91]]], [[24, 5], [9, [1, 13]]], [[], [9, [1, 13]]]], // 96\n[[[], [26, [0, 96]]]], // 97\n[[[24, 4], [26, [0, 99]]], [[24, 6], [2]], [[24, 5], [26, [0, 91]]], [[], [26, [0, 91]]]], // 98\n[[[24, 4], [19, [0, 96], [0, 91]]], [[24, 6], [26, [0, 98]]], [[24, 5], [25, [0, 91]]], [[], [25, [0, 91]]]], // 99\n[[[25, 14], [2]], [[], [30, [0, 101]]]], // 100\n[[[25, 15], [2]], [[25, 14], [31, [0, 100]]], [[], [32, [0, 102], [0, 103]]]], // 101\n[[[25, 16], [2]], [[], [33, [0, 101], [0, 103]]]], // 102\n[[[], [2]]], // 103\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 104\n[[[], [34, [0, 375], [0, 389], [1, 0], [1, 20], [1, 0]]]], // 105\n[[[], [34, [0, 375], [0, 382], [0, 405], [0, 421], [0, 432]]]], // 106\n[[[], [34, [0, 375], [0, 83], [0, 83], [0, 83], [0, 83]]]], // 107\n[[[], [34, [0, 375], [0, 386], [1, 21], [1, 22], [0, 434]]]], // 108\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 109\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 110\n[[[], [35, [0, 108]]]], // 111\n[[[], [36, [0, 108], [0, 106], [1, 28]]]], // 112\n[[[], [37, [0, 107], [0, 111]]]], // 113\n[[[], [38, [0, 106], [0, 110]]]], // 114\n[[[], [39, [0, 108]]]], // 115\n[[[], [40, [0, 115], [0, 285]]]], // 116\n[[[], [41, [0, 106], [0, 108], [0, 104]]]], // 117\n[[[], [42, [0, 117], [0, 269]]]], // 118\n[[[], [43, [0, 106], [0, 104]]]], // 119\n[[[], [44, [0, 112], [0, 107]]]], // 120\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 121\n[[[], [34, [0, 375], [0, 389], [1, 0], [1, 20], [1, 0]]]], // 122\n[[[], [34, [0, 375], [0, 383], [0, 406], [0, 422], [0, 433]]]], // 123\n[[[], [34, [0, 375], [0, 84], [0, 84], [0, 84], [0, 84]]]], // 124\n[[[], [34, [0, 375], [1, 29], [1, 30], [1, 31], [1, 29]]]], // 125\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 126\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 127\n[[[], [35, [0, 125]]]], // 128\n[[[], [36, [0, 125], [0, 123], [1, 28]]]], // 129\n[[[], [37, [0, 124], [0, 128]]]], // 130\n[[[], [38, [0, 123], [0, 127]]]], // 131\n[[[], [39, [0, 125]]]], // 132\n[[[], [40, [0, 132], [0, 285]]]], // 133\n[[[], [41, [0, 123], [0, 125], [0, 121]]]], // 134\n[[[], [42, [0, 134], [0, 269]]]], // 135\n[[[], [43, [0, 123], [0, 121]]]], // 136\n[[[], [44, [0, 129], [0, 124]]]], // 137\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 138\n[[[], [34, [0, 375], [0, 389], [1, 0], [1, 20], [1, 0]]]], // 139\n[[[], [34, [0, 375], [0, 384], [0, 407], [0, 423], [1, 13]]]], // 140\n[[[], [34, [0, 375], [0, 85], [0, 84], [0, 83], [1, 32]]]], // 141\n[[[], [34, [0, 375], [1, 19], [1, 33], [1, 34], [1, 8]]]], // 142\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 143\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 144\n[[[], [35, [0, 142]]]], // 145\n[[[], [36, [0, 142], [0, 140], [1, 28]]]], // 146\n[[[], [37, [0, 141], [0, 145]]]], // 147\n[[[], [38, [0, 140], [0, 144]]]], // 148\n[[[], [39, [0, 142]]]], // 149\n[[[], [40, [0, 149], [0, 285]]]], // 150\n[[[], [41, [0, 140], [0, 142], [0, 138]]]], // 151\n[[[], [42, [0, 151], [0, 269]]]], // 152\n[[[], [43, [0, 140], [0, 138]]]], // 153\n[[[], [44, [0, 146], [0, 141]]]], // 154\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 155\n[[[], [34, [0, 375], [0, 389], [1, 0], [1, 20], [1, 0]]]], // 156\n[[[], [34, [0, 375], [0, 391], [0, 408], [0, 424], [1, 13]]]], // 157\n[[[], [34, [0, 375], [0, 83], [0, 85], [0, 85], [1, 32]]]], // 158\n[[[], [34, [0, 375], [0, 387], [1, 35], [1, 34], [1, 8]]]], // 159\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 160\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 161\n[[[], [35, [0, 159]]]], // 162\n[[[], [36, [0, 159], [0, 157], [1, 28]]]], // 163\n[[[], [37, [0, 158], [0, 162]]]], // 164\n[[[], [38, [0, 157], [0, 161]]]], // 165\n[[[], [39, [0, 159]]]], // 166\n[[[], [40, [0, 166], [0, 285]]]], // 167\n[[[], [41, [0, 157], [0, 159], [0, 155]]]], // 168\n[[[], [42, [0, 168], [0, 269]]]], // 169\n[[[], [43, [0, 157], [0, 155]]]], // 170\n[[[], [44, [0, 163], [0, 158]]]], // 171\n[[[], [9, [1, 17]]]], // 172\n[[[], [9, [1, 0]]]], // 173\n[[[], [9, [1, 13]]]], // 174\n[[[], [9, [1, 32]]]], // 175\n[[[], [9, [1, 8]]]], // 176\n[[[], [9, [1, 23]]]], // 177\n[[[], [9, [1, 25]]]], // 178\n[[[], [35, [0, 176]]]], // 179\n[[[], [36, [0, 176], [0, 174], [1, 28]]]], // 180\n[[[], [37, [0, 175], [0, 179]]]], // 181\n[[[], [38, [0, 174], [0, 178]]]], // 182\n[[[], [39, [0, 176]]]], // 183\n[[[], [40, [0, 183], [0, 285]]]], // 184\n[[[], [41, [0, 174], [0, 176], [0, 172]]]], // 185\n[[[], [42, [0, 185], [0, 269]]]], // 186\n[[[], [43, [0, 174], [0, 172]]]], // 187\n[[[], [44, [0, 180], [0, 175]]]], // 188\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 189\n[[[], [34, [0, 375], [0, 390], [1, 36], [1, 20], [1, 0]]]], // 190\n[[[], [34, [0, 375], [0, 392], [0, 410], [0, 425], [0, 435]]]], // 191\n[[[], [34, [0, 375], [0, 87], [0, 88], [0, 88], [0, 87]]]], // 192\n[[[], [34, [0, 375], [0, 387], [1, 21], [1, 22], [1, 37]]]], // 193\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 194\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 195\n[[[], [35, [0, 193]]]], // 196\n[[[], [36, [0, 193], [0, 191], [1, 38]]]], // 197\n[[[], [37, [0, 192], [0, 196]]]], // 198\n[[[], [38, [0, 191], [0, 195]]]], // 199\n[[[], [39, [0, 193]]]], // 200\n[[[], [40, [0, 200], [0, 305]]]], // 201\n[[[], [41, [0, 191], [0, 193], [0, 189]]]], // 202\n[[[], [42, [0, 202], [0, 289]]]], // 203\n[[[], [43, [0, 191], [0, 189]]]], // 204\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 205\n[[[], [34, [0, 375], [0, 390], [1, 39], [1, 20], [1, 0]]]], // 206\n[[[], [34, [0, 375], [0, 385], [0, 411], [0, 426], [0, 436]]]], // 207\n[[[], [34, [0, 375], [0, 88], [0, 88], [0, 88], [0, 88]]]], // 208\n[[[], [34, [0, 375], [0, 388], [1, 30], [1, 31], [0, 437]]]], // 209\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 210\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 211\n[[[], [35, [0, 209]]]], // 212\n[[[], [36, [0, 209], [0, 207], [1, 38]]]], // 213\n[[[], [37, [0, 208], [0, 212]]]], // 214\n[[[], [38, [0, 207], [0, 211]]]], // 215\n[[[], [39, [0, 209]]]], // 216\n[[[], [40, [0, 216], [0, 305]]]], // 217\n[[[], [41, [0, 207], [0, 209], [0, 205]]]], // 218\n[[[], [42, [0, 218], [0, 289]]]], // 219\n[[[], [43, [0, 207], [0, 205]]]], // 220\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 221\n[[[], [34, [0, 375], [0, 390], [1, 39], [1, 20], [1, 0]]]], // 222\n[[[], [34, [0, 375], [1, 13], [0, 412], [0, 427], [1, 13]]]], // 223\n[[[], [34, [0, 375], [1, 32], [0, 88], [0, 88], [1, 32]]]], // 224\n[[[], [34, [0, 375], [1, 8], [1, 33], [1, 34], [1, 8]]]], // 225\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 226\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 227\n[[[], [35, [0, 225]]]], // 228\n[[[], [36, [0, 225], [0, 223], [1, 38]]]], // 229\n[[[], [37, [0, 224], [0, 228]]]], // 230\n[[[], [38, [0, 223], [0, 227]]]], // 231\n[[[], [39, [0, 225]]]], // 232\n[[[], [40, [0, 232], [0, 305]]]], // 233\n[[[], [41, [0, 223], [0, 225], [0, 221]]]], // 234\n[[[], [42, [0, 234], [0, 289]]]], // 235\n[[[], [43, [0, 223], [0, 221]]]], // 236\n[[[], [34, [0, 375], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 237\n[[[], [34, [0, 375], [0, 390], [1, 39], [1, 20], [1, 0]]]], // 238\n[[[], [34, [0, 375], [1, 13], [0, 413], [1, 13], [1, 13]]]], // 239\n[[[], [34, [0, 375], [1, 32], [0, 88], [1, 32], [1, 32]]]], // 240\n[[[], [34, [0, 375], [1, 8], [1, 35], [1, 8], [1, 8]]]], // 241\n[[[], [34, [0, 375], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 242\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 243\n[[[], [35, [0, 241]]]], // 244\n[[[], [36, [0, 241], [0, 239], [1, 38]]]], // 245\n[[[], [37, [0, 240], [0, 244]]]], // 246\n[[[], [38, [0, 239], [0, 243]]]], // 247\n[[[], [39, [0, 241]]]], // 248\n[[[], [40, [0, 248], [0, 305]]]], // 249\n[[[], [41, [0, 239], [0, 241], [0, 237]]]], // 250\n[[[], [42, [0, 250], [0, 289]]]], // 251\n[[[], [43, [0, 239], [0, 237]]]], // 252\n[[[], [34, [0, 375], [1, 17], [1, 17], [1, 18], [1, 17]]]], // 253\n[[[], [34, [0, 375], [0, 390], [1, 36], [1, 20], [1, 0]]]], // 254\n[[[], [34, [0, 375], [1, 13], [0, 414], [1, 13], [1, 13]]]], // 255\n[[[], [34, [0, 375], [1, 32], [0, 87], [1, 32], [1, 32]]]], // 256\n[[[], [34, [0, 375], [1, 8], [1, 40], [1, 8], [1, 8]]]], // 257\n[[[], [34, [0, 375], [1, 23], [1, 41], [1, 24], [1, 23]]]], // 258\n[[[], [34, [0, 375], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 259\n[[[], [35, [0, 257]]]], // 260\n[[[], [36, [0, 257], [0, 255], [1, 38]]]], // 261\n[[[], [37, [0, 256], [0, 260]]]], // 262\n[[[], [38, [0, 255], [0, 259]]]], // 263\n[[[], [39, [0, 257]]]], // 264\n[[[], [40, [0, 264], [0, 305]]]], // 265\n[[[], [41, [0, 255], [0, 257], [0, 253]]]], // 266\n[[[], [42, [0, 266], [0, 289]]]], // 267\n[[[], [43, [0, 255], [0, 253]]]], // 268\n[[[], [45, [0, 117], [0, 134], [0, 151], [0, 168], [0, 185]]]], // 269\n[[[], [21, [0, 269], [0, 324]]]], // 270\n[[[], [46, [0, 284]]]], // 271\n[[[], [47, [0, 278], [0, 276]]]], // 272\n[[[], [48, [0, 118], [0, 135], [0, 152], [0, 169], [0, 186], [0, 105], [0, 122], [0, 139], [0, 156], [0, 173]]]], // 273\n[[[], [45, [0, 106], [0, 123], [0, 140], [0, 157], [0, 174]]]], // 274\n[[[], [45, [0, 112], [0, 129], [0, 146], [0, 163], [0, 180]]]], // 275\n[[[], [34, [0, 375], [0, 380], [1, 42], [1, 43], [1, 44]]]], // 276\n[[[], [49, [0, 275], [0, 295]]]], // 277\n[[[], [48, [0, 118], [0, 135], [0, 152], [0, 169], [0, 186], [0, 107], [0, 124], [0, 141], [0, 158], [0, 175]]]], // 278\n[[[], [45, [0, 119], [0, 136], [0, 153], [0, 170], [0, 187]]]], // 279\n[[[], [48, [0, 118], [0, 135], [0, 152], [0, 169], [0, 186], [0, 113], [0, 130], [0, 147], [0, 164], [0, 181]]]], // 280\n[[[], [22, [0, 282], [0, 272]]]], // 281\n[[[], [50, [0, 321], [0, 286], [0, 273], [0, 271]]]], // 282\n[[[], [48, [0, 118], [0, 135], [0, 152], [0, 169], [0, 186], [0, 108], [0, 125], [0, 142], [0, 159], [0, 176]]]], // 283\n[[[], [48, [0, 118], [0, 135], [0, 152], [0, 169], [0, 186], [0, 109], [0, 126], [0, 143], [0, 160], [0, 177]]]], // 284\n[[[], [51, [0, 117], [0, 115], [0, 134], [0, 132], [0, 151], [0, 149], [0, 168], [0, 166], [0, 185], [0, 183]]]], // 285\n[[[], [48, [0, 116], [0, 133], [0, 150], [0, 167], [0, 184], [0, 114], [0, 131], [0, 148], [0, 165], [0, 182]]]], // 286\n[[[], [45, [0, 120], [0, 137], [0, 154], [0, 171], [0, 188]]]], // 287\n[[[], [21, [0, 287], [0, 275]]]], // 288\n[[[], [45, [0, 202], [0, 218], [0, 234], [0, 250], [0, 266]]]], // 289\n[[[], [21, [0, 289], [0, 324]]]], // 290\n[[[], [46, [0, 304]]]], // 291\n[[[], [47, [0, 298], [0, 296]]]], // 292\n[[[], [48, [0, 203], [0, 219], [0, 235], [0, 251], [0, 267], [0, 190], [0, 206], [0, 222], [0, 238], [0, 254]]]], // 293\n[[[], [45, [0, 191], [0, 207], [0, 223], [0, 239], [0, 255]]]], // 294\n[[[], [45, [0, 197], [0, 213], [0, 229], [0, 245], [0, 261]]]], // 295\n[[[], [52, [0, 297], [0, 288], [0, 276]]]], // 296\n[[[], [49, [0, 275], [0, 295]]]], // 297\n[[[], [48, [0, 203], [0, 219], [0, 235], [0, 251], [0, 267], [0, 192], [0, 208], [0, 224], [0, 240], [0, 256]]]], // 298\n[[[], [45, [0, 204], [0, 220], [0, 236], [0, 252], [0, 268]]]], // 299\n[[[], [48, [0, 203], [0, 219], [0, 235], [0, 251], [0, 267], [0, 198], [0, 214], [0, 230], [0, 246], [0, 262]]]], // 300\n[[[], [22, [0, 302], [0, 292]]]], // 301\n[[[], [50, [0, 321], [0, 306], [0, 293], [0, 291]]]], // 302\n[[[], [48, [0, 203], [0, 219], [0, 235], [0, 251], [0, 267], [0, 193], [0, 209], [0, 225], [0, 241], [0, 257]]]], // 303\n[[[], [48, [0, 203], [0, 219], [0, 235], [0, 251], [0, 267], [0, 194], [0, 210], [0, 226], [0, 242], [0, 258]]]], // 304\n[[[], [51, [0, 202], [0, 200], [0, 218], [0, 216], [0, 234], [0, 232], [0, 250], [0, 248], [0, 266], [0, 264]]]], // 305\n[[[], [48, [0, 201], [0, 217], [0, 233], [0, 249], [0, 265], [0, 199], [0, 215], [0, 231], [0, 247], [0, 263]]]], // 306\n[[[], [34, [0, 375], [0, 379], [0, 396], [0, 420], [0, 431]]]], // 307\n[[[], [21, [0, 312], [0, 307]]]], // 308\n[[[], [48, [0, 270], [0, 290], [0, 280], [0, 300]]]], // 309\n[[[], [53, [0, 309], [0, 308]]]], // 310\n[[[], [54, [0, 318], [0, 317], [0, 310]]]], // 311\n[[[], [45, [0, 274], [0, 294]]]], // 312\n[[[], [55, [0, 307]]]], // 313\n[[[], [56, [0, 279], [0, 299], [0, 307]]]], // 314\n[[[], [57, [0, 322]]]], // 315\n[[[], [21, [0, 314], [0, 315]]]], // 316\n[[[], [58, [0, 322], [0, 314]]]], // 317\n[[[], [45, [0, 281], [0, 301]]]], // 318\n[[[], [59, [0, 322]]]], // 319\n[[[], [60, [0, 323]]]], // 320\n[[[], [61, [0, 316], [0, 320], [0, 319]]]], // 321\n[[[], [48, [0, 270], [0, 290], [0, 283], [0, 303]]]], // 322\n[[[], [62, [0, 322]]]], // 323\n[[[], [45, [0, 269], [0, 289]]]], // 324\n[[[], [63, [0, 374], [0, 338]]]], // 325\n[[[], [64, [0, 374], [0, 361]]]], // 326\n[[[], [25, [0, 96]]]], // 327\n[[[], [65, [0, 326], [0, 325], [0, 327]]]], // 328\n[[[], [66, [0, 326], [0, 327]]]], // 329\n[[[], [67, [0, 328], [0, 329]]]], // 330\n[[[], [68, [0, 342], [0, 333]]]], // 331\n[[[], [68, [0, 344], [0, 350]]]], // 332\n[[[], [69, [0, 371]]]], // 333\n[[[], [70, [0, 333], [0, 356], [0, 359]]]], // 334\n[[[], [71, [0, 374], [0, 334]]]], // 335\n[[[], [25, [0, 93]]]], // 336\n[[[], [72, [0, 314]]]], // 337\n[[[], [73, [0, 336], [0, 337]]]], // 338\n[[[], [74, [0, 340], [0, 356], [0, 360]]]], // 339\n[[[], [75, [0, 361], [0, 338]]]], // 340\n[[[], [71, [0, 374], [0, 340]]]], // 341\n[[[], [74, [0, 343], [0, 356], [0, 360]]]], // 342\n[[[], [76, [0, 374], [0, 344]]]], // 343\n[[[], [77, [0, 374], [0, 330]]]], // 344\n[[[], [78, [0, 342], [0, 333]]]], // 345\n[[[], [78, [0, 343], [0, 334]]]], // 346\n[[[], [78, [0, 344], [0, 335]]]], // 347\n[[[], [74, [0, 349], [0, 356], [0, 360]]]], // 348\n[[[], [76, [0, 374], [0, 350]]]], // 349\n[[[], [79, [0, 344], [0, 342]]]], // 350\n[[[], [74, [0, 352], [0, 356], [0, 360]]]], // 351\n[[[], [76, [0, 374], [0, 353]]]], // 352\n[[[], [79, [0, 347], [0, 345]]]], // 353\n[[[20, 45], [25, [0, 103]]], [[], [80, [0, 50], [0, 53], [0, 313]]]], // 354\n[[[25, 16], [25, [0, 102]]], [[], [33, [0, 101], [0, 354]]]], // 355\n[[[], [81, [0, 322]]]], // 356\n[[[], [82, [0, 322]]]], // 357\n[[[], [83, [0, 322]]]], // 358\n[[[], [84, [0, 316], [0, 358], [0, 357]]]], // 359\n[[[], [85, [0, 316], [0, 358], [0, 357]]]], // 360\n[[[], [86, [0, 355], [0, 356], [0, 359]]]], // 361\n[[[28, 46], [25, [0, 351]]], [[], [25, [0, 348]]]], // 362\n[[[], [87, [0, 373], [0, 371], [0, 365]]]], // 363\n[[[], [17, [0, 363]]]], // 364\n[[[], [88, [0, 322]]]], // 365\n[[[], [89, [0, 328], [0, 329], [0, 330]]]], // 366\n[[[], [19, [0, 91], [0, 366]]]], // 367\n[[[], [90, [0, 371], [0, 365]]]], // 368\n[[[], [20, [0, 362]]]], // 369\n[[[28, 46], [25, [0, 352]]], [[], [25, [0, 349]]]], // 370\n[[[], [25, [0, 318]]]], // 371\n[[[], [91, [0, 363], [0, 355], [0, 94]]]], // 372\n[[[28, 46], [25, [0, 353]]], [[], [25, [0, 350]]]], // 373\n[[[], [25, [0, 311]]]], // 374\n[[[17, 47], [92, [0, 376]]], [[17, 48], [9, [1, 48]]], [[17, 49], [9, [1, 49]]], [[17, 50], [9, [1, 50]]], [[17, 51], [9, [1, 51]]], [[], [9, [1, 52]]]], // 375\n[[[], [2]]], // 376\n[[[], [9, [1, 48]]]], // 377\n[[[21, 53], [93, [0, 87]]], [[], [2]]], // 378\n[[[17, 47], [94, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 23]]]], // 379\n[[[17, 47], [95, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 44]]]], // 380\n[[[17, 47], [96, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 13]]]], // 381\n[[[17, 47], [97, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 13]]]], // 382\n[[[17, 47], [98, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 13]]]], // 383\n[[[17, 47], [99, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 13]]]], // 384\n[[[17, 47], [100, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 13]]]], // 385\n[[[17, 47], [101, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 13]]]], // 386\n[[[17, 47], [102, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 8]]]], // 387\n[[[17, 47], [103, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 8]]]], // 388\n[[[17, 47], [104, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 0]]]], // 389\n[[[17, 47], [105, [0, 376]]], [[17, 48], [2]], [[], [9, [1, 0]]]], // 390\n[[[], [106, [0, 381], [0, 378]]]], // 391\n[[[], [107, [0, 381], [0, 378]]]], // 392\n[[[], [9, [1, 49]]]], // 393\n[[[17, 47], [108, [0, 376]]], [[17, 49], [2]], [[], [9, [1, 54]]]], // 394\n[[[17, 47], [109, [0, 376]]], [[17, 49], [2]], [[], [9, [1, 13]]]], // 395\n[[[17, 47], [110, [0, 376]]], [[17, 49], [2]], [[], [9, [1, 23]]]], // 396\n[[[17, 47], [111, [0, 376]]], [[17, 49], [2]], [[], [9, [1, 13]]]], // 397\n[[[22, 53], [25, [0, 403]]], [[], [25, [0, 397]]]], // 398\n[[[], [112, [0, 396], [0, 394]]]], // 399\n[[[], [113, [0, 399]]]], // 400\n[[[], [114, [0, 399]]]], // 401\n[[[], [115, [0, 399], [0, 394]]]], // 402\n[[[], [116, [0, 399], [0, 394]]]], // 403\n[[[], [117, [0, 398], [0, 395]]]], // 404\n[[[], [118, [0, 398], [0, 395]]]], // 405\n[[[], [119, [0, 398], [0, 395]]]], // 406\n[[[], [120, [0, 398], [0, 395]]]], // 407\n[[[], [121, [0, 398], [0, 395]]]], // 408\n[[[], [122, [0, 398], [0, 395]]]], // 409\n[[[], [123, [0, 398], [0, 395]]]], // 410\n[[[], [124, [0, 398], [0, 395]]]], // 411\n[[[], [125, [0, 398], [0, 395]]]], // 412\n[[[], [126, [0, 398], [0, 395]]]], // 413\n[[[], [127, [0, 398], [0, 395]]]], // 414\n[[[], [9, [1, 50]]]], // 415\n[[[17, 47], [128, [0, 376]]], [[17, 50], [2]], [[], [9, [1, 13]]]], // 416\n[[[17, 47], [129, [0, 376]]], [[17, 50], [2]], [[], [9, [1, 13]]]], // 417\n[[[17, 47], [130, [0, 376]]], [[17, 50], [2]], [[], [9, [1, 13]]]], // 418\n[[[17, 47], [131, [0, 376]]], [[17, 50], [2]], [[], [9, [1, 23]]]], // 419\n[[[], [132, [0, 419]]]], // 420\n[[[], [133, [0, 416], [0, 419]]]], // 421\n[[[], [134, [0, 416], [0, 418]]]], // 422\n[[[], [135, [0, 416], [0, 418]]]], // 423\n[[[], [136, [0, 416], [0, 417]]]], // 424\n[[[], [137, [0, 416], [0, 419]]]], // 425\n[[[], [138, [0, 416], [0, 419]]]], // 426\n[[[], [139, [0, 416], [0, 418], [0, 419]]]], // 427\n[[[], [9, [1, 51]]]], // 428\n[[[17, 47], [140, [0, 376]]], [[17, 51], [2]], [[], [9, [1, 55]]]], // 429\n[[[17, 47], [141, [0, 376]]], [[17, 51], [2]], [[], [9, [1, 13]]]], // 430\n[[[], [142, [0, 429]]]], // 431\n[[[], [143, [0, 429], [0, 430]]]], // 432\n[[[], [144, [0, 429]]]], // 433\n[[[], [145, [0, 429], [0, 430]]]], // 434\n[[[], [146, [0, 429], [0, 430]]]], // 435\n[[[], [147, [0, 429], [0, 430]]]], // 436\n[[[], [148, [0, 429], [0, 430]]]], // 437\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 438\n[[[], [34, [0, 709], [0, 723], [1, 0], [1, 20], [1, 0]]]], // 439\n[[[], [34, [0, 709], [0, 716], [0, 739], [0, 755], [0, 766]]]], // 440\n[[[], [34, [0, 709], [0, 83], [0, 83], [0, 83], [0, 83]]]], // 441\n[[[], [34, [0, 709], [0, 720], [1, 21], [1, 22], [0, 768]]]], // 442\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 443\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 444\n[[[], [35, [0, 442]]]], // 445\n[[[], [36, [0, 442], [0, 440], [1, 28]]]], // 446\n[[[], [37, [0, 441], [0, 445]]]], // 447\n[[[], [38, [0, 440], [0, 444]]]], // 448\n[[[], [39, [0, 442]]]], // 449\n[[[], [40, [0, 449], [0, 619]]]], // 450\n[[[], [41, [0, 440], [0, 442], [0, 438]]]], // 451\n[[[], [42, [0, 451], [0, 603]]]], // 452\n[[[], [43, [0, 440], [0, 438]]]], // 453\n[[[], [44, [0, 446], [0, 441]]]], // 454\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 455\n[[[], [34, [0, 709], [0, 723], [1, 0], [1, 20], [1, 0]]]], // 456\n[[[], [34, [0, 709], [0, 717], [0, 740], [0, 756], [0, 767]]]], // 457\n[[[], [34, [0, 709], [0, 84], [0, 84], [0, 84], [0, 84]]]], // 458\n[[[], [34, [0, 709], [1, 29], [1, 30], [1, 31], [1, 29]]]], // 459\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 460\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 461\n[[[], [35, [0, 459]]]], // 462\n[[[], [36, [0, 459], [0, 457], [1, 28]]]], // 463\n[[[], [37, [0, 458], [0, 462]]]], // 464\n[[[], [38, [0, 457], [0, 461]]]], // 465\n[[[], [39, [0, 459]]]], // 466\n[[[], [40, [0, 466], [0, 619]]]], // 467\n[[[], [41, [0, 457], [0, 459], [0, 455]]]], // 468\n[[[], [42, [0, 468], [0, 603]]]], // 469\n[[[], [43, [0, 457], [0, 455]]]], // 470\n[[[], [44, [0, 463], [0, 458]]]], // 471\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 472\n[[[], [34, [0, 709], [0, 723], [1, 0], [1, 20], [1, 0]]]], // 473\n[[[], [34, [0, 709], [0, 718], [0, 741], [0, 757], [1, 13]]]], // 474\n[[[], [34, [0, 709], [0, 85], [0, 84], [0, 83], [1, 32]]]], // 475\n[[[], [34, [0, 709], [1, 19], [1, 33], [1, 34], [1, 8]]]], // 476\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 477\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 478\n[[[], [35, [0, 476]]]], // 479\n[[[], [36, [0, 476], [0, 474], [1, 28]]]], // 480\n[[[], [37, [0, 475], [0, 479]]]], // 481\n[[[], [38, [0, 474], [0, 478]]]], // 482\n[[[], [39, [0, 476]]]], // 483\n[[[], [40, [0, 483], [0, 619]]]], // 484\n[[[], [41, [0, 474], [0, 476], [0, 472]]]], // 485\n[[[], [42, [0, 485], [0, 603]]]], // 486\n[[[], [43, [0, 474], [0, 472]]]], // 487\n[[[], [44, [0, 480], [0, 475]]]], // 488\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 19], [1, 17]]]], // 489\n[[[], [34, [0, 709], [0, 723], [1, 0], [1, 20], [1, 0]]]], // 490\n[[[], [34, [0, 709], [0, 725], [0, 742], [0, 758], [1, 13]]]], // 491\n[[[], [34, [0, 709], [0, 83], [0, 85], [0, 85], [1, 32]]]], // 492\n[[[], [34, [0, 709], [0, 721], [1, 35], [1, 34], [1, 8]]]], // 493\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 23], [1, 23]]]], // 494\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 495\n[[[], [35, [0, 493]]]], // 496\n[[[], [36, [0, 493], [0, 491], [1, 28]]]], // 497\n[[[], [37, [0, 492], [0, 496]]]], // 498\n[[[], [38, [0, 491], [0, 495]]]], // 499\n[[[], [39, [0, 493]]]], // 500\n[[[], [40, [0, 500], [0, 619]]]], // 501\n[[[], [41, [0, 491], [0, 493], [0, 489]]]], // 502\n[[[], [42, [0, 502], [0, 603]]]], // 503\n[[[], [43, [0, 491], [0, 489]]]], // 504\n[[[], [44, [0, 497], [0, 492]]]], // 505\n[[[], [9, [1, 17]]]], // 506\n[[[], [9, [1, 0]]]], // 507\n[[[], [9, [1, 13]]]], // 508\n[[[], [9, [1, 32]]]], // 509\n[[[], [9, [1, 8]]]], // 510\n[[[], [9, [1, 23]]]], // 511\n[[[], [9, [1, 25]]]], // 512\n[[[], [35, [0, 510]]]], // 513\n[[[], [36, [0, 510], [0, 508], [1, 28]]]], // 514\n[[[], [37, [0, 509], [0, 513]]]], // 515\n[[[], [38, [0, 508], [0, 512]]]], // 516\n[[[], [39, [0, 510]]]], // 517\n[[[], [40, [0, 517], [0, 619]]]], // 518\n[[[], [41, [0, 508], [0, 510], [0, 506]]]], // 519\n[[[], [42, [0, 519], [0, 603]]]], // 520\n[[[], [43, [0, 508], [0, 506]]]], // 521\n[[[], [44, [0, 514], [0, 509]]]], // 522\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 523\n[[[], [34, [0, 709], [0, 724], [1, 36], [1, 20], [1, 0]]]], // 524\n[[[], [34, [0, 709], [0, 726], [0, 744], [0, 759], [0, 769]]]], // 525\n[[[], [34, [0, 709], [0, 87], [0, 88], [0, 88], [0, 87]]]], // 526\n[[[], [34, [0, 709], [0, 721], [1, 21], [1, 22], [1, 37]]]], // 527\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 528\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 529\n[[[], [35, [0, 527]]]], // 530\n[[[], [36, [0, 527], [0, 525], [1, 38]]]], // 531\n[[[], [37, [0, 526], [0, 530]]]], // 532\n[[[], [38, [0, 525], [0, 529]]]], // 533\n[[[], [39, [0, 527]]]], // 534\n[[[], [40, [0, 534], [0, 639]]]], // 535\n[[[], [41, [0, 525], [0, 527], [0, 523]]]], // 536\n[[[], [42, [0, 536], [0, 623]]]], // 537\n[[[], [43, [0, 525], [0, 523]]]], // 538\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 539\n[[[], [34, [0, 709], [0, 724], [1, 39], [1, 20], [1, 0]]]], // 540\n[[[], [34, [0, 709], [0, 719], [0, 745], [0, 760], [0, 770]]]], // 541\n[[[], [34, [0, 709], [0, 88], [0, 88], [0, 88], [0, 88]]]], // 542\n[[[], [34, [0, 709], [0, 722], [1, 30], [1, 31], [0, 771]]]], // 543\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 544\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 545\n[[[], [35, [0, 543]]]], // 546\n[[[], [36, [0, 543], [0, 541], [1, 38]]]], // 547\n[[[], [37, [0, 542], [0, 546]]]], // 548\n[[[], [38, [0, 541], [0, 545]]]], // 549\n[[[], [39, [0, 543]]]], // 550\n[[[], [40, [0, 550], [0, 639]]]], // 551\n[[[], [41, [0, 541], [0, 543], [0, 539]]]], // 552\n[[[], [42, [0, 552], [0, 623]]]], // 553\n[[[], [43, [0, 541], [0, 539]]]], // 554\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 555\n[[[], [34, [0, 709], [0, 724], [1, 39], [1, 20], [1, 0]]]], // 556\n[[[], [34, [0, 709], [1, 13], [0, 746], [0, 761], [1, 13]]]], // 557\n[[[], [34, [0, 709], [1, 32], [0, 88], [0, 88], [1, 32]]]], // 558\n[[[], [34, [0, 709], [1, 8], [1, 33], [1, 34], [1, 8]]]], // 559\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 560\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 561\n[[[], [35, [0, 559]]]], // 562\n[[[], [36, [0, 559], [0, 557], [1, 38]]]], // 563\n[[[], [37, [0, 558], [0, 562]]]], // 564\n[[[], [38, [0, 557], [0, 561]]]], // 565\n[[[], [39, [0, 559]]]], // 566\n[[[], [40, [0, 566], [0, 639]]]], // 567\n[[[], [41, [0, 557], [0, 559], [0, 555]]]], // 568\n[[[], [42, [0, 568], [0, 623]]]], // 569\n[[[], [43, [0, 557], [0, 555]]]], // 570\n[[[], [34, [0, 709], [1, 17], [1, 18], [1, 18], [1, 17]]]], // 571\n[[[], [34, [0, 709], [0, 724], [1, 39], [1, 20], [1, 0]]]], // 572\n[[[], [34, [0, 709], [1, 13], [0, 747], [1, 13], [1, 13]]]], // 573\n[[[], [34, [0, 709], [1, 32], [0, 88], [1, 32], [1, 32]]]], // 574\n[[[], [34, [0, 709], [1, 8], [1, 35], [1, 8], [1, 8]]]], // 575\n[[[], [34, [0, 709], [1, 23], [1, 24], [1, 24], [1, 23]]]], // 576\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 577\n[[[], [35, [0, 575]]]], // 578\n[[[], [36, [0, 575], [0, 573], [1, 38]]]], // 579\n[[[], [37, [0, 574], [0, 578]]]], // 580\n[[[], [38, [0, 573], [0, 577]]]], // 581\n[[[], [39, [0, 575]]]], // 582\n[[[], [40, [0, 582], [0, 639]]]], // 583\n[[[], [41, [0, 573], [0, 575], [0, 571]]]], // 584\n[[[], [42, [0, 584], [0, 623]]]], // 585\n[[[], [43, [0, 573], [0, 571]]]], // 586\n[[[], [34, [0, 709], [1, 17], [1, 17], [1, 18], [1, 17]]]], // 587\n[[[], [34, [0, 709], [0, 724], [1, 36], [1, 20], [1, 0]]]], // 588\n[[[], [34, [0, 709], [1, 13], [0, 748], [1, 13], [1, 13]]]], // 589\n[[[], [34, [0, 709], [1, 32], [0, 87], [1, 32], [1, 32]]]], // 590\n[[[], [34, [0, 709], [1, 8], [1, 40], [1, 8], [1, 8]]]], // 591\n[[[], [34, [0, 709], [1, 23], [1, 41], [1, 24], [1, 23]]]], // 592\n[[[], [34, [0, 709], [1, 25], [1, 26], [1, 27], [1, 26]]]], // 593\n[[[], [35, [0, 591]]]], // 594\n[[[], [36, [0, 591], [0, 589], [1, 38]]]], // 595\n[[[], [37, [0, 590], [0, 594]]]], // 596\n[[[], [38, [0, 589], [0, 593]]]], // 597\n[[[], [39, [0, 591]]]], // 598\n[[[], [40, [0, 598], [0, 639]]]], // 599\n[[[], [41, [0, 589], [0, 591], [0, 587]]]], // 600\n[[[], [42, [0, 600], [0, 623]]]], // 601\n[[[], [43, [0, 589], [0, 587]]]], // 602\n[[[], [45, [0, 451], [0, 468], [0, 485], [0, 502], [0, 519]]]], // 603\n[[[], [21, [0, 603], [0, 658]]]], // 604\n[[[], [46, [0, 618]]]], // 605\n[[[], [47, [0, 612], [0, 610]]]], // 606\n[[[], [48, [0, 452], [0, 469], [0, 486], [0, 503], [0, 520], [0, 439], [0, 456], [0, 473], [0, 490], [0, 507]]]], // 607\n[[[], [45, [0, 440], [0, 457], [0, 474], [0, 491], [0, 508]]]], // 608\n[[[], [45, [0, 446], [0, 463], [0, 480], [0, 497], [0, 514]]]], // 609\n[[[], [34, [0, 709], [0, 714], [1, 42], [1, 43], [1, 44]]]], // 610\n[[[], [49, [0, 609], [0, 629]]]], // 611\n[[[], [48, [0, 452], [0, 469], [0, 486], [0, 503], [0, 520], [0, 441], [0, 458], [0, 475], [0, 492], [0, 509]]]], // 612\n[[[], [45, [0, 453], [0, 470], [0, 487], [0, 504], [0, 521]]]], // 613\n[[[], [48, [0, 452], [0, 469], [0, 486], [0, 503], [0, 520], [0, 447], [0, 464], [0, 481], [0, 498], [0, 515]]]], // 614\n[[[], [22, [0, 616], [0, 606]]]], // 615\n[[[], [50, [0, 655], [0, 620], [0, 607], [0, 605]]]], // 616\n[[[], [48, [0, 452], [0, 469], [0, 486], [0, 503], [0, 520], [0, 442], [0, 459], [0, 476], [0, 493], [0, 510]]]], // 617\n[[[], [48, [0, 452], [0, 469], [0, 486], [0, 503], [0, 520], [0, 443], [0, 460], [0, 477], [0, 494], [0, 511]]]], // 618\n[[[], [51, [0, 451], [0, 449], [0, 468], [0, 466], [0, 485], [0, 483], [0, 502], [0, 500], [0, 519], [0, 517]]]], // 619\n[[[], [48, [0, 450], [0, 467], [0, 484], [0, 501], [0, 518], [0, 448], [0, 465], [0, 482], [0, 499], [0, 516]]]], // 620\n[[[], [45, [0, 454], [0, 471], [0, 488], [0, 505], [0, 522]]]], // 621\n[[[], [21, [0, 621], [0, 609]]]], // 622\n[[[], [45, [0, 536], [0, 552], [0, 568], [0, 584], [0, 600]]]], // 623\n[[[], [21, [0, 623], [0, 658]]]], // 624\n[[[], [46, [0, 638]]]], // 625\n[[[], [47, [0, 632], [0, 630]]]], // 626\n[[[], [48, [0, 537], [0, 553], [0, 569], [0, 585], [0, 601], [0, 524], [0, 540], [0, 556], [0, 572], [0, 588]]]], // 627\n[[[], [45, [0, 525], [0, 541], [0, 557], [0, 573], [0, 589]]]], // 628\n[[[], [45, [0, 531], [0, 547], [0, 563], [0, 579], [0, 595]]]], // 629\n[[[], [52, [0, 631], [0, 622], [0, 610]]]], // 630\n[[[], [49, [0, 609], [0, 629]]]], // 631\n[[[], [48, [0, 537], [0, 553], [0, 569], [0, 585], [0, 601], [0, 526], [0, 542], [0, 558], [0, 574], [0, 590]]]], // 632\n[[[], [45, [0, 538], [0, 554], [0, 570], [0, 586], [0, 602]]]], // 633\n[[[], [48, [0, 537], [0, 553], [0, 569], [0, 585], [0, 601], [0, 532], [0, 548], [0, 564], [0, 580], [0, 596]]]], // 634\n[[[], [22, [0, 636], [0, 626]]]], // 635\n[[[], [50, [0, 655], [0, 640], [0, 627], [0, 625]]]], // 636\n[[[], [48, [0, 537], [0, 553], [0, 569], [0, 585], [0, 601], [0, 527], [0, 543], [0, 559], [0, 575], [0, 591]]]], // 637\n[[[], [48, [0, 537], [0, 553], [0, 569], [0, 585], [0, 601], [0, 528], [0, 544], [0, 560], [0, 576], [0, 592]]]], // 638\n[[[], [51, [0, 536], [0, 534], [0, 552], [0, 550], [0, 568], [0, 566], [0, 584], [0, 582], [0, 600], [0, 598]]]], // 639\n[[[], [48, [0, 535], [0, 551], [0, 567], [0, 583], [0, 599], [0, 533], [0, 549], [0, 565], [0, 581], [0, 597]]]], // 640\n[[[], [34, [0, 709], [0, 713], [0, 730], [0, 754], [0, 765]]]], // 641\n[[[], [21, [0, 646], [0, 641]]]], // 642\n[[[], [48, [0, 604], [0, 624], [0, 614], [0, 634]]]], // 643\n[[[], [53, [0, 643], [0, 642]]]], // 644\n[[[], [54, [0, 652], [0, 651], [0, 644]]]], // 645\n[[[], [45, [0, 608], [0, 628]]]], // 646\n[[[], [55, [0, 641]]]], // 647\n[[[], [56, [0, 613], [0, 633], [0, 641]]]], // 648\n[[[], [57, [0, 656]]]], // 649\n[[[], [21, [0, 648], [0, 649]]]], // 650\n[[[], [58, [0, 656], [0, 648]]]], // 651\n[[[], [45, [0, 615], [0, 635]]]], // 652\n[[[], [59, [0, 656]]]], // 653\n[[[], [60, [0, 657]]]], // 654\n[[[], [61, [0, 650], [0, 654], [0, 653]]]], // 655\n[[[], [48, [0, 604], [0, 624], [0, 617], [0, 637]]]], // 656\n[[[], [62, [0, 656]]]], // 657\n[[[], [45, [0, 603], [0, 623]]]], // 658\n[[[], [63, [0, 708], [0, 672]]]], // 659\n[[[], [64, [0, 708], [0, 695]]]], // 660\n[[[], [25, [0, 96]]]], // 661\n[[[], [65, [0, 660], [0, 659], [0, 661]]]], // 662\n[[[], [66, [0, 660], [0, 661]]]], // 663\n[[[], [67, [0, 662], [0, 663]]]], // 664\n[[[], [68, [0, 676], [0, 667]]]], // 665\n[[[], [68, [0, 678], [0, 684]]]], // 666\n[[[], [69, [0, 705]]]], // 667\n[[[], [70, [0, 667], [0, 690], [0, 693]]]], // 668\n[[[], [71, [0, 708], [0, 668]]]], // 669\n[[[], [25, [0, 93]]]], // 670\n[[[], [72, [0, 648]]]], // 671\n[[[], [73, [0, 670], [0, 671]]]], // 672\n[[[], [74, [0, 674], [0, 690], [0, 694]]]], // 673\n[[[], [75, [0, 695], [0, 672]]]], // 674\n[[[], [71, [0, 708], [0, 674]]]], // 675\n[[[], [74, [0, 677], [0, 690], [0, 694]]]], // 676\n[[[], [76, [0, 708], [0, 678]]]], // 677\n[[[], [77, [0, 708], [0, 664]]]], // 678\n[[[], [78, [0, 676], [0, 667]]]], // 679\n[[[], [78, [0, 677], [0, 668]]]], // 680\n[[[], [78, [0, 678], [0, 669]]]], // 681\n[[[], [74, [0, 683], [0, 690], [0, 694]]]], // 682\n[[[], [76, [0, 708], [0, 684]]]], // 683\n[[[], [79, [0, 678], [0, 676]]]], // 684\n[[[], [74, [0, 686], [0, 690], [0, 694]]]], // 685\n[[[], [76, [0, 708], [0, 687]]]], // 686\n[[[], [79, [0, 681], [0, 679]]]], // 687\n[[[20, 45], [25, [0, 103]]], [[], [80, [0, 50], [0, 53], [0, 647]]]], // 688\n[[[25, 16], [25, [0, 102]]], [[], [33, [0, 101], [0, 688]]]], // 689\n[[[], [81, [0, 656]]]], // 690\n[[[], [82, [0, 656]]]], // 691\n[[[], [83, [0, 656]]]], // 692\n[[[], [84, [0, 650], [0, 692], [0, 691]]]], // 693\n[[[], [85, [0, 650], [0, 692], [0, 691]]]], // 694\n[[[], [86, [0, 689], [0, 690], [0, 693]]]], // 695\n[[[28, 46], [25, [0, 685]]], [[], [25, [0, 682]]]], // 696\n[[[], [87, [0, 707], [0, 705], [0, 699]]]], // 697\n[[[], [17, [0, 697]]]], // 698\n[[[], [88, [0, 656]]]], // 699\n[[[], [89, [0, 662], [0, 663], [0, 664]]]], // 700\n[[[], [19, [0, 91], [0, 700]]]], // 701\n[[[], [90, [0, 705], [0, 699]]]], // 702\n[[[], [20, [0, 696]]]], // 703\n[[[28, 46], [25, [0, 686]]], [[], [25, [0, 683]]]], // 704\n[[[], [25, [0, 652]]]], // 705\n[[[], [91, [0, 697], [0, 689], [0, 94]]]], // 706\n[[[28, 46], [25, [0, 687]]], [[], [25, [0, 684]]]], // 707\n[[[], [25, [0, 645]]]], // 708\n[[[18, 47], [92, [0, 710]]], [[18, 48], [9, [1, 48]]], [[18, 49], [9, [1, 49]]], [[18, 50], [9, [1, 50]]], [[18, 51], [9, [1, 51]]], [[], [9, [1, 52]]]], // 709\n[[[], [2]]], // 710\n[[[], [9, [1, 48]]]], // 711\n[[[21, 53], [93, [0, 87]]], [[], [2]]], // 712\n[[[18, 47], [94, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 23]]]], // 713\n[[[18, 47], [95, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 44]]]], // 714\n[[[18, 47], [96, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 13]]]], // 715\n[[[18, 47], [97, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 13]]]], // 716\n[[[18, 47], [98, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 13]]]], // 717\n[[[18, 47], [99, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 13]]]], // 718\n[[[18, 47], [100, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 13]]]], // 719\n[[[18, 47], [101, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 13]]]], // 720\n[[[18, 47], [102, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 8]]]], // 721\n[[[18, 47], [103, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 8]]]], // 722\n[[[18, 47], [104, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 0]]]], // 723\n[[[18, 47], [105, [0, 710]]], [[18, 48], [2]], [[], [9, [1, 0]]]], // 724\n[[[], [106, [0, 715], [0, 712]]]], // 725\n[[[], [107, [0, 715], [0, 712]]]], // 726\n[[[], [9, [1, 49]]]], // 727\n[[[18, 47], [108, [0, 710]]], [[18, 49], [2]], [[], [9, [1, 54]]]], // 728\n[[[18, 47], [109, [0, 710]]], [[18, 49], [2]], [[], [9, [1, 13]]]], // 729\n[[[18, 47], [110, [0, 710]]], [[18, 49], [2]], [[], [9, [1, 23]]]], // 730\n[[[18, 47], [111, [0, 710]]], [[18, 49], [2]], [[], [9, [1, 13]]]], // 731\n[[[22, 53], [25, [0, 737]]], [[], [25, [0, 731]]]], // 732\n[[[], [112, [0, 730], [0, 728]]]], // 733\n[[[], [113, [0, 733]]]], // 734\n[[[], [114, [0, 733]]]], // 735\n[[[], [115, [0, 733], [0, 728]]]], // 736\n[[[], [116, [0, 733], [0, 728]]]], // 737\n[[[], [117, [0, 732], [0, 729]]]], // 738\n[[[], [118, [0, 732], [0, 729]]]], // 739\n[[[], [119, [0, 732], [0, 729]]]], // 740\n[[[], [120, [0, 732], [0, 729]]]], // 741\n[[[], [121, [0, 732], [0, 729]]]], // 742\n[[[], [122, [0, 732], [0, 729]]]], // 743\n[[[], [123, [0, 732], [0, 729]]]], // 744\n[[[], [124, [0, 732], [0, 729]]]], // 745\n[[[], [125, [0, 732], [0, 729]]]], // 746\n[[[], [126, [0, 732], [0, 729]]]], // 747\n[[[], [127, [0, 732], [0, 729]]]], // 748\n[[[], [9, [1, 50]]]], // 749\n[[[18, 47], [128, [0, 710]]], [[18, 50], [2]], [[], [9, [1, 13]]]], // 750\n[[[18, 47], [129, [0, 710]]], [[18, 50], [2]], [[], [9, [1, 13]]]], // 751\n[[[18, 47], [130, [0, 710]]], [[18, 50], [2]], [[], [9, [1, 13]]]], // 752\n[[[18, 47], [131, [0, 710]]], [[18, 50], [2]], [[], [9, [1, 23]]]], // 753\n[[[], [132, [0, 753]]]], // 754\n[[[], [133, [0, 750], [0, 753]]]], // 755\n[[[], [134, [0, 750], [0, 752]]]], // 756\n[[[], [135, [0, 750], [0, 752]]]], // 757\n[[[], [136, [0, 750], [0, 751]]]], // 758\n[[[], [137, [0, 750], [0, 753]]]], // 759\n[[[], [138, [0, 750], [0, 753]]]], // 760\n[[[], [139, [0, 750], [0, 752], [0, 753]]]], // 761\n[[[], [9, [1, 51]]]], // 762\n[[[18, 47], [140, [0, 710]]], [[18, 51], [2]], [[], [9, [1, 55]]]], // 763\n[[[18, 47], [141, [0, 710]]], [[18, 51], [2]], [[], [9, [1, 13]]]], // 764\n[[[], [142, [0, 763]]]], // 765\n[[[], [143, [0, 763], [0, 764]]]], // 766\n[[[], [144, [0, 763]]]], // 767\n[[[], [145, [0, 763], [0, 764]]]], // 768\n[[[], [146, [0, 763], [0, 764]]]], // 769\n[[[], [147, [0, 763], [0, 764]]]], // 770\n[[[], [148, [0, 763], [0, 764]]]], // 771\n[[[18, 52], [9, [1, 8]]], [[], [2]]], // 772\n[[[], [25, [0, 362]]]], // 773\n[[[], [25, [0, 366]]]], // 774\n[[[], [25, [0, 367]]]], // 775\n[[[], [25, [0, 369]]]], // 776\n[[[], [25, [0, 355]]]], // 777\n[[[], [25, [0, 354]]]], // 778\n[[[18, 52], [25, [0, 363]]], [[], [149, [0, 363], [0, 697]]]], // 779\n[[[18, 52], [25, [0, 364]]], [[], [149, [0, 364], [0, 698]]]], // 780\n[[[18, 52], [25, [0, 368]]], [[], [149, [0, 368], [0, 702]]]], // 781\n[[[18, 52], [25, [0, 371]]], [[], [149, [0, 371], [0, 705]]]], // 782\n[[[18, 52], [25, [0, 372]]], [[], [149, [0, 372], [0, 706]]]], // 783\n[[[18, 52], [25, [0, 331]]], [[], [150, [0, 331], [0, 665]]]], // 784\n[[[18, 52], [25, [0, 333]]], [[], [78, [0, 333], [0, 667]]]], // 785\n[[[29, 56], [25, [0, 788]]], [[29, 57], [25, [0, 789]]], [[], [25, [0, 787]]]], // 786\n[[[18, 52], [25, [0, 373]]], [[], [151, [0, 772], [0, 373], [0, 707]]]], // 787\n[[[18, 52], [25, [0, 373]]], [[], [152, [0, 772], [0, 373], [0, 707]]]], // 788\n[[[18, 52], [25, [0, 373]]], [[], [153, [0, 772], [0, 373], [0, 707]]]], // 789\n[[[], [154, [0, 792]]]], // 790\n[[[13, 58], [25, [0, 773]]], [[], [25, [0, 60]]]], // 791\n[[[13, 58], [25, [0, 776]]], [[], [25, [0, 66]]]], // 792\n[[[], [155, [0, 827], [0, 813]]]], // 793\n[[[], [156, [0, 793], [0, 792]]]], // 794\n[[[], [157, [0, 793]]]], // 795\n[[[], [158, [0, 793], [0, 813]]]], // 796\n[[[], [159, [0, 794]]]], // 797\n[[[30, 59], [25, [0, 71]]], [[30, 60], [18, [0, 800], [0, 854]]], [[30, 61], [18, [0, 799], [0, 855]]], [[], [18, [0, 799], [0, 855]]]], // 798\n[[[30, 61], [25, [0, 72]]], [[30, 59], [19, [0, 798], [0, 855]]], [[30, 60], [19, [0, 800], [0, 91]]], [[], [19, [0, 800], [0, 91]]]], // 799\n[[[30, 60], [25, [0, 73]]], [[30, 59], [19, [0, 798], [0, 854]]], [[30, 61], [18, [0, 799], [0, 91]]], [[], [18, [0, 799], [0, 91]]]], // 800\n[[[], [160, [0, 802], [0, 792]]]], // 801\n[[[], [161, [0, 793], [0, 70]]]], // 802\n[[[], [162, [0, 802], [0, 804]]]], // 803\n[[[], [161, [0, 794], [0, 70]]]], // 804\n[[[], [163, [0, 801], [0, 74]]]], // 805\n[[[], [21, [0, 802], [0, 74]]]], // 806\n[[[], [21, [0, 803], [0, 74]]]], // 807\n[[[], [21, [0, 804], [0, 74]]]], // 808\n[[[], [161, [0, 813], [0, 70]]]], // 809\n[[[], [164, [0, 824], [0, 827], [0, 813]]]], // 810\n[[[], [17, [0, 810]]]], // 811\n[[[], [21, [0, 809], [0, 74]]]], // 812\n[[[], [165, [0, 827], [0, 790]]]], // 813\n[[[], [91, [0, 810], [0, 856], [0, 94]]]], // 814\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 814]]]], // 815\n[[[], [161, [0, 820], [0, 70]]]], // 816\n[[[], [164, [0, 824], [0, 827], [0, 820]]]], // 817\n[[[], [17, [0, 817]]]], // 818\n[[[], [21, [0, 816], [0, 74]]]], // 819\n[[[], [167, [0, 794]]]], // 820\n[[[], [91, [0, 817], [0, 856], [0, 94]]]], // 821\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 821]]]], // 822\n[[[], [161, [0, 827], [0, 70]]]], // 823\n[[[13, 58], [25, [0, 779]]], [[], [25, [0, 61]]]], // 824\n[[[13, 58], [25, [0, 780]]], [[], [25, [0, 62]]]], // 825\n[[[], [21, [0, 823], [0, 74]]]], // 826\n[[[13, 58], [25, [0, 786]]], [[], [25, [0, 67]]]], // 827\n[[[], [91, [0, 824], [0, 856], [0, 94]]]], // 828\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 828]]]], // 829\n[[[], [161, [0, 834], [0, 70]]]], // 830\n[[[], [164, [0, 824], [0, 827], [0, 834]]]], // 831\n[[[], [17, [0, 831]]]], // 832\n[[[], [21, [0, 830], [0, 74]]]], // 833\n[[[], [168, [0, 798], [0, 795], [0, 796], [0, 797]]]], // 834\n[[[], [91, [0, 831], [0, 856], [0, 94]]]], // 835\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 835]]]], // 836\n[[[], [161, [0, 841], [0, 70]]]], // 837\n[[[], [164, [0, 824], [0, 827], [0, 848]]]], // 838\n[[[], [17, [0, 838]]]], // 839\n[[[], [21, [0, 837], [0, 74]]]], // 840\n[[[], [25, [0, 848]]]], // 841\n[[[], [91, [0, 838], [0, 856], [0, 94]]]], // 842\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 842]]]], // 843\n[[[], [161, [0, 848], [0, 70]]]], // 844\n[[[], [164, [0, 824], [0, 827], [0, 853]]]], // 845\n[[[], [17, [0, 845]]]], // 846\n[[[], [21, [0, 844], [0, 74]]]], // 847\n[[[], [169, [0, 798], [0, 827], [0, 790]]]], // 848\n[[[], [91, [0, 845], [0, 856], [0, 94]]]], // 849\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 849]]]], // 850\n[[[], [170, [0, 798], [0, 795], [0, 796], [0, 797]]]], // 851\n[[[], [171, [0, 851], [0, 795], [0, 797]]]], // 852\n[[[], [168, [0, 852], [0, 795], [0, 796], [0, 797]]]], // 853\n[[[13, 58], [25, [0, 774]]], [[], [25, [0, 63]]]], // 854\n[[[], [19, [0, 91], [0, 854]]]], // 855\n[[[13, 58], [25, [0, 777]]], [[], [25, [0, 102]]]], // 856\n[[[], [2]]], // 857\n[[[], [2]]], // 858\n[[[], [2]]], // 859\n[[[], [172, [0, 861], [0, 56]]]], // 860\n[[[], [173, [0, 866]]]], // 861\n[[[], [9, [1, 13]]]], // 862\n[[[], [174, [0, 861], [0, 860], [0, 101]]]], // 863\n[[[], [175, [0, 863], [0, 862]]]], // 864\n[[[], [176, [0, 864], [0, 857], [0, 858], [0, 859]]]], // 865\n[[[], [2]]], // 866\n[[[], [9, [1, 13]]]], // 867\n[[[], [177, [0, 874]]]], // 868\n[[[], [178, [0, 874]]]], // 869\n[[[], [179, [0, 874]]]], // 870\n[[[], [180, [0, 874]]]], // 871\n[[[], [176, [0, 871], [0, 857], [0, 858], [0, 859]]]], // 872\n[[[11, 62], [25, [0, 1180]]], [[], [181, [0, 69]]]], // 873\n[[[], [182, [0, 45], [0, 101], [0, 873]]]], // 874\n[[[], [172, [0, 877], [0, 56]]]], // 875\n[[[15, 58], [25, [0, 779]]], [[], [25, [0, 61]]]], // 876\n[[[], [183, [0, 876], [0, 101]]]], // 877\n[[[], [184, [0, 877], [0, 101]]]], // 878\n[[[], [174, [0, 877], [0, 875], [0, 101]]]], // 879\n[[[], [175, [0, 879], [0, 878]]]], // 880\n[[[], [176, [0, 880], [0, 857], [0, 858], [0, 859]]]], // 881\n[[[], [172, [0, 883], [0, 56]]]], // 882\n[[[], [185, [0, 889], [0, 892], [0, 893]]]], // 883\n[[[], [9, [1, 13]]]], // 884\n[[[], [174, [0, 883], [0, 882], [0, 101]]]], // 885\n[[[], [175, [0, 885], [0, 884]]]], // 886\n[[[], [176, [0, 886], [0, 857], [0, 858], [0, 859]]]], // 887\n[[[], [2]]], // 888\n[[[], [2]]], // 889\n[[[], [2]]], // 890\n[[[], [2]]], // 891\n[[[], [186, [0, 888], [0, 890], [0, 891]]]], // 892\n[[[], [187, [0, 888], [0, 890], [0, 891]]]], // 893\n[[[14, 63], [91, [0, 61], [0, 102], [0, 94]]], [[], [25, [0, 783]]]], // 894\n[[[16, 63], [25, [0, 68]]], [[], [25, [0, 894]]]], // 895\n[[[], [166, [0, 59], [0, 58], [0, 45], [0, 41], [0, 895]]]], // 896\n[[[], [188, [0, 45], [0, 41], [0, 895]]]], // 897\n[[[], [189, [0, 45], [0, 41], [0, 895]]]], // 898\n[[[], [9, [1, 17]]]], // 899\n[[[], [9, [1, 0]]]], // 900\n[[[], [9, [1, 64]]]], // 901\n[[[], [25, [0, 83]]]], // 902\n[[[], [9, [1, 34]]]], // 903\n[[[], [9, [1, 23]]]], // 904\n[[[], [9, [1, 25]]]], // 905\n[[[], [9, [1, 17]]]], // 906\n[[[], [9, [1, 0]]]], // 907\n[[[], [9, [1, 65]]]], // 908\n[[[], [25, [0, 84]]]], // 909\n[[[], [9, [1, 29]]]], // 910\n[[[], [9, [1, 23]]]], // 911\n[[[], [9, [1, 25]]]], // 912\n[[[], [9, [1, 17]]]], // 913\n[[[], [9, [1, 0]]]], // 914\n[[[], [9, [1, 66]]]], // 915\n[[[], [25, [0, 85]]]], // 916\n[[[], [9, [1, 19]]]], // 917\n[[[], [9, [1, 23]]]], // 918\n[[[], [9, [1, 25]]]], // 919\n[[[], [9, [1, 17]]]], // 920\n[[[], [9, [1, 0]]]], // 921\n[[[], [9, [1, 13]]]], // 922\n[[[], [25, [0, 83]]]], // 923\n[[[], [9, [1, 67]]]], // 924\n[[[], [9, [1, 23]]]], // 925\n[[[], [9, [1, 25]]]], // 926\n[[[], [9, [1, 17]]]], // 927\n[[[], [9, [1, 0]]]], // 928\n[[[], [9, [1, 13]]]], // 929\n[[[], [9, [1, 32]]]], // 930\n[[[], [9, [1, 8]]]], // 931\n[[[], [9, [1, 23]]]], // 932\n[[[], [9, [1, 25]]]], // 933\n[[[], [9, [1, 17]]]], // 934\n[[[], [9, [1, 0]]]], // 935\n[[[], [9, [1, 13]]]], // 936\n[[[], [25, [0, 87]]]], // 937\n[[[], [9, [1, 67]]]], // 938\n[[[], [9, [1, 23]]]], // 939\n[[[], [9, [1, 25]]]], // 940\n[[[], [9, [1, 17]]]], // 941\n[[[], [9, [1, 0]]]], // 942\n[[[], [9, [1, 65]]]], // 943\n[[[], [25, [0, 88]]]], // 944\n[[[], [9, [1, 67]]]], // 945\n[[[], [9, [1, 23]]]], // 946\n[[[], [9, [1, 25]]]], // 947\n[[[], [9, [1, 17]]]], // 948\n[[[], [9, [1, 0]]]], // 949\n[[[], [9, [1, 13]]]], // 950\n[[[], [9, [1, 32]]]], // 951\n[[[], [9, [1, 8]]]], // 952\n[[[], [9, [1, 23]]]], // 953\n[[[], [9, [1, 25]]]], // 954\n[[[], [9, [1, 17]]]], // 955\n[[[], [9, [1, 0]]]], // 956\n[[[], [9, [1, 13]]]], // 957\n[[[], [9, [1, 32]]]], // 958\n[[[], [9, [1, 8]]]], // 959\n[[[], [9, [1, 23]]]], // 960\n[[[], [9, [1, 25]]]], // 961\n[[[], [9, [1, 17]]]], // 962\n[[[], [9, [1, 0]]]], // 963\n[[[], [9, [1, 13]]]], // 964\n[[[], [9, [1, 32]]]], // 965\n[[[], [9, [1, 8]]]], // 966\n[[[], [9, [1, 23]]]], // 967\n[[[], [9, [1, 25]]]], // 968\n[[[], [35, [0, 903]]]], // 969\n[[[], [36, [0, 903], [0, 901], [1, 28]]]], // 970\n[[[], [37, [0, 902], [0, 969]]]], // 971\n[[[], [38, [0, 901], [0, 905]]]], // 972\n[[[], [39, [0, 903]]]], // 973\n[[[], [40, [0, 973], [0, 1080]]]], // 974\n[[[], [41, [0, 901], [0, 903], [0, 899]]]], // 975\n[[[], [42, [0, 975], [0, 1064]]]], // 976\n[[[], [43, [0, 901], [0, 899]]]], // 977\n[[[], [44, [0, 970], [0, 902]]]], // 978\n[[[], [35, [0, 910]]]], // 979\n[[[], [36, [0, 910], [0, 908], [1, 28]]]], // 980\n[[[], [37, [0, 909], [0, 979]]]], // 981\n[[[], [38, [0, 908], [0, 912]]]], // 982\n[[[], [39, [0, 910]]]], // 983\n[[[], [40, [0, 983], [0, 1080]]]], // 984\n[[[], [41, [0, 908], [0, 910], [0, 906]]]], // 985\n[[[], [42, [0, 985], [0, 1064]]]], // 986\n[[[], [43, [0, 908], [0, 906]]]], // 987\n[[[], [44, [0, 980], [0, 909]]]], // 988\n[[[], [35, [0, 917]]]], // 989\n[[[], [36, [0, 917], [0, 915], [1, 28]]]], // 990\n[[[], [37, [0, 916], [0, 989]]]], // 991\n[[[], [38, [0, 915], [0, 919]]]], // 992\n[[[], [39, [0, 917]]]], // 993\n[[[], [40, [0, 993], [0, 1080]]]], // 994\n[[[], [41, [0, 915], [0, 917], [0, 913]]]], // 995\n[[[], [42, [0, 995], [0, 1064]]]], // 996\n[[[], [43, [0, 915], [0, 913]]]], // 997\n[[[], [44, [0, 990], [0, 916]]]], // 998\n[[[], [35, [0, 924]]]], // 999\n[[[], [36, [0, 924], [0, 922], [1, 28]]]], // 1000\n[[[], [37, [0, 923], [0, 999]]]], // 1001\n[[[], [38, [0, 922], [0, 926]]]], // 1002\n[[[], [39, [0, 924]]]], // 1003\n[[[], [40, [0, 1003], [0, 1080]]]], // 1004\n[[[], [41, [0, 922], [0, 924], [0, 920]]]], // 1005\n[[[], [42, [0, 1005], [0, 1064]]]], // 1006\n[[[], [43, [0, 922], [0, 920]]]], // 1007\n[[[], [44, [0, 1000], [0, 923]]]], // 1008\n[[[], [35, [0, 931]]]], // 1009\n[[[], [36, [0, 931], [0, 929], [1, 28]]]], // 1010\n[[[], [37, [0, 930], [0, 1009]]]], // 1011\n[[[], [38, [0, 929], [0, 933]]]], // 1012\n[[[], [39, [0, 931]]]], // 1013\n[[[], [40, [0, 1013], [0, 1080]]]], // 1014\n[[[], [41, [0, 929], [0, 931], [0, 927]]]], // 1015\n[[[], [42, [0, 1015], [0, 1064]]]], // 1016\n[[[], [43, [0, 929], [0, 927]]]], // 1017\n[[[], [44, [0, 1010], [0, 930]]]], // 1018\n[[[], [35, [0, 938]]]], // 1019\n[[[], [36, [0, 938], [0, 936], [1, 38]]]], // 1020\n[[[], [37, [0, 937], [0, 1019]]]], // 1021\n[[[], [38, [0, 936], [0, 940]]]], // 1022\n[[[], [39, [0, 938]]]], // 1023\n[[[], [40, [0, 1023], [0, 1100]]]], // 1024\n[[[], [41, [0, 936], [0, 938], [0, 934]]]], // 1025\n[[[], [42, [0, 1025], [0, 1084]]]], // 1026\n[[[], [43, [0, 936], [0, 934]]]], // 1027\n[[[], [35, [0, 945]]]], // 1028\n[[[], [36, [0, 945], [0, 943], [1, 38]]]], // 1029\n[[[], [37, [0, 944], [0, 1028]]]], // 1030\n[[[], [38, [0, 943], [0, 947]]]], // 1031\n[[[], [39, [0, 945]]]], // 1032\n[[[], [40, [0, 1032], [0, 1100]]]], // 1033\n[[[], [41, [0, 943], [0, 945], [0, 941]]]], // 1034\n[[[], [42, [0, 1034], [0, 1084]]]], // 1035\n[[[], [43, [0, 943], [0, 941]]]], // 1036\n[[[], [35, [0, 952]]]], // 1037\n[[[], [36, [0, 952], [0, 950], [1, 38]]]], // 1038\n[[[], [37, [0, 951], [0, 1037]]]], // 1039\n[[[], [38, [0, 950], [0, 954]]]], // 1040\n[[[], [39, [0, 952]]]], // 1041\n[[[], [40, [0, 1041], [0, 1100]]]], // 1042\n[[[], [41, [0, 950], [0, 952], [0, 948]]]], // 1043\n[[[], [42, [0, 1043], [0, 1084]]]], // 1044\n[[[], [43, [0, 950], [0, 948]]]], // 1045\n[[[], [35, [0, 959]]]], // 1046\n[[[], [36, [0, 959], [0, 957], [1, 38]]]], // 1047\n[[[], [37, [0, 958], [0, 1046]]]], // 1048\n[[[], [38, [0, 957], [0, 961]]]], // 1049\n[[[], [39, [0, 959]]]], // 1050\n[[[], [40, [0, 1050], [0, 1100]]]], // 1051\n[[[], [41, [0, 957], [0, 959], [0, 955]]]], // 1052\n[[[], [42, [0, 1052], [0, 1084]]]], // 1053\n[[[], [43, [0, 957], [0, 955]]]], // 1054\n[[[], [35, [0, 966]]]], // 1055\n[[[], [36, [0, 966], [0, 964], [1, 38]]]], // 1056\n[[[], [37, [0, 965], [0, 1055]]]], // 1057\n[[[], [38, [0, 964], [0, 968]]]], // 1058\n[[[], [39, [0, 966]]]], // 1059\n[[[], [40, [0, 1059], [0, 1100]]]], // 1060\n[[[], [41, [0, 964], [0, 966], [0, 962]]]], // 1061\n[[[], [42, [0, 1061], [0, 1084]]]], // 1062\n[[[], [43, [0, 964], [0, 962]]]], // 1063\n[[[], [45, [0, 975], [0, 985], [0, 995], [0, 1005], [0, 1015]]]], // 1064\n[[[], [21, [0, 1064], [0, 1119]]]], // 1065\n[[[], [46, [0, 1079]]]], // 1066\n[[[], [47, [0, 1073], [0, 1071]]]], // 1067\n[[[], [48, [0, 976], [0, 986], [0, 996], [0, 1006], [0, 1016], [0, 900], [0, 907], [0, 914], [0, 921], [0, 928]]]], // 1068\n[[[], [45, [0, 901], [0, 908], [0, 915], [0, 922], [0, 929]]]], // 1069\n[[[], [45, [0, 970], [0, 980], [0, 990], [0, 1000], [0, 1010]]]], // 1070\n[[[], [9, [1, 44]]]], // 1071\n[[[], [49, [0, 1070], [0, 1090]]]], // 1072\n[[[], [48, [0, 976], [0, 986], [0, 996], [0, 1006], [0, 1016], [0, 902], [0, 909], [0, 916], [0, 923], [0, 930]]]], // 1073\n[[[], [45, [0, 977], [0, 987], [0, 997], [0, 1007], [0, 1017]]]], // 1074\n[[[], [48, [0, 976], [0, 986], [0, 996], [0, 1006], [0, 1016], [0, 971], [0, 981], [0, 991], [0, 1001], [0, 1011]]]], // 1075\n[[[], [22, [0, 1077], [0, 1067]]]], // 1076\n[[[], [50, [0, 1116], [0, 1081], [0, 1068], [0, 1066]]]], // 1077\n[[[], [48, [0, 976], [0, 986], [0, 996], [0, 1006], [0, 1016], [0, 903], [0, 910], [0, 917], [0, 924], [0, 931]]]], // 1078\n[[[], [48, [0, 976], [0, 986], [0, 996], [0, 1006], [0, 1016], [0, 904], [0, 911], [0, 918], [0, 925], [0, 932]]]], // 1079\n[[[], [51, [0, 975], [0, 973], [0, 985], [0, 983], [0, 995], [0, 993], [0, 1005], [0, 1003], [0, 1015], [0, 1013]]]], // 1080\n[[[], [48, [0, 974], [0, 984], [0, 994], [0, 1004], [0, 1014], [0, 972], [0, 982], [0, 992], [0, 1002], [0, 1012]]]], // 1081\n[[[], [45, [0, 978], [0, 988], [0, 998], [0, 1008], [0, 1018]]]], // 1082\n[[[], [21, [0, 1082], [0, 1070]]]], // 1083\n[[[], [45, [0, 1025], [0, 1034], [0, 1043], [0, 1052], [0, 1061]]]], // 1084\n[[[], [21, [0, 1084], [0, 1119]]]], // 1085\n[[[], [46, [0, 1099]]]], // 1086\n[[[], [47, [0, 1093], [0, 1091]]]], // 1087\n[[[], [48, [0, 1026], [0, 1035], [0, 1044], [0, 1053], [0, 1062], [0, 935], [0, 942], [0, 949], [0, 956], [0, 963]]]], // 1088\n[[[], [45, [0, 936], [0, 943], [0, 950], [0, 957], [0, 964]]]], // 1089\n[[[], [45, [0, 1020], [0, 1029], [0, 1038], [0, 1047], [0, 1056]]]], // 1090\n[[[], [52, [0, 1092], [0, 1083], [0, 1071]]]], // 1091\n[[[], [49, [0, 1070], [0, 1090]]]], // 1092\n[[[], [48, [0, 1026], [0, 1035], [0, 1044], [0, 1053], [0, 1062], [0, 937], [0, 944], [0, 951], [0, 958], [0, 965]]]], // 1093\n[[[], [45, [0, 1027], [0, 1036], [0, 1045], [0, 1054], [0, 1063]]]], // 1094\n[[[], [48, [0, 1026], [0, 1035], [0, 1044], [0, 1053], [0, 1062], [0, 1021], [0, 1030], [0, 1039], [0, 1048], [0, 1057]]]], // 1095\n[[[], [22, [0, 1097], [0, 1087]]]], // 1096\n[[[], [50, [0, 1116], [0, 1101], [0, 1088], [0, 1086]]]], // 1097\n[[[], [48, [0, 1026], [0, 1035], [0, 1044], [0, 1053], [0, 1062], [0, 938], [0, 945], [0, 952], [0, 959], [0, 966]]]], // 1098\n[[[], [48, [0, 1026], [0, 1035], [0, 1044], [0, 1053], [0, 1062], [0, 939], [0, 946], [0, 953], [0, 960], [0, 967]]]], // 1099\n[[[], [51, [0, 1025], [0, 1023], [0, 1034], [0, 1032], [0, 1043], [0, 1041], [0, 1052], [0, 1050], [0, 1061], [0, 1059]]]], // 1100\n[[[], [48, [0, 1024], [0, 1033], [0, 1042], [0, 1051], [0, 1060], [0, 1022], [0, 1031], [0, 1040], [0, 1049], [0, 1058]]]], // 1101\n[[[], [9, [1, 8]]]], // 1102\n[[[], [21, [0, 1107], [0, 1102]]]], // 1103\n[[[], [48, [0, 1065], [0, 1085], [0, 1075], [0, 1095]]]], // 1104\n[[[], [53, [0, 1104], [0, 1103]]]], // 1105\n[[[], [54, [0, 1113], [0, 1112], [0, 1105]]]], // 1106\n[[[], [45, [0, 1069], [0, 1089]]]], // 1107\n[[[], [55, [0, 1102]]]], // 1108\n[[[], [56, [0, 1074], [0, 1094], [0, 1102]]]], // 1109\n[[[], [57, [0, 1117]]]], // 1110\n[[[], [21, [0, 1109], [0, 1110]]]], // 1111\n[[[], [58, [0, 1117], [0, 1109]]]], // 1112\n[[[], [45, [0, 1076], [0, 1096]]]], // 1113\n[[[], [59, [0, 1117]]]], // 1114\n[[[], [60, [0, 1118]]]], // 1115\n[[[], [61, [0, 1111], [0, 1115], [0, 1114]]]], // 1116\n[[[], [48, [0, 1065], [0, 1085], [0, 1078], [0, 1098]]]], // 1117\n[[[], [62, [0, 1117]]]], // 1118\n[[[], [45, [0, 1064], [0, 1084]]]], // 1119\n[[[], [63, [0, 1169], [0, 1133]]]], // 1120\n[[[], [64, [0, 1169], [0, 1156]]]], // 1121\n[[[], [9, [1, 13]]]], // 1122\n[[[], [65, [0, 1121], [0, 1120], [0, 1122]]]], // 1123\n[[[], [66, [0, 1121], [0, 1122]]]], // 1124\n[[[], [67, [0, 1123], [0, 1124]]]], // 1125\n[[[], [68, [0, 1137], [0, 1128]]]], // 1126\n[[[], [68, [0, 1139], [0, 1145]]]], // 1127\n[[[], [69, [0, 1166]]]], // 1128\n[[[], [70, [0, 1128], [0, 1151], [0, 1154]]]], // 1129\n[[[], [71, [0, 1169], [0, 1129]]]], // 1130\n[[[], [9, [1, 13]]]], // 1131\n[[[], [72, [0, 1109]]]], // 1132\n[[[], [73, [0, 1131], [0, 1132]]]], // 1133\n[[[], [74, [0, 1135], [0, 1151], [0, 1155]]]], // 1134\n[[[], [75, [0, 1156], [0, 1133]]]], // 1135\n[[[], [71, [0, 1169], [0, 1135]]]], // 1136\n[[[], [74, [0, 1138], [0, 1151], [0, 1155]]]], // 1137\n[[[], [76, [0, 1169], [0, 1139]]]], // 1138\n[[[], [77, [0, 1169], [0, 1125]]]], // 1139\n[[[], [78, [0, 1137], [0, 1128]]]], // 1140\n[[[], [78, [0, 1138], [0, 1129]]]], // 1141\n[[[], [78, [0, 1139], [0, 1130]]]], // 1142\n[[[], [74, [0, 1144], [0, 1151], [0, 1155]]]], // 1143\n[[[], [76, [0, 1169], [0, 1145]]]], // 1144\n[[[], [79, [0, 1139], [0, 1137]]]], // 1145\n[[[], [74, [0, 1147], [0, 1151], [0, 1155]]]], // 1146\n[[[], [76, [0, 1169], [0, 1148]]]], // 1147\n[[[], [79, [0, 1142], [0, 1140]]]], // 1148\n[[[], [9, [1, 43]]]], // 1149\n[[[25, 16], [25, [0, 102]]], [[], [33, [0, 101], [0, 1149]]]], // 1150\n[[[], [81, [0, 1117]]]], // 1151\n[[[], [82, [0, 1117]]]], // 1152\n[[[], [83, [0, 1117]]]], // 1153\n[[[], [84, [0, 1111], [0, 1153], [0, 1152]]]], // 1154\n[[[], [85, [0, 1111], [0, 1153], [0, 1152]]]], // 1155\n[[[], [86, [0, 1150], [0, 1151], [0, 1154]]]], // 1156\n[[[28, 46], [25, [0, 1146]]], [[], [25, [0, 1143]]]], // 1157\n[[[], [87, [0, 1168], [0, 1166], [0, 1160]]]], // 1158\n[[[], [17, [0, 1158]]]], // 1159\n[[[], [88, [0, 1117]]]], // 1160\n[[[], [89, [0, 1123], [0, 1124], [0, 1125]]]], // 1161\n[[[], [19, [0, 91], [0, 1161]]]], // 1162\n[[[], [90, [0, 1166], [0, 1160]]]], // 1163\n[[[], [20, [0, 1157]]]], // 1164\n[[[28, 46], [25, [0, 1147]]], [[], [25, [0, 1144]]]], // 1165\n[[[], [25, [0, 1113]]]], // 1166\n[[[], [91, [0, 1158], [0, 1150], [0, 94]]]], // 1167\n[[[28, 46], [25, [0, 1148]]], [[], [25, [0, 1145]]]], // 1168\n[[[], [25, [0, 1106]]]], // 1169\n[[[], [190, [0, 1171], [0, 1178]]]], // 1170\n[[[], [161, [0, 1179], [0, 70]]]], // 1171\n[[[], [191, [0, 1171], [0, 1178]]]], // 1172\n[[[], [21, [0, 1171], [0, 1178]]]], // 1173\n[[[], [163, [0, 1170], [0, 74]]]], // 1174\n[[[], [21, [0, 1171], [0, 74]]]], // 1175\n[[[], [21, [0, 1172], [0, 74]]]], // 1176\n[[[], [21, [0, 1173], [0, 74]]]], // 1177\n[[[], [192, [0, 101]]]], // 1178\n[[[], [193, [0, 1168]]]], // 1179\n[[[], [194, [0, 1182], [0, 1179]]]], // 1180\n[[[], [195, [0, 1180]]]], // 1181\n[[[], [196, [0, 46], [0, 1218]]]], // 1182\n[[[], [197, [0, 1180]]]], // 1183\n[[[], [198, [0, 101], [0, 1179]]]], // 1184\n[[[], [21, [0, 1183], [0, 1184]]]], // 1185\n[[[], [199, [0, 1185]]]], // 1186\n[[[], [200, [0, 1185]]]], // 1187\n[[[], [190, [0, 1189], [0, 1178]]]], // 1188\n[[[], [161, [0, 1198], [0, 70]]]], // 1189\n[[[], [191, [0, 1189], [0, 1178]]]], // 1190\n[[[], [21, [0, 1189], [0, 1178]]]], // 1191\n[[[], [163, [0, 1188], [0, 74]]]], // 1192\n[[[], [21, [0, 1189], [0, 74]]]], // 1193\n[[[], [21, [0, 1190], [0, 74]]]], // 1194\n[[[], [21, [0, 1191], [0, 74]]]], // 1195\n[[[], [201, [0, 1214], [0, 311], [0, 354], [0, 356], [0, 359], [0, 338]]]], // 1196\n[[[], [202, [0, 373], [0, 1203], [0, 1196]]]], // 1197\n[[[], [203, [0, 373], [0, 1179], [0, 1197]]]], // 1198\n[[[], [204, [0, 1198], [0, 1197], [0, 46], [0, 1218]]]], // 1199\n[[[], [195, [0, 1199]]]], // 1200\n[[[], [205, [0, 48], [0, 41]]]], // 1201\n[[[], [17, [0, 1201]]]], // 1202\n[[[], [206, [0, 1201], [0, 1218]]]], // 1203\n[[[], [207, [0, 47]]]], // 1204\n[[[], [208, [0, 1216], [0, 1201]]]], // 1205\n[[[], [209, [0, 1205]]]], // 1206\n[[[], [210, [0, 1179], [0, 1204]]]], // 1207\n[[[], [211, [0, 1205], [0, 1207]]]], // 1208\n[[[], [212, [0, 1205], [0, 1207]]]], // 1209\n[[[], [213, [0, 1205], [0, 1207]]]], // 1210\n[[[], [214, [0, 1205], [0, 1207]]]], // 1211\n[[[], [215, [0, 1205], [0, 1207]]]], // 1212\n[[[], [216, [0, 1205], [0, 1207]]]], // 1213\n[[[], [217, [0, 47], [0, 1166], [0, 1105], [0, 1133]]]], // 1214\n[[[], [218, [0, 1214]]]], // 1215\n[[[10, 58], [25, [0, 779]]], [[], [25, [0, 61]]]], // 1216\n[[[10, 58], [25, [0, 780]]], [[], [25, [0, 62]]]], // 1217\n[[[10, 58], [25, [0, 781]]], [[], [25, [0, 65]]]] // 1218\n] // Array of Node Variant class indices\n\nconst variant = [0, // 0\n0, // 1\n0, // 2\n0, // 3\n0, // 4\n0, // 5\n0, // 6\n0, // 7\n0, // 8\n0, // 9\n1, // 10\n2, // 11\n3, // 12\n1, // 13\n1, // 14\n1, // 15\n4, // 16\n5, // 17\n6, // 18\n7, // 19\n8, // 20\n9, // 21\n10, // 22\n11, // 23\n12, // 24\n13, // 25\n14, // 26\n15, // 27\n16, // 28\n17, // 29\n18, // 30\n19, // 31\n19, // 32\n19, // 33\n19, // 34\n20, // 35\n21, // 36\n22, // 37\n23, // 38\n20, // 39\n24, // 40\n25, // 41\n26, // 42\n25, // 43\n27, // 44\n25, // 45\n28, // 46\n29, // 47\n30, // 48\n31, // 49\n32, // 50\n33, // 51\n24, // 52\n34, // 53\n25, // 54\n32, // 55\n25, // 56\n35, // 57\n36, // 58\n37, // 59\n38, // 60\n39, // 61\n40, // 62\n41, // 63\n41, // 64\n28, // 65\n42, // 66\n43, // 67\n44, // 68\n40, // 69\n45, // 70\n41, // 71\n41, // 72\n41, // 73\n46, // 74\n47, // 75\n48, // 76\n49, // 77\n48, // 78\n48, // 79\n48, // 80\n50, // 81\n50, // 82\n30, // 83\n30, // 84\n30, // 85\n30, // 86\n30, // 87\n30, // 88\n30, // 89\n41, // 90\n41, // 91\n50, // 92\n50, // 93\n51, // 94\n51, // 95\n41, // 96\n41, // 97\n41, // 98\n41, // 99\n38, // 100\n38, // 101\n38, // 102\n34, // 103\n52, // 104\n31, // 105\n33, // 106\n30, // 107\n53, // 108\n54, // 109\n55, // 110\n56, // 111\n33, // 112\n57, // 113\n33, // 114\n58, // 115\n59, // 116\n60, // 117\n59, // 118\n61, // 119\n33, // 120\n52, // 121\n31, // 122\n33, // 123\n30, // 124\n53, // 125\n54, // 126\n55, // 127\n56, // 128\n33, // 129\n57, // 130\n33, // 131\n58, // 132\n59, // 133\n60, // 134\n59, // 135\n61, // 136\n33, // 137\n52, // 138\n31, // 139\n33, // 140\n30, // 141\n53, // 142\n54, // 143\n55, // 144\n56, // 145\n33, // 146\n57, // 147\n33, // 148\n58, // 149\n59, // 150\n60, // 151\n59, // 152\n61, // 153\n33, // 154\n52, // 155\n31, // 156\n33, // 157\n30, // 158\n53, // 159\n54, // 160\n55, // 161\n56, // 162\n33, // 163\n57, // 164\n33, // 165\n58, // 166\n59, // 167\n60, // 168\n59, // 169\n61, // 170\n33, // 171\n52, // 172\n31, // 173\n33, // 174\n30, // 175\n53, // 176\n54, // 177\n55, // 178\n56, // 179\n33, // 180\n57, // 181\n33, // 182\n58, // 183\n59, // 184\n60, // 185\n59, // 186\n61, // 187\n33, // 188\n52, // 189\n31, // 190\n33, // 191\n30, // 192\n53, // 193\n54, // 194\n55, // 195\n56, // 196\n33, // 197\n57, // 198\n33, // 199\n58, // 200\n59, // 201\n60, // 202\n59, // 203\n61, // 204\n52, // 205\n31, // 206\n33, // 207\n30, // 208\n53, // 209\n54, // 210\n55, // 211\n56, // 212\n33, // 213\n57, // 214\n33, // 215\n58, // 216\n59, // 217\n60, // 218\n59, // 219\n61, // 220\n52, // 221\n31, // 222\n33, // 223\n30, // 224\n53, // 225\n54, // 226\n55, // 227\n56, // 228\n33, // 229\n57, // 230\n33, // 231\n58, // 232\n59, // 233\n60, // 234\n59, // 235\n61, // 236\n52, // 237\n31, // 238\n33, // 239\n30, // 240\n53, // 241\n54, // 242\n55, // 243\n56, // 244\n33, // 245\n57, // 246\n33, // 247\n58, // 248\n59, // 249\n60, // 250\n59, // 251\n61, // 252\n52, // 253\n31, // 254\n33, // 255\n30, // 256\n53, // 257\n54, // 258\n55, // 259\n56, // 260\n33, // 261\n57, // 262\n33, // 263\n58, // 264\n59, // 265\n60, // 266\n59, // 267\n61, // 268\n60, // 269\n59, // 270\n62, // 271\n62, // 272\n31, // 273\n33, // 274\n33, // 275\n30, // 276\n63, // 277\n30, // 278\n64, // 279\n57, // 280\n65, // 281\n65, // 282\n53, // 283\n54, // 284\n59, // 285\n33, // 286\n33, // 287\n30, // 288\n60, // 289\n59, // 290\n62, // 291\n62, // 292\n31, // 293\n33, // 294\n33, // 295\n30, // 296\n63, // 297\n30, // 298\n64, // 299\n57, // 300\n65, // 301\n65, // 302\n53, // 303\n54, // 304\n59, // 305\n33, // 306\n64, // 307\n29, // 308\n66, // 309\n67, // 310\n43, // 311\n33, // 312\n34, // 313\n68, // 314\n68, // 315\n68, // 316\n69, // 317\n65, // 318\n63, // 319\n70, // 320\n70, // 321\n53, // 322\n63, // 323\n60, // 324\n43, // 325\n43, // 326\n41, // 327\n63, // 328\n63, // 329\n43, // 330\n32, // 331\n32, // 332\n38, // 333\n63, // 334\n43, // 335\n50, // 336\n63, // 337\n63, // 338\n38, // 339\n63, // 340\n43, // 341\n38, // 342\n63, // 343\n43, // 344\n38, // 345\n63, // 346\n43, // 347\n38, // 348\n63, // 349\n43, // 350\n38, // 351\n63, // 352\n43, // 353\n34, // 354\n38, // 355\n63, // 356\n63, // 357\n63, // 358\n63, // 359\n63, // 360\n63, // 361\n38, // 362\n39, // 363\n40, // 364\n71, // 365\n41, // 366\n41, // 367\n28, // 368\n42, // 369\n63, // 370\n65, // 371\n44, // 372\n43, // 373\n43, // 374\n72, // 375\n73, // 376\n72, // 377\n74, // 378\n64, // 379\n30, // 380\n33, // 381\n33, // 382\n33, // 383\n33, // 384\n33, // 385\n53, // 386\n53, // 387\n53, // 388\n31, // 389\n31, // 390\n33, // 391\n33, // 392\n72, // 393\n75, // 394\n74, // 395\n64, // 396\n33, // 397\n33, // 398\n76, // 399\n77, // 400\n77, // 401\n64, // 402\n33, // 403\n33, // 404\n33, // 405\n33, // 406\n33, // 407\n33, // 408\n33, // 409\n33, // 410\n33, // 411\n33, // 412\n33, // 413\n33, // 414\n72, // 415\n76, // 416\n78, // 417\n24, // 418\n64, // 419\n64, // 420\n33, // 421\n33, // 422\n33, // 423\n33, // 424\n33, // 425\n33, // 426\n33, // 427\n72, // 428\n79, // 429\n74, // 430\n64, // 431\n33, // 432\n33, // 433\n33, // 434\n33, // 435\n33, // 436\n33, // 437\n52, // 438\n31, // 439\n33, // 440\n30, // 441\n53, // 442\n54, // 443\n55, // 444\n56, // 445\n33, // 446\n57, // 447\n33, // 448\n58, // 449\n59, // 450\n60, // 451\n59, // 452\n61, // 453\n33, // 454\n52, // 455\n31, // 456\n33, // 457\n30, // 458\n53, // 459\n54, // 460\n55, // 461\n56, // 462\n33, // 463\n57, // 464\n33, // 465\n58, // 466\n59, // 467\n60, // 468\n59, // 469\n61, // 470\n33, // 471\n52, // 472\n31, // 473\n33, // 474\n30, // 475\n53, // 476\n54, // 477\n55, // 478\n56, // 479\n33, // 480\n57, // 481\n33, // 482\n58, // 483\n59, // 484\n60, // 485\n59, // 486\n61, // 487\n33, // 488\n52, // 489\n31, // 490\n33, // 491\n30, // 492\n53, // 493\n54, // 494\n55, // 495\n56, // 496\n33, // 497\n57, // 498\n33, // 499\n58, // 500\n59, // 501\n60, // 502\n59, // 503\n61, // 504\n33, // 505\n52, // 506\n31, // 507\n33, // 508\n30, // 509\n53, // 510\n54, // 511\n55, // 512\n56, // 513\n33, // 514\n57, // 515\n33, // 516\n58, // 517\n59, // 518\n60, // 519\n59, // 520\n61, // 521\n33, // 522\n52, // 523\n31, // 524\n33, // 525\n30, // 526\n53, // 527\n54, // 528\n55, // 529\n56, // 530\n33, // 531\n57, // 532\n33, // 533\n58, // 534\n59, // 535\n60, // 536\n59, // 537\n61, // 538\n52, // 539\n31, // 540\n33, // 541\n30, // 542\n53, // 543\n54, // 544\n55, // 545\n56, // 546\n33, // 547\n57, // 548\n33, // 549\n58, // 550\n59, // 551\n60, // 552\n59, // 553\n61, // 554\n52, // 555\n31, // 556\n33, // 557\n30, // 558\n53, // 559\n54, // 560\n55, // 561\n56, // 562\n33, // 563\n57, // 564\n33, // 565\n58, // 566\n59, // 567\n60, // 568\n59, // 569\n61, // 570\n52, // 571\n31, // 572\n33, // 573\n30, // 574\n53, // 575\n54, // 576\n55, // 577\n56, // 578\n33, // 579\n57, // 580\n33, // 581\n58, // 582\n59, // 583\n60, // 584\n59, // 585\n61, // 586\n52, // 587\n31, // 588\n33, // 589\n30, // 590\n53, // 591\n54, // 592\n55, // 593\n56, // 594\n33, // 595\n57, // 596\n33, // 597\n58, // 598\n59, // 599\n60, // 600\n59, // 601\n61, // 602\n60, // 603\n59, // 604\n62, // 605\n62, // 606\n31, // 607\n33, // 608\n33, // 609\n30, // 610\n63, // 611\n30, // 612\n64, // 613\n57, // 614\n65, // 615\n65, // 616\n53, // 617\n54, // 618\n59, // 619\n33, // 620\n33, // 621\n30, // 622\n60, // 623\n59, // 624\n62, // 625\n62, // 626\n31, // 627\n33, // 628\n33, // 629\n30, // 630\n63, // 631\n30, // 632\n64, // 633\n57, // 634\n65, // 635\n65, // 636\n53, // 637\n54, // 638\n59, // 639\n33, // 640\n64, // 641\n29, // 642\n66, // 643\n67, // 644\n43, // 645\n33, // 646\n34, // 647\n68, // 648\n68, // 649\n68, // 650\n69, // 651\n65, // 652\n63, // 653\n70, // 654\n70, // 655\n53, // 656\n63, // 657\n60, // 658\n43, // 659\n43, // 660\n41, // 661\n63, // 662\n63, // 663\n43, // 664\n32, // 665\n32, // 666\n38, // 667\n63, // 668\n43, // 669\n50, // 670\n63, // 671\n63, // 672\n38, // 673\n63, // 674\n43, // 675\n38, // 676\n63, // 677\n43, // 678\n38, // 679\n63, // 680\n43, // 681\n38, // 682\n63, // 683\n43, // 684\n38, // 685\n63, // 686\n43, // 687\n34, // 688\n38, // 689\n63, // 690\n63, // 691\n63, // 692\n63, // 693\n63, // 694\n63, // 695\n38, // 696\n39, // 697\n40, // 698\n71, // 699\n41, // 700\n41, // 701\n28, // 702\n42, // 703\n63, // 704\n65, // 705\n44, // 706\n43, // 707\n43, // 708\n72, // 709\n73, // 710\n72, // 711\n74, // 712\n64, // 713\n30, // 714\n33, // 715\n33, // 716\n33, // 717\n33, // 718\n33, // 719\n53, // 720\n53, // 721\n53, // 722\n31, // 723\n31, // 724\n33, // 725\n33, // 726\n72, // 727\n75, // 728\n74, // 729\n64, // 730\n33, // 731\n33, // 732\n76, // 733\n77, // 734\n77, // 735\n64, // 736\n33, // 737\n33, // 738\n33, // 739\n33, // 740\n33, // 741\n33, // 742\n33, // 743\n33, // 744\n33, // 745\n33, // 746\n33, // 747\n33, // 748\n72, // 749\n76, // 750\n78, // 751\n24, // 752\n64, // 753\n64, // 754\n33, // 755\n33, // 756\n33, // 757\n33, // 758\n33, // 759\n33, // 760\n33, // 761\n72, // 762\n79, // 763\n74, // 764\n64, // 765\n33, // 766\n33, // 767\n33, // 768\n33, // 769\n33, // 770\n33, // 771\n24, // 772\n38, // 773\n41, // 774\n41, // 775\n42, // 776\n38, // 777\n34, // 778\n39, // 779\n40, // 780\n28, // 781\n65, // 782\n44, // 783\n32, // 784\n38, // 785\n43, // 786\n43, // 787\n43, // 788\n43, // 789\n42, // 790\n38, // 791\n42, // 792\n43, // 793\n43, // 794\n43, // 795\n43, // 796\n43, // 797\n41, // 798\n41, // 799\n41, // 800\n80, // 801\n48, // 802\n48, // 803\n48, // 804\n81, // 805\n82, // 806\n82, // 807\n82, // 808\n48, // 809\n39, // 810\n40, // 811\n82, // 812\n43, // 813\n44, // 814\n77, // 815\n48, // 816\n39, // 817\n40, // 818\n82, // 819\n43, // 820\n44, // 821\n77, // 822\n48, // 823\n39, // 824\n40, // 825\n82, // 826\n43, // 827\n44, // 828\n77, // 829\n48, // 830\n39, // 831\n40, // 832\n82, // 833\n43, // 834\n44, // 835\n77, // 836\n48, // 837\n39, // 838\n40, // 839\n82, // 840\n43, // 841\n44, // 842\n77, // 843\n48, // 844\n39, // 845\n40, // 846\n82, // 847\n43, // 848\n44, // 849\n77, // 850\n41, // 851\n41, // 852\n43, // 853\n41, // 854\n41, // 855\n38, // 856\n83, // 857\n84, // 858\n48, // 859\n25, // 860\n25, // 861\n84, // 862\n84, // 863\n84, // 864\n84, // 865\n40, // 866\n25, // 867\n25, // 868\n84, // 869\n84, // 870\n84, // 871\n84, // 872\n39, // 873\n85, // 874\n25, // 875\n39, // 876\n25, // 877\n84, // 878\n84, // 879\n84, // 880\n84, // 881\n25, // 882\n25, // 883\n84, // 884\n84, // 885\n84, // 886\n84, // 887\n86, // 888\n25, // 889\n36, // 890\n87, // 891\n40, // 892\n88, // 893\n44, // 894\n44, // 895\n77, // 896\n77, // 897\n77, // 898\n52, // 899\n31, // 900\n33, // 901\n30, // 902\n53, // 903\n54, // 904\n55, // 905\n52, // 906\n31, // 907\n33, // 908\n30, // 909\n53, // 910\n54, // 911\n55, // 912\n52, // 913\n31, // 914\n33, // 915\n30, // 916\n53, // 917\n54, // 918\n55, // 919\n52, // 920\n31, // 921\n33, // 922\n30, // 923\n53, // 924\n54, // 925\n55, // 926\n52, // 927\n31, // 928\n33, // 929\n30, // 930\n53, // 931\n54, // 932\n55, // 933\n52, // 934\n31, // 935\n33, // 936\n30, // 937\n53, // 938\n54, // 939\n55, // 940\n52, // 941\n31, // 942\n33, // 943\n30, // 944\n53, // 945\n54, // 946\n55, // 947\n52, // 948\n31, // 949\n33, // 950\n30, // 951\n53, // 952\n54, // 953\n55, // 954\n52, // 955\n31, // 956\n33, // 957\n30, // 958\n53, // 959\n54, // 960\n55, // 961\n52, // 962\n31, // 963\n33, // 964\n30, // 965\n53, // 966\n54, // 967\n55, // 968\n56, // 969\n33, // 970\n57, // 971\n33, // 972\n58, // 973\n59, // 974\n60, // 975\n59, // 976\n61, // 977\n33, // 978\n56, // 979\n33, // 980\n57, // 981\n33, // 982\n58, // 983\n59, // 984\n60, // 985\n59, // 986\n61, // 987\n33, // 988\n56, // 989\n33, // 990\n57, // 991\n33, // 992\n58, // 993\n59, // 994\n60, // 995\n59, // 996\n61, // 997\n33, // 998\n56, // 999\n33, // 1000\n57, // 1001\n33, // 1002\n58, // 1003\n59, // 1004\n60, // 1005\n59, // 1006\n61, // 1007\n33, // 1008\n56, // 1009\n33, // 1010\n57, // 1011\n33, // 1012\n58, // 1013\n59, // 1014\n60, // 1015\n59, // 1016\n61, // 1017\n33, // 1018\n56, // 1019\n33, // 1020\n57, // 1021\n33, // 1022\n58, // 1023\n59, // 1024\n60, // 1025\n59, // 1026\n61, // 1027\n56, // 1028\n33, // 1029\n57, // 1030\n33, // 1031\n58, // 1032\n59, // 1033\n60, // 1034\n59, // 1035\n61, // 1036\n56, // 1037\n33, // 1038\n57, // 1039\n33, // 1040\n58, // 1041\n59, // 1042\n60, // 1043\n59, // 1044\n61, // 1045\n56, // 1046\n33, // 1047\n57, // 1048\n33, // 1049\n58, // 1050\n59, // 1051\n60, // 1052\n59, // 1053\n61, // 1054\n56, // 1055\n33, // 1056\n57, // 1057\n33, // 1058\n58, // 1059\n59, // 1060\n60, // 1061\n59, // 1062\n61, // 1063\n60, // 1064\n59, // 1065\n62, // 1066\n62, // 1067\n31, // 1068\n33, // 1069\n33, // 1070\n30, // 1071\n63, // 1072\n30, // 1073\n64, // 1074\n57, // 1075\n65, // 1076\n65, // 1077\n53, // 1078\n54, // 1079\n59, // 1080\n33, // 1081\n33, // 1082\n30, // 1083\n60, // 1084\n59, // 1085\n62, // 1086\n62, // 1087\n31, // 1088\n33, // 1089\n33, // 1090\n30, // 1091\n63, // 1092\n30, // 1093\n64, // 1094\n57, // 1095\n65, // 1096\n65, // 1097\n53, // 1098\n54, // 1099\n59, // 1100\n33, // 1101\n64, // 1102\n29, // 1103\n66, // 1104\n67, // 1105\n43, // 1106\n33, // 1107\n34, // 1108\n68, // 1109\n68, // 1110\n68, // 1111\n69, // 1112\n65, // 1113\n63, // 1114\n70, // 1115\n70, // 1116\n53, // 1117\n63, // 1118\n60, // 1119\n43, // 1120\n43, // 1121\n41, // 1122\n63, // 1123\n63, // 1124\n43, // 1125\n32, // 1126\n32, // 1127\n38, // 1128\n63, // 1129\n43, // 1130\n50, // 1131\n63, // 1132\n63, // 1133\n38, // 1134\n63, // 1135\n43, // 1136\n38, // 1137\n63, // 1138\n43, // 1139\n38, // 1140\n63, // 1141\n43, // 1142\n38, // 1143\n63, // 1144\n43, // 1145\n38, // 1146\n63, // 1147\n43, // 1148\n34, // 1149\n38, // 1150\n63, // 1151\n63, // 1152\n63, // 1153\n63, // 1154\n63, // 1155\n63, // 1156\n38, // 1157\n39, // 1158\n40, // 1159\n71, // 1160\n41, // 1161\n41, // 1162\n28, // 1163\n42, // 1164\n63, // 1165\n65, // 1166\n44, // 1167\n43, // 1168\n43, // 1169\n80, // 1170\n48, // 1171\n48, // 1172\n48, // 1173\n81, // 1174\n82, // 1175\n82, // 1176\n82, // 1177\n42, // 1178\n43, // 1179\n39, // 1180\n40, // 1181\n28, // 1182\n89, // 1183\n89, // 1184\n90, // 1185\n32, // 1186\n32, // 1187\n80, // 1188\n48, // 1189\n48, // 1190\n48, // 1191\n81, // 1192\n82, // 1193\n82, // 1194\n82, // 1195\n43, // 1196\n91, // 1197\n43, // 1198\n39, // 1199\n39, // 1200\n39, // 1201\n40, // 1202\n43, // 1203\n43, // 1204\n92, // 1205\n32, // 1206\n93, // 1207\n94, // 1208\n32, // 1209\n32, // 1210\n32, // 1211\n32, // 1212\n32, // 1213\n38, // 1214\n63, // 1215\n39, // 1216\n40, // 1217\n28 // 1218\n]\n\nconst Dna = /* #__PURE__ */Object.freeze({\n  __proto__: null,\n  literal: literal,\n  dagMethod: dagMethod,\n  method: method,\n  variantClass: variantClass,\n  map: map,\n  key: key,\n  updater: updater,\n  variant: variant\n})\n\nconst Bpx = /* #__PURE__ */(function (_Dag) {\n  _inherits(Bpx, _Dag)\n\n  const _super = _createSuper(Bpx)\n\n  function Bpx () {\n    _classCallCheck(this, Bpx)\n\n    return _super.call(this, Dna)\n  }\n\n  return Bpx\n}(Dag))\n\nexport { Blob, Bool, Bpx, Count, Dag, Float, Index, Integer, Numeric, Option, Quantity, Slope, Text, nodeLabel }\n","/**\n * @file Data and methods to support Quantity units-of-measure and conversions.\n * @copyright 2020 Systems for Environmental Management\n * @author Collin D. Bevins, <cbevins@montana.com>\n * @license MIT\n * @version 0.1.0\n * #coverage-20200506\n */\n\n/**\n  * UnitsOfMeasure defines all base units which are subsequently\n  * which are subsequently exponentiated and/or combined into\n  * derived units-of-measure.\n  *\n  * Some examples:\n  * - the distance UoM 'ft' and the time UoM 'min' are combined\n  *   to form the derived UoM velocity of 'ft/min'\n  * - the distance UoM 'ft' is eponentiated to form area 'ft2' and volume 'ft3'\n  * - and so forth, such as 'btu/ft2-s'\n  *\n  * The array also includes UoMs with special names that cannot be parsed\n  * into their base units; 'ac', 'ha', and 'W' for example.  Otherwise, only the\n  * fundamental units are defined here.\n  *\n  * Each entry is a 2-element array:\n  * - Element 0 is the unit-of-measure key,\n  * - Element 1 is a multiplication factor for converting a value\n  *   from its (arbitrary) *base* amount into the units-of-measure key amount.\n  *\n  * For example, to convert from 'x' ft into\n  * - inches, multiply by 12,\n  * - yards, multiply by 1/3, and\n  * - chains, multiply by 1/11\n  *\n  * The *base* unit-of-measure is arbitrarily chosen for each fundamental\n  * quantity (arc, distance, energy, mass, ratio, temperature, time).\n  * While it is never necessary for the client to know what base unit was chosen,\n  * it can be ascertained by its multiplication factor === 1.\n  */\nvar UnitsOfMeasure = [// unity\n['1', 1], // arc ('deg' is the base)\n['deg', 1], [\"\\xB0\", 1], [\"\\u2109\", 1], // oF\n[\"\\u2103\", 1], // oC\n// distance ('ft' is base)\n['ft', 1], // based on [ft_us}, NOT [ft_i]]\n['ch', 1 / 66], ['in', 12], ['mi', 1 / 5280], ['yd', 1 / 3], ['m', 0.3048], ['cm', 30.48], ['mm', 304.8], ['km', 0.0003048], ['ac', 1 / 43560], ['ha', 1 / 107639], ['W', 1 / 0.057], // energy ('btu' is base)\n['btu', 1], // [Btu_IT]\n['J', 1055.05585262], // btu_IT:\n// mass ('lb' is base)\n['lb', 1], ['oz', 16], ['ton', 1 / 2000], ['kg', 0.45359237], ['g', 453.59237], ['T', 0.00045359237], // 1 / 2204.622621848776\n// ratio ('ratio' is base)\n['ratio', 1], ['percent', 100], ['%', 100], // temp ('F' is base)\n['F', 1], ['C', 5 / 9], ['K', 5 / 9], // time ('min' is base)\n['min', 1], ['s', 60], ['h', 1 / 60], ['d', 1 / (60 * 24)], ['y', 1 / (60 * 24 * 365)]];\nvar UnitsMap = new Map(UnitsOfMeasure);\n\n/**\n * @file Units-of-measure conversion methods\n * @copyright 2020 Systems for Environmental Management\n * @author Collin D. Bevins, <cbevins@montana.com>\n * @license MIT\n * @version 0.1.0\n * #coverage-20200506\n */\n/**\n * Returns the 'asUnits' amount that is equivalent to base units `baseAmount`\n *\n * This is used by the behaveplus-dag Node class to convert Node values\n * (which are stored in base units) to some other display/output units-of-measure.\n *\n * @param {number} baseAmount The amount of some Quantity expressed in its base units\n * @param {string} asUnits The amount of the Quantity expressed in the `asUnits`\n */\n\nfunction asAmount(baseAmount, asUnits) {\n  // Special case:: temperature scale\n  if (asUnits === 'F' || asUnits === \"\\u2109\") {\n    return baseAmount;\n  } else if (asUnits === 'C' || asUnits === \"\\u2103\") {\n    return (baseAmount - 32) * 5 / 9;\n  } else if (asUnits === 'K') {\n    return 273.15 + (baseAmount - 32) * 5 / 9;\n  }\n\n  var f = factor(asUnits);\n  return f * baseAmount;\n}\n/**\n * Returns the base amount that is equivalent to `fromAmount` `fromUnits`\n *\n * This is used by the behaveplus-dag Node class to convert display/input amounts\n * into Node values (which are stored in base units).\n *\n * @param {number} fromAmount The amount of some Quantity expressed in `asUnits`\n * @param {string} fromUnits The `fromAmount` units-of-measure\n */\n\nfunction baseAmount(fromAmount, fromUnits) {\n  // Special case:: temperature scale\n  if (fromUnits === 'F' || fromUnits === \"\\u2109\") {\n    return fromAmount;\n  } else if (fromUnits === 'C' || fromUnits === \"\\u2103\") {\n    return 32 + 9 * fromAmount / 5;\n  } else if (fromUnits === 'K') {\n    return 32 + 9 * (fromAmount - 273.15) / 5;\n  }\n\n  var f = factor(fromUnits);\n  return fromAmount / f;\n}\n/**\n * Converts an amount from some units-of-measure into another units-of-measure.\n *\n * @param {number} fromAmount The amount of some quantity as measured in `fromUnits`\n * @param {string} fromUnits The units-of-measure of the `fromAmount`\n * @param {string} intoUnits The units-of-measure of the converted amount.\n * @return {number} The `fromAmount` converted into `intoUnits`\n *\n * NOTE: This does not test if `fromUnits` and `intoUnits` are compatible!\n */\n\nfunction convert(fromAmount, fromUnits, intoUnits) {\n  return asAmount(baseAmount(fromAmount, fromUnits), intoUnits);\n}\n/**\n * Returns the multiplication factor to convert an amount from `units`\n * into its (anonymous) base units.\n *\n *  This function does some basic parsing of compound units-of-measure,\n *  and can handle the following syntax:\n * - 'ft' (simple one-dim measure, simple single term)\n * - 'ft2'  (multi-dim measure, simple single term)\n * - 'ft3' (multi-dim measure, simple single term)\n * - 'ft/min' (simple one-dim numerator with simple on-dim denom)\n * - 'ft2/ft3' (simple multi-dim numerator with simple multi-dim denom)\n * - '1/ft'  (reduced simple multi-dim numerator with simple multi-dim denom)\n * - 'lb/ft2'\n * - 'T/ha', 't/ac' (multi-dim measure with an alias)\n * - 'lb/ft3'\n * - 'btu/ft/s'\n * - 'btu/ft-s'\n * - 'ft-lb/min'\n *\n * This function can also be used to ensure correct uinots-of-measure strings,\n * as it will throw an Error if it is unable to parse the units.\n *\n * @param {string} units Units-of-measure string.  The following syntax is accepted:\n * @returns {number} The multiplication factor to convert an amount from some `units`\n * into its (anonymous) base units.\n */\n\nfunction factor(units) {\n  var f = 1; // split into at least 1 numerator and 0 or more denominators\n\n  units.split('/').forEach(function (part, idx) {\n    // Special case: numerator is just '1' as in '1/ft'\n    if (idx === 0 && part === '1') ; else {\n      // split into terms\n      part.split('-').forEach(function (term) {\n        var power = 1;\n        var uom = term;\n        var lastChar = term.charAt(term.length - 1);\n\n        if (lastChar === '2') {\n          uom = term.substring(0, term.length - 1);\n          power = 2;\n        } else if (lastChar === '3') {\n          power = 3;\n          uom = term.substring(0, term.length - 1);\n        }\n\n        if (!UnitsMap.has(uom)) {\n          throw new Error(\"Units '\".concat(units, \" term '\").concat(term, \"' uom '\").concat(uom, \"' is invalid\"));\n        }\n\n        var termFactor = Math.pow(UnitsMap.get(uom), power); // If before the first '/', multiply; otherwise, divide\n\n        f *= idx === 0 ? termFactor : 1 / termFactor;\n      });\n    }\n  });\n  return f;\n}\n\nexport { UnitsMap, UnitsOfMeasure, asAmount, baseAmount, convert, factor };\n","/**\n * Adapter between behaveplus-radical and Firescope\n */\n\n// JEST-FIX Jest tests require a file to transform\nimport * as Dag from './behaveplus.esm.js'\n// import * as Dag from '@cbevins/behaveplus-radical'\n\nimport * as Uom from '@cbevins/behaveplus-uom'\nimport { Config, Input, Output } from './Variables.js'\n\nexport class Firescope {\n  constructor () {\n    this.dag = new Dag.Bpx()\n\n    this.input = { ...Input }\n    Object.defineProperty(this.input, 'uomSlate', { enumerable: false, writable: true, value: 'usc' })\n    Object.defineProperty(this.input, 'behavior', { enumerable: false, writable: true, value: 'spreadRate' })\n    // By using Object.keys(Input), we skip iterating over non-variable properties\n    Object.keys(Input).forEach(key => {\n      const item = this.input[key]\n      item.node = this.dag.get(item.nodeKey) // store this variable's DAG Node reference\n      this.setValues(item, item.value.base) // set all this variable's uom values\n    })\n\n    this.selected = []\n    this.output = { ...Output }\n    // By using Object.keys(Output), we skip iterating over non-variable properties\n    Object.keys(Output).forEach(key => {\n      const item = this.output[key]\n      item.node = this.dag.get(item.nodeKey) // store this variable's DAG Node reference\n      this.selected.push([item.node, true]) // Add all outputs to the dag selected array\n    })\n    this.dag.setConfigs(Config)\n\n    Object.defineProperty(this.input, 'graph', { enumerable: false, writable: true, value: {} })\n    this.input.graph = {\n      x: {\n        key: 'windSpeedAtMidflame',\n        item: null,\n        values: { base: [], uss: [], usc: [], sim: [] }\n      },\n      y: {\n        key: 'spreadRate',\n        item: null,\n        values: { base: [], uss: [], usc: [], sim: [] }\n      }\n    }\n    this.runSingle()\n  }\n\n  runSingle (input = null) {\n    if (input) {\n      this.input = input\n    }\n    this.dag.setSelected(this.selected)\n\n    // Build the Dag input array and submit for a run\n    // Must ensure that all input controls have stored *base* values\n    // in the item.value.base property\n    const dagInput = []\n    // By using Object.keys(Input), we skip iterating over non-variable properties\n    Object.keys(Input).forEach(key => {\n      const item = this.input[key]\n      this.setValues(item, item.value.base)\n      dagInput.push([item.node, [item.value.base]])\n    })\n    this.dag.runInputs(dagInput)\n\n    // Retrieve selected Node values\n    // By using Object.keys(Output), we skip iterating over non-variable properties\n    Object.keys(Output).forEach(key => {\n      const item = this.output[key]\n      this.setValues(item, item.node.value)\n    })\n\n    this.runRange()\n\n    // Return this.output so run() can be used inside the Svelte derived store\n    return this.output\n  }\n\n  // Run range variable\n  runRange () {\n    const x = this.input.graph.x\n    x.item = this.input[x.key]\n    x.values.base = generateRange(x.item.range.min, x.item.range.max, x.item.range.step)\n    const y = this.input.graph.y\n    y.item = this.output[y.key]\n    const xBase = x.item.value.base // save for later restore\n    this.dag.setSelected([[y.item.node, true]])\n    this.dag.runInputs([[x.item.node, x.values.base]])\n\n    // Store the outputs\n    y.values.base = [...this.dag.dna.results.map.get(y.item.node)]\n\n    // Convert results to various units-of-measure\n    y.values.usc = []\n    y.values.uss = []\n    y.values.sim = []\n    let u = y.item.variant.units\n    y.values.base.forEach(baseValue => {\n      y.values.usc.push(Uom.convert(baseValue, u.base, u.usc))\n      y.values.uss.push(Uom.convert(baseValue, u.base, u.uss))\n      y.values.sim.push(Uom.convert(baseValue, u.base, u.sim))\n    })\n    x.values.usc = []\n    x.values.uss = []\n    x.values.sim = []\n    u = x.item.variant.units\n    x.values.base.forEach(baseValue => {\n      x.values.usc.push(Uom.convert(baseValue, u.base, u.usc))\n      x.values.uss.push(Uom.convert(baseValue, u.base, u.uss))\n      x.values.sim.push(Uom.convert(baseValue, u.base, u.sim))\n    })\n    x.item.value.base = xBase\n  }\n\n  setValues (item, baseValue) {\n    item.value.base = baseValue\n    if (item.variant.type === 'Quantity') {\n      const u = item.variant.units\n      item.value.usc = Uom.convert(baseValue, u.base, u.usc)\n      item.value.uss = Uom.convert(baseValue, u.base, u.uss)\n      item.value.sim = Uom.convert(baseValue, u.base, u.sim)\n    } else {\n      item.value.usc = baseValue\n      item.value.uss = baseValue\n      item.value.sim = baseValue\n    }\n  }\n\n  /**\n   * Returns the *item*'s display value (and units-of-measure) for the *uomSlate*\n   *\n   * @param {ref} item Reference to this.input or this.output variable\n   * @param {string} uomSlate One of null, 'base', 'usc', 'uss', or 'sim'.\n   * If null, then this.input.uomSLate is applied.\n   * @return {string} The *item*'s display value (and units-of-measure) for the *uomSlate*\n   */\n  displayString (item, uomSlate = null) {\n    if (item.variant.type === 'Quantity') {\n      const slate = !uomSlate ? this.input.uomSlate : uomSlate\n      const decimals = item.variant.decimals[slate]\n      const display = item.value[slate].toFixed(decimals)\n      const units = item.variant.units[slate]\n      return display + ' ' + units\n    }\n    return item.value.base\n  }\n\n  /**\n   * Returns the *item*'s display units-of-measure for the *uomSlate*.\n   *\n   * @param {ref} item Reference to this.input or this.output variable\n   * @param {string} uomSlate One of null, 'base', 'usc', 'uss', or 'sim'.\n   * If null, then this.input.uomSLate is applied.\n   * @return {string} The *item*'s units-of-measure for the *uomSlate*.\n   */\n  displayUnits (item, uomSlate = null) {\n    if (item.variant.type === 'Quantity') {\n      const slate = !uomSlate ? this.input.uomSlate : uomSlate\n      return item.variant.units[slate]\n    }\n    return ''\n  }\n\n  /**\n   * Returns the *item*'s display value for the *uomSlate*.\n   *\n   * @param {ref} item Reference to this.input or this.output variable.\n   * @param {string} uomSlate One of null, 'base', 'usc', 'uss', or 'sim'.\n   * If null, then this.input.uomSLate is applied.\n   * @return {string} The *item*'s display value for the *uomSlate*.\n   */\n  displayValue (item, uomSlate = null) {\n    if (item.variant.type === 'Quantity') {\n      const slate = !uomSlate ? this.input.uomSlate : uomSlate\n      const decimals = item.variant.decimals[slate]\n      return item.value[slate].toFixed(decimals)\n    }\n    return item.value.base\n  }\n}\n\nexport const generateRange = (start, stop, step) => Array.from({ length: (stop - start) / step + 1 }, (_, i) => start + (i * step))\n","/* eslint-disable camelcase */\n/**\n * The FireScope behaveplus-radical svelte data store\n */\nimport { derived, writable } from 'svelte/store'\nimport { Firescope } from './Firescope.js'\n\nexport const firescope = new Firescope()\nexport const _input = writable(firescope.input)\nexport const _output = derived(_input, $_input => {\n  const output = firescope.runSingle($_input)\n  return { ...output }\n})\n","<script>\r\n  import AirTemperature from '../slider/AirTemperature.svelte'\r\n  import DeadFuelMoisture from '../slider/DeadFuelMoisture.svelte'\r\n  import ElapsedTime from '../slider/ElapsedTime.svelte'\r\n  import FuelSelector from '../input/FuelSelector.svelte'\r\n  import LiveFuelMoisture from '../slider/LiveFuelMoisture.svelte'\r\n  import SlopeAspect from '../slider/SlopeAspect.svelte'\r\n  import UnitsSelector from '../input/UnitsSelector.svelte'\r\n  import WindSpeedDirection from '../slider/WindSpeedDirection.svelte'\r\n\r\n  import { firescope } from '../../model/store.js'\r\n  import { slopeDegrees } from '../../model/compass.js'\r\n\r\n  export let _input\r\n  // export let _output\r\n</script>\r\n\r\n<!-- Do NOT use Bootstrap Table -->\r\n<div class='row'>\r\n  <div class='col'>\r\n    <FuelSelector bind:key={$_input.fuelModelCatalogKey.value.base}/>\r\n  </div>\r\n  <div class='col'>\r\n    <UnitsSelector bind:units={$_input.uomSlate} />\r\n  </div>\r\n</div>\r\n\r\n<table>\r\n  <tr>\r\n    <td><DeadFuelMoisture\r\n      bind:tl1h={$_input.fuelMoistureDead1.value.base}\r\n      bind:tl10h={$_input.fuelMoistureDead10.value.base}\r\n      bind:tl100h={$_input.fuelMoistureDead100.value.base} /></td>\r\n    <td><LiveFuelMoisture\r\n      bind:herb={$_input.fuelMoistureLiveHerb.value.base}\r\n      bind:stem={$_input.fuelMoistureLiveStem.value.base} /></td>\r\n    <td><SlopeAspect\r\n      bind:steepness={$_input.slopeSteepnessRatio.value.base}\r\n      bind:aspect={$_input.slopeDirectionAspect.value.base} /></td>\r\n    <td><WindSpeedDirection\r\n      bind:speed={$_input.windSpeedAtMidflame.value.base}\r\n      bind:direction={$_input.windDirectionSourceFromNorth.value.base} /></td>\r\n    <td><AirTemperature\r\n      bind:f={$_input.airTemperature.value.base} /></td>\r\n    <td><ElapsedTime\r\n      bind:minutes={$_input.timeSinceIgnition.value.base} /></td>\r\n  </tr>\r\n</table>\r\n","<script>\n  import Tabs from './Tabs.svelte'\n  import InputPanel from './InputPanel.svelte'\n\n  export let _input\n  export let _output\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"firescope.css\">\n</svelte:head>\n\n<div class=\"container-lg\">\n  <div class='row'>\n    <div class='col-sm'>\n      <Tabs _input={_input} _output={_output} />\n    </div>\n  </div>\n  <hr/>\n  <div class='row'>\n    <div class='col-sm'>\n      <InputPanel _input={_input} _output={_output} />\n      </div>\n  </div>\n</div>\n","<script>\n  import Main from './Main.svelte'\n  export let _input\n  export let _output\n</script>\n\n<main>\n  <Main _input={_input} _output={_output} />\n</main>\n","// import App from './starter/App.svelte'\r\nimport App from './component/app/App.svelte'\r\nimport { _input, _output } from './model/store.js'\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n  props: {\r\n    _input: _input,\r\n    _output: _output\r\n  }\r\n})\r\n\r\nexport default app\r\n"],"names":["linear","format1","format2","Compass.point","Compass.slopeDegrees","update","opposite","slopeDegrees","slopeRatio","bind","Config","AirTemperature","fli","ros","rxi","UnitsOfMeasure","UnitsMap","asAmount","factor","baseAmount","convert","Dag.Bpx","Uom.convert"],"mappings":"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AE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EA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,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;IACrC,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,8BAA8B,GAAG;IACvC;IACA,EAAE,GAAG;AACL;IACA;IACA,EAAE,KAAK;AACP;IACA;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,IAAI;IACN;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,IAAI;IACN;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,IAAI;IACN;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;AACP;IACA;IACA,EAAE,KAAK;IACP;IACA,EAAE,IAAI;IACN;IACA,EAAE,KAAK;IACP;IACA,EAAE,KAAK;AACP;IACA;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CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACE,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,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E,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAA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,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACC,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACC,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACC,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACC,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACC,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,cAAckBAAkB,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,G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EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAACA,KAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAACD,KAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC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AC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzvC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChhH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChhH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtxJ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChhH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChhH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtxJ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,E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AE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC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E,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1H,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACrH,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1H,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1H,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CA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,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,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"}